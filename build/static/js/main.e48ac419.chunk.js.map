{"version":3,"sources":["config.js","redux/actions/auth.actions.js","components/Footer.js","components/DisplayErrors.js","components/LeaderboardTable.js","containers/Leaderboard.js","redux/actions/tournament.actions.js","components/Countdown.js","components/MyTournamentsTable.js","containers/MyTournaments.js","redux/actions/entry.actions.js","components/TournamentModal.js","components/LobbyTable.js","containers/Lobby.js","containers/Login.js","redux/actions/trade.actions.js","components/SearchBar.js","components/Chart.js","components/TradeModal.js","components/SnackBarDisplay.js","components/TradeBar.js","components/LatestPrice.js","components/MyPositions.js","higherOrderComponents/withMediaQuery.js","components/TournamentBar.js","components/TradeHistoryTable.js","components/AllEntrantsTable.js","containers/Tournament.js","components/LogoutModal.js","containers/NavBar.js","components/CreateTournamentModal.js","containers/CreateTournament.js","App.js","redux/reducers/auth.reducers.js","redux/reducers/tournament.reducers.js","redux/reducers/entry.reducers.js","redux/reducers/trade.reducers.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["SERVER_URL","fetchUserInfoSuccess","userInfo","type","payload","fetchUserInfoFailure","error","loginWithToken","token","dispatch","a","fetch","method","headers","result","status","json","localStorage","accessToken","userId","_id","Copyright","Typography","variant","style","color","align","Date","getFullYear","useStyles","makeStyles","theme","footer","padding","spacing","maxWidth","marginTop","backgroundColor","palette","primary","dark","icon","text","secondary","width","Footer","classes","Fragment","className","Grid","container","item","xs","component","withSnackbar","connect","state","authErrors","auth","props","field","console","log","enqueueSnackbar","descendingComparator","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","order","onRequestSort","TableHead","TableRow","tableHead","map","headCell","TableCell","key","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","root","paddingLeft","paddingRight","toolbar","title","fontWeight","flexGrow","stonkKing","main","EnhancedTableToolbar","Toolbar","alignItems","justify","Avatar","src","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","row","tablePagination","LeaderboardTable","React","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","rows","users","user","username","avatar","wins","accountBalance","numOfEntries","entries","length","Paper","TableContainer","Table","aria-labelledby","aria-label","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","hover","role","tabIndex","scope","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","Leaderboard","then","res","setState","this","mainContainer","Component","withStyles","breakpoints","up","withTheme","fetchTournamentsSuccess","tournamentsArr","getTournaments","err","Countdown","countdown","now","getTime","timeleft","countDownEnd","days","Math","floor","hours","minutes","seconds","overMsg","intervalId","setInterval","clearInterval","enterButton","MyTournamentsTable","tournament","name","entryFee","totalPrize","start","startTime","end","endTime","Button","autoFocus","Link","to","MyTournaments","userTournaments","getUserTournaments","forEach","entry","push","fetchEntryInfoSuccess","entryInfo","createEntrySuccess","fetchEntriesByTournamentIdSuccess","entriesArr","TournamentModal","entered","handleSignUp","handleEnter","tournamentInfo","Dialog","open","onClose","handleModal","dialogContainer","dialogTitle","DialogTitle","timer","DialogContent","dialogContent","currentUser","calcContainer","DialogContentText","calcTitle","entryLimit","DialogActions","cancelButton","signUpButton","textAlign","light","borderBottom","borderColor","display","fontSize","LobbyTable","handleClickTournamentRow","Lobby","tableHeader","modalOpen","tournamentClickedInfo","tournamentId","createEntry","updatedTournament","find","t","userEntry","entryData","body","JSON","stringify","createButton","tableCellHeader","tableCell","textDecoration","Login","signIn","setSignIn","bool","handleField","e","handleLogin","password","email","CssBaseline","sm","md","image","elevation","square","form","noValidate","TextField","fullWidth","onChange","InputLabelProps","cssLabel","focused","cssFocused","InputProps","cssOutlinedInput","notchedOutline","required","autoComplete","FormControlLabel","control","Checkbox","submit","Box","mt","credentials","signInOrUp","minHeight","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","input","borderWidth","createTradeSuccess","tradeInfo","fetchTradesByEntrySuccess","tradesByEntry","getTradesByEntryId","entryId","popper","inputFocused","groupLabel","option","inputRoot","SearchBar","setOpen","options","setOptions","loading","useEffect","Autocomplete","onOpen","getOptionSelected","getOptionLabel","onInputChange","results","bestMatches","val","handleSearchSubmit","ListboxProps","listBox","renderInput","params","endAdornment","CircularProgress","size","Chart","grid","line","stroke","axis","ticks","fill","legend","crosshair","data","right","bottom","left","xScale","format","xScaleFormat","precision","xFormat","yScale","min","max","stacked","reverse","axisTop","axisRight","axisLeft","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","axisBottom","colors","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","dialogHeader","textFieldContainer","sharesField","borderRadius","sharesFieldInput","button","TradeModal","buyOrSell","currentBalance","amountOfShares","price","stockTicker","round","toFixed","currentEntry","tournamentBalance","defaultValue","handleShareField","inputProps","handleTrade","Alert","SnackBarDisplay","Snackbar","autoHideDuration","handleClose","anchorOrigin","horizontal","vertical","severity","message","TradeBar","shareAmountField","openModal","openSnackBar","handleCloseSnackBar","reason","handleClickSnackBar","createTrade","time","currentPrice","getCurrentEntry","snackbarmessage","snackbarErr","createdTrade","buyButton","sellButton","tradeObj","marginRight","LatestPrice","fetchPrice","searchString","priceData","setPrice","MyPositions","hasPositions","tradeData","filter","self","indexOf","ticker","netShares","averagePrice","sharePriceXNumOfSharesSum","totalShares","trade","withMediaQuery","args","mediaQuery","useMediaQuery","TournamentInformation","setView","TournamentBar","drawerOpen","setViewAndCloseDrawer","view","AppBar","SwipeableDrawer","anchor","menuButton","mobileTitles","TradeHistoryTable","formattedDate","date","getHours","getMinutes","ampm","strTime","getMonth","getDate","formatDate","timeTraded","parseFloat","AllEntrantsTable","numOfTrades","trades","Tournament","stockData","x","y","stockInfo","symbol","currentSearch","timeFunction","intradayInterval","currentView","getPriceData","queryString","formatPriceQuery","timeSeriesDataResponse","timeSeriesData","stockInfoResponse","priceDataResponse","dataKeys","Object","keys","timeSeriesHash","formattedData","exchange","sector","handleGetCurrentEntry","getEntryByUsernameAndTournamentName","match","undefined","handleChangeTimeFunction","changeView","getEntriesByTournamentId","searchBar","marginLeft","chartContainer","tournamentEntries","tournaments","logout","clear","NavBar","handleLogoutModal","nav","userContainer","credits","loginButton","menuIcon","List","list","ListItem","listItem","ListItemText","listText","down","alignContent","paddingTop","dialogBox","textContainer","lobbyButton","CreateTournamentModal","history","useHistory","createTournamentSuccess","tournamentName","createTournament","DateAndTimeSelectors","utils","DateFnsUtils","dateLabel","dateValue","handleChangeTime","KeyboardButtonProps","timeLabel","timeValue","CreateTournament","createTournamentLoading","selectedDateForStart","selectedTimeForStart","selectedDateForEnd","selectedTimeForEnd","handleChange","formatTime","dateSelected","timeSelected","getSeconds","toString","createTournamentFetch","createdTournament","catch","titleContainer","App","handleLoginUser","base","exact","path","render","routeProps","initialState","loggedIn","authReducer","action","loadingTournaments","tournamentsError","tournamentReducer","createdEntry","loadingCurrentEntry","loadingCreatedEntry","loadingTournamentEntries","currentEntryError","createdEntryError","tournamentEntriesError","entryReducer","loadingCreatedTrade","loadingTradeByEntryArr","createTradeErr","tradesByEntryErr","tradeReducer","combineReducers","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","createMuiTheme","ReactDOM","ThemeProvider","store","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.e48ac419.chunk.js","sourcesContent":["export const SERVER_URL = \"https://stonk-kings.herokuapp.com\";\n","import { SERVER_URL } from \"../../config\";\nexport const FETCH_USER_INFORMATION_BEGIN = \"FETCH_USER_INFORMATION_BEGIN\";\nexport const FETCH_USER_INFORMATION_SUCCESS = \"FETCH_USER_INFORMATION_SUCCESS\";\nexport const FETCH_USER_INFORMATION_FAILURE = \"FETCH_USER_INFORMATION_FAILURE\";\nexport const END_USER_SESSION = \"END_USER_SESSION\";\n\nconst fetchUserInfoBegin = () => ({\n  type: FETCH_USER_INFORMATION_BEGIN,\n});\n\nconst fetchUserInfoSuccess = (userInfo) => ({\n  type: FETCH_USER_INFORMATION_SUCCESS,\n  payload: { userInfo },\n});\n\nconst fetchUserInfoFailure = (error) => ({\n  type: FETCH_USER_INFORMATION_FAILURE,\n  payload: { error },\n});\n\nconst endUserSession = () => ({\n  type: END_USER_SESSION,\n});\n\nexport const auth = (credentials, signInOrUp) => {\n  return async (dispatch) => {\n    dispatch(fetchUserInfoBegin());\n    try {\n      const result = await fetch(`${SERVER_URL}/api/auth/${signInOrUp}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          ...credentials,\n        }),\n      });\n      if (result.status === 200) {\n        const userInfo = await result.json();\n        localStorage.token = userInfo.accessToken;\n        localStorage.userId = userInfo._id;\n        dispatch(fetchUserInfoSuccess(userInfo));\n      } else {\n        const error = await result.json();\n        dispatch(fetchUserInfoFailure(error));\n      }\n    } catch (err) {\n      dispatch(fetchUserInfoFailure(err));\n    }\n  };\n};\n\nexport const loginWithToken = (token) => {\n  return async (dispatch) => {\n    dispatch(fetchUserInfoBegin());\n    try {\n      const result = await fetch(`${SERVER_URL}/api/auth/loginWithToken`, {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token,\n        },\n      });\n\n      if (result.status === 200) {\n        const userInfo = await result.json();\n        localStorage.token = userInfo.accessToken;\n        localStorage.userId = userInfo._id;\n        dispatch(fetchUserInfoSuccess(userInfo));\n      } else {\n        const error = await result.json();\n        dispatch(fetchUserInfoFailure(error));\n      }\n    } catch (err) {\n      dispatch(fetchUserInfoFailure(err));\n    }\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    dispatch(endUserSession());\n    localStorage.clear();\n  };\n};\n","import React from \"react\";\n// MATERIAL-UI\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" style={{ color: \"white\" }} align=\"center\">\n      {\"Copyright © \"}\n      Stonk Kings\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    padding: theme.spacing(4),\n    maxWidth: \"100%\",\n    marginTop: 20,\n    backgroundColor: theme.palette.primary.dark,\n  },\n  icon: {\n    color: theme.palette.text.secondary,\n    width: \"100%\",\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Grid container>\n          <Grid item xs={4}>\n            <InstagramIcon className={classes.icon} />\n          </Grid>\n          <Grid item xs={4}>\n            <TwitterIcon className={classes.icon} />\n          </Grid>\n          <Grid item xs={4}>\n            <FacebookIcon className={classes.icon} />\n          </Grid>\n        </Grid>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          style={{ color: \"white\" }}\n          component=\"p\"\n        >\n          Follow us on Social Media!\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withSnackbar } from \"notistack\";\n\nconst DisplayErrors = (props) => {\n  for (let field in props.authErrors) {\n    console.log(props.authErrors[field]);\n    props.enqueueSnackbar(props.authErrors[field], { variant: \"error\" });\n  }\n  return null;\n};\n\nconst mapStateToProps = (state) => ({\n  authErrors: state.auth.error,\n});\n\nexport default withSnackbar(connect(mapStateToProps)(DisplayErrors));\n","import React from \"react\";\n// MATERIAL UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst headCells = [\n  { id: \"username\", numeric: false, disablePadding: false, label: \"Username\" },\n  {\n    id: \"numOfEntries\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Number of Entries\",\n  },\n  { id: \"wins\", numeric: true, disablePadding: false, label: \"Wins\" },\n  {\n    id: \"accountBalance\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Account Balance\",\n  },\n];\n\nconst EnhancedTableHead = (props) => {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  toolbar: {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.dark,\n  },\n  title: {\n    fontWeight: \"bold\",\n    flexGrow: 1,\n  },\n  stonkKing: {\n    fontWeight: \"bold\",\n    color: theme.palette.secondary.main,\n    paddingRight: 10,\n  },\n}));\n\nconst EnhancedTableToolbar = () => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar className={classes.toolbar}>\n      <Grid\n        container\n        item\n        alignItems=\"flex-start\"\n        justify=\"flex-end\"\n        direction=\"row\"\n        xs={12}\n      >\n        <Typography\n          style={{ flexGrow: 1 }}\n          className={classes.title}\n          variant=\"h4\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Leaderboard\n        </Typography>\n\n        <Typography\n          align=\"right\"\n          className={classes.stonkKing}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          L33TPikachu\n        </Typography>\n        <Avatar\n          src={\"https://i1.sndcdn.com/avatars-000547985256-ntiz46-t500x500.jpg\"}\n        />\n      </Grid>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: \"bold\",\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n  },\n  row: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.dark,\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark,\n  },\n}));\n\nconst LeaderboardTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"accountBalance\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.users.map((user) => {\n      return {\n        username: user.username,\n        avatar: user.avatar,\n        wins: user.wins,\n        accountBalance: user.accountBalance,\n        numOfEntries: user.entries.length,\n      };\n    });\n  };\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                      <TableCell\n                        className={classes.row}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Grid container alignItems=\"flex-start\" direction=\"row\">\n                          <Avatar src={row.avatar} />\n                          <Typography\n                            variant=\"h5\"\n                            style={{ marginTop: 10, paddingLeft: 10 }}\n                          >\n                            {row.username}\n                          </Typography>\n                        </Grid>\n                      </TableCell>\n                      {row.username === \"Pikachu\" ? (\n                        <TableCell className={classes.row} align=\"right\">\n                          12\n                        </TableCell>\n                      ) : (\n                        <TableCell className={classes.row} align=\"right\">\n                          {row.numOfEntries}\n                        </TableCell>\n                      )}\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.wins}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.accountBalance}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default LeaderboardTable;\n","import React from \"react\";\nimport LeaderboardTable from \"../components/LeaderboardTable\";\nimport { SERVER_URL } from \"../config\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = (theme) => ({\n  mainContainer: {\n    [theme.breakpoints.up(\"lg\")]: {\n      padding: 100,\n    },\n  },\n});\n\nclass Leaderboard extends React.Component {\n  state = {\n    users: [],\n  };\n\n  componentDidMount() {\n    fetch(`${SERVER_URL}/api/users`)\n      .then((res) => res.json())\n      .then((users) => {\n        this.setState({\n          users: users,\n        });\n      });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.mainContainer}>\n        <LeaderboardTable users={this.state.users} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(Leaderboard);\n","import { SERVER_URL } from \"../../config\";\nexport const FETCH_TOURNAMENTS_BEGIN = \"FETCH_TOURNAMENTS_BEGIN\";\nexport const FETCH_TOURNAMENTS_SUCCESS = \"FETCH_TOURNAMENTS_SUCCESS\";\nexport const FETCH_TOURNAMENTS_FAILURE = \"FETCH_TOURNAMENTS_FAILURE\";\n\nconst fetchTouranmentsBegin = () => ({\n  type: FETCH_TOURNAMENTS_BEGIN,\n});\n\nconst fetchTournamentsSuccess = (tournamentsArr) => ({\n  type: FETCH_TOURNAMENTS_SUCCESS,\n  payload: { tournamentsArr },\n});\n\nconst fetchTournamentsFailure = (err) => ({\n  type: FETCH_TOURNAMENTS_FAILURE,\n  payload: { err },\n});\n\nexport const getTournaments = () => async (dispatch) => {\n  dispatch(fetchTouranmentsBegin());\n  try {\n    const result = await fetch(`${SERVER_URL}/api/tournaments`);\n    const tournamentsArr = await result.json();\n    dispatch(fetchTournamentsSuccess(tournamentsArr));\n  } catch (err) {\n    dispatch(fetchTournamentsFailure(err));\n  }\n};\n","import React from \"react\";\n\nclass Countdown extends React.Component {\n  state = {\n    countdown: \"loading...\",\n  };\n\n  componentDidMount() {\n    const intervalId = setInterval(this.countdown, 1000);\n    this.setState({ intervalId: intervalId });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  countdown = () => {\n    let now = new Date().getTime();\n\n    let timeleft = this.props.countDownEnd - now;\n\n    // Calculating the days, hours, minutes and seconds left\n    let days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\n    let hours = Math.floor(\n      (timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    );\n    let minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = Math.floor((timeleft % (1000 * 60)) / 1000);\n    this.setState({\n      countdown: `${days} days, ${hours}:${minutes}:${seconds}`,\n    });\n    if (timeleft < 0) {\n      // clearInterval(this.state.intervalId);\n      this.setState({\n        countdown: this.props.overMsg,\n      });\n    }\n  };\n\n  render() {\n    return this.state.countdown;\n  }\n}\n\nexport default Countdown;\n","import React from \"react\";\nimport Countdown from \"./Countdown\";\nimport { Link } from \"react-router-dom\";\n// MATERIAL UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Tournament Name\",\n  },\n  { id: \"entryFee\", numeric: true, disablePadding: false, label: \"Entry Fee\" },\n  { id: \"entries\", numeric: true, disablePadding: false, label: \"Entries\" },\n  {\n    id: \"totalPrize\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Total Prize\",\n  },\n  { id: \"start\", numeric: true, disablePadding: false, label: \"Start\" },\n  { id: \"end\", numeric: true, disablePadding: false, label: \"End\" },\n  { id: \"enter\", numeric: true, disablePadding: false, label: \"Enter\" },\n];\n\nconst EnhancedTableHead = (props) => {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  toolbar: {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.dark,\n  },\n  title: {\n    fontWeight: \"bold\",\n    flexGrow: 1,\n  },\n}));\n\nconst EnhancedTableToolbar = () => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar className={classes.toolbar}>\n      <Typography\n        className={classes.title}\n        variant=\"h4\"\n        id=\"tableTitle\"\n        component=\"div\"\n      >\n        My Tournaments\n      </Typography>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: \"bold\",\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n  },\n  row: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.dark,\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark,\n  },\n  enterButton: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.dark,\n    width: 20,\n    \"&:hover\": {\n      backgroundColor: theme.palette.text.primary,\n    },\n  },\n}));\n\nconst MyTournamentsTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"start\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.tournamentsArr.map((tournament) => {\n      return {\n        tournament: tournament,\n        name: tournament.name,\n        entryFee: tournament.entryFee,\n        entries: tournament.entries.length,\n        totalPrize: tournament.entryFee * tournament.entries.length,\n        start: tournament.startTime,\n        end: tournament.endTime,\n      };\n    });\n  };\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                      <TableCell\n                        className={classes.row}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.entryFee}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.entries}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.totalPrize}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown\n                          className={classes.row}\n                          countDownEnd={new Date(row.start).getTime()}\n                          overMsg={\"Started!\"}\n                        />\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown\n                          className={classes.row}\n                          countDownEnd={new Date(row.end).getTime()}\n                          overMsg={\"Ended!\"}\n                        />\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Button\n                          className={classes.enterButton}\n                          variant=\"outlined\"\n                          autoFocus\n                          component={Link}\n                          to={`/tournament/${row.tournament.id}`}\n                        >\n                          Enter\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default MyTournamentsTable;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTournaments } from \"../redux/actions/tournament.actions\";\nimport MyTournamentsTable from \"../components/MyTournamentsTable\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = (theme) => ({\n  mainContainer: {\n    [theme.breakpoints.up(\"lg\")]: {\n      padding: 100,\n    },\n  },\n});\n\nclass MyTournaments extends React.Component {\n  state = {\n    userTournaments: [],\n  };\n\n  componentDidMount() {\n    this.props.getTournaments();\n  }\n\n  getUserTournaments = () => {\n    if (localStorage.userId) {\n      const userTournaments = [];\n      this.props.tournamentsArr.forEach((tournament) => {\n        tournament.entries.forEach((entry) => {\n          if (entry.user === localStorage.userId) {\n            userTournaments.push(tournament);\n          }\n        });\n      });\n      return userTournaments;\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.mainContainer}>\n        <MyTournamentsTable tournamentsArr={this.getUserTournaments()} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  tournamentsArr: state.tournament.tournamentsArr,\n});\n\nexport default connect(mapStateToProps, { getTournaments })(\n  withStyles(useStyles, { withTheme: true })(MyTournaments)\n);\n","import { SERVER_URL } from \"../../config\";\nexport const FETCH_ENTRY_INFORMATION_BEGIN = \"FETCH_ENTRY_INFORMATION_BEGIN\";\nexport const FETCH_ENTRY_INFORMATION_SUCCESS =\n  \"FETCH_ENTRY_INFORMATION_SUCCESS\";\nexport const FETCH_ENTRY_INFORMATION_FAILURE =\n  \"FETCH_ENTRY_INFORMATION_FAILURE\";\n\nconst fetchEntryInfoBegin = () => ({\n  type: FETCH_ENTRY_INFORMATION_BEGIN,\n});\n\nconst fetchEntryInfoSuccess = (entryInfo) => ({\n  type: FETCH_ENTRY_INFORMATION_SUCCESS,\n  payload: { entryInfo },\n});\n\nconst fetchEntryInfoFailure = (err) => ({\n  type: FETCH_ENTRY_INFORMATION_FAILURE,\n  payload: { err },\n});\n\nexport const getEntryByUsernameAndTournamentName = (userId, tournamentId) => {\n  return async (dispatch) => {\n    dispatch(fetchEntryInfoBegin());\n    try {\n      const result = await fetch(\n        `${SERVER_URL}/api/entries/${userId}/${tournamentId}`\n      );\n      const entryInfo = await result.json();\n      dispatch(fetchEntryInfoSuccess(entryInfo));\n    } catch (err) {\n      dispatch(fetchEntryInfoFailure(err));\n    }\n  };\n};\n\nexport const CREATE_ENTRY_BEGIN = \"CREATE_ENTRY_BEGIN\";\nexport const CREATE_ENTRY_SUCCESS = \"CREATE_ENTRY_SUCCESS\";\nexport const CREATE_ENTRY_FAILURE = \"CREATE_ENTRY_FAILURE\";\n\nconst createEntryBegin = () => ({\n  type: CREATE_ENTRY_BEGIN,\n});\n\nconst createEntrySuccess = (entryInfo) => ({\n  type: CREATE_ENTRY_SUCCESS,\n  payload: { entryInfo },\n});\n\nconst createEntryFailure = (err) => ({\n  type: CREATE_ENTRY_FAILURE,\n  payload: { err },\n});\n\nexport const createEntry = (tournamentId, token) => {\n  return async (dispatch) => {\n    dispatch(createEntryBegin());\n    try {\n      const result = await fetch(`${SERVER_URL}/api/entries`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n        body: JSON.stringify({\n          tournamentId: tournamentId,\n        }),\n      });\n      const entryInfo = await result.json();\n      dispatch(createEntrySuccess(entryInfo));\n    } catch (err) {\n      dispatch(createEntryFailure(err));\n    }\n  };\n};\n\nexport const FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN =\n  \"FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN\";\nexport const FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS =\n  \"FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS\";\nexport const FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE =\n  \"FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE\";\n\nconst fetchEntriesByTournamentIdBegin = () => ({\n  type: FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN,\n});\n\nconst fetchEntriesByTournamentIdSuccess = (entriesArr) => ({\n  type: FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS,\n  payload: { entriesArr },\n});\n\nconst fetchEntriesByTournamentIdFailure = (error) => ({\n  type: FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE,\n  payload: { error },\n});\n\nexport const getEntriesByTournamentId = (tournamentId) => async (dispatch) => {\n  dispatch(fetchEntriesByTournamentIdBegin());\n  try {\n    const result = await fetch(\n      `${SERVER_URL}/api/entries/tournament/${tournamentId}`\n    );\n    const entriesArr = await result.json();\n    dispatch(fetchEntriesByTournamentIdSuccess(entriesArr));\n  } catch (err) {\n    dispatch(fetchEntriesByTournamentIdFailure(err));\n  }\n};\n","import React from \"react\";\nimport Countdown from \"../components/Countdown\";\nimport { Link } from \"react-router-dom\";\n// MATERIAL UI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = (theme) => ({\n  timer: {\n    textAlign: \"right\",\n  },\n  paper: {\n    margin: 0,\n  },\n  dialogTitle: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  dialogContainer: {\n    backgroundColor: theme.palette.primary.light,\n  },\n  dialogContent: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.dark,\n  },\n  calcContainer: {\n    borderBottom: 1,\n    borderColor: \"black\",\n    display: \"flex\",\n  },\n  calcTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: theme.palette.primary.dark,\n    flexGrow: 1,\n  },\n  enterButton: {\n    width: \"100%\",\n    fontWeight: \"bold\",\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n    \"&:hover\": {\n      backgroundColor: theme.palette.text.primary,\n    },\n  },\n  signUpButton: {\n    backgroundColor: theme.palette.text.primary,\n    color: theme.palette.primary.dark,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.text.secondary,\n    },\n  },\n  cancelButton: {\n    backgroundColor: theme.palette.primary.main,\n  },\n});\n\nclass TournamentModal extends React.Component {\n  state = {\n    entered: false,\n  };\n\n  handleSignUp = () => {\n    this.props.handleEnter(this.props.tournamentInfo.id);\n    this.setState({\n      entered: !this.state.entered,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        {this.props.tournamentInfo ? (\n          <div>\n            <Dialog\n              classes={{\n                paper: classes.paper,\n              }}\n              open={this.props.open}\n              onClose={this.props.handleModal}\n            >\n              <Grid className={classes.dialogContainer} container>\n                <Grid className={classes.dialogTitle} container item xs={12}>\n                  <Grid item xs={6}>\n                    <DialogTitle id=\"simple-dialog-title\">\n                      {this.props.tournamentInfo.name}\n                    </DialogTitle>\n                  </Grid>\n                  {new Date(this.props.tournamentInfo.startTime) >\n                  new Date() ? (\n                    <Grid item xs={6}>\n                      <DialogTitle\n                        className={classes.timer}\n                        id=\"simple-dialog-title\"\n                      >\n                        Starts:{\" \"}\n                        <Countdown\n                          countDownEnd={new Date(\n                            this.props.tournamentInfo.startTime\n                          ).getTime()}\n                          overMsg={\"Started!\"}\n                        />\n                      </DialogTitle>\n                    </Grid>\n                  ) : (\n                    <Grid item xs={6}>\n                      {new Date(this.props.tournamentInfo.endTime) >\n                      new Date() ? (\n                        <DialogTitle\n                          className={classes.timer}\n                          id=\"simple-dialog-title\"\n                        >\n                          Ends:{\" \"}\n                          <Countdown\n                            countDownEnd={new Date(\n                              this.props.tournamentInfo.endTime\n                            ).getTime()}\n                            overMsg={\"Ended!\"}\n                          />\n                        </DialogTitle>\n                      ) : (\n                        <DialogTitle\n                          className={classes.timer}\n                          id=\"simple-dialog-title\"\n                        >\n                          Tournament has ended.\n                        </DialogTitle>\n                      )}\n                    </Grid>\n                  )}\n                </Grid>\n                <Grid item container xs={6}>\n                  <DialogContent className={classes.dialogContent}>\n                    {this.props.currentUser ? (\n                      <div>\n                        <Grid className={classes.calcContainer} item xs={12}>\n                          <DialogContentText className={classes.calcTitle}>\n                            Your Credits:\n                          </DialogContentText>\n                          <DialogContentText className={classes.dialogContent}>\n                            {this.props.currentUser.accountBalance}\n                          </DialogContentText>\n                        </Grid>\n                        <Grid className={classes.calcContainer} item xs={12}>\n                          <DialogContentText className={classes.calcTitle}>\n                            Entry Fee:\n                          </DialogContentText>\n                          <DialogContentText className={classes.dialogContent}>\n                            - {this.props.tournamentInfo.entryFee}\n                          </DialogContentText>\n                        </Grid>\n                        <Grid className={classes.calcContainer} item xs={12}>\n                          <DialogContentText className={classes.calcTitle}>\n                            Resulting Balance:\n                          </DialogContentText>\n                          <DialogContentText className={classes.dialogContent}>\n                            {this.props.currentUser.accountBalance -\n                              this.props.tournamentInfo.entryFee}\n                          </DialogContentText>\n                        </Grid>\n                      </div>\n                    ) : (\n                      <DialogContentText>Please login!</DialogContentText>\n                    )}\n                  </DialogContent>\n                </Grid>\n                <Grid item container xs={6}>\n                  <DialogContent className={classes.dialogContent}>\n                    <Grid className={classes.calcContainer} item xs={12}>\n                      <DialogContentText className={classes.calcTitle}>\n                        Entries:\n                      </DialogContentText>\n                      <DialogContentText className={classes.dialogContent}>\n                        {this.props.tournamentInfo.entries\n                          ? this.props.tournamentInfo.entries.length\n                          : null}{\" \"}\n                        / {this.props.tournamentInfo.entryLimit}\n                      </DialogContentText>\n                    </Grid>\n                    <Grid className={classes.calcContainer} item xs={12}>\n                      <DialogContentText className={classes.calcTitle}>\n                        Total prize pool:\n                      </DialogContentText>\n                      <DialogContentText className={classes.dialogContent}>\n                        {this.props.tournamentInfo.entries\n                          ? this.props.tournamentInfo.entries.length *\n                            this.props.tournamentInfo.entryFee\n                          : null}\n                      </DialogContentText>\n                    </Grid>\n                  </DialogContent>\n                </Grid>\n                <Grid item xs={12}>\n                  {this.props.entered ? (\n                    <DialogActions>\n                      <Button\n                        className={classes.enterButton}\n                        variant=\"contained\"\n                        autoFocus\n                        component={Link}\n                        to={`/tournament/${this.props.tournamentInfo.id}`}\n                      >\n                        Enter Tournament\n                      </Button>\n                    </DialogActions>\n                  ) : (\n                    <DialogActions>\n                      <Button\n                        className={classes.cancelButton}\n                        autoFocus\n                        variant=\"outlined\"\n                        onClick={this.props.handleModal}\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        className={classes.signUpButton}\n                        onClick={() => this.handleSignUp()}\n                        color=\"primary\"\n                        autoFocus\n                      >\n                        Sign Up\n                      </Button>\n                    </DialogActions>\n                  )}\n                </Grid>\n              </Grid>\n            </Dialog>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(TournamentModal);\n","import React from \"react\";\nimport Countdown from \"./Countdown\";\n// MATERIAL UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Tournament Name\",\n  },\n  { id: \"entryFee\", numeric: true, disablePadding: false, label: \"Entry Fee\" },\n  { id: \"entries\", numeric: true, disablePadding: false, label: \"Entries\" },\n  {\n    id: \"totalPrize\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Total Prize\",\n  },\n  { id: \"start\", numeric: true, disablePadding: false, label: \"Start\" },\n  { id: \"end\", numeric: true, disablePadding: false, label: \"End\" },\n];\n\nconst EnhancedTableHead = (props) => {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            style={{ fontWeight: \"bold\" }}\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  toolbar: {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.dark,\n  },\n  title: {\n    fontWeight: \"bold\",\n    flexGrow: 1,\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar className={classes.toolbar}>\n      <Typography\n        className={classes.title}\n        variant=\"h4\"\n        id=\"tableTitle\"\n        component=\"div\"\n      >\n        LOBBY\n      </Typography>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n  },\n  row: {\n    color: theme.palette.primary.dark,\n    fontWeight: \"bold\",\n  },\n  tablePagination: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.dark,\n  },\n}));\n\nconst LobbyTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"start\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.tournamentsArr.map((tournament) => {\n      return {\n        tournament: tournament,\n        name: tournament.name,\n        entryFee: tournament.entryFee,\n        entryLimit: tournament.entryLimit,\n        entries: tournament.entries.length,\n        totalPrize: tournament.entryFee * tournament.entries.length,\n        start: tournament.startTime,\n        end: tournament.endTime,\n      };\n    });\n  };\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                      onClick={() =>\n                        props.handleClickTournamentRow(row.tournament)\n                      }\n                    >\n                      <TableCell\n                        className={classes.row}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.entryFee}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.entries} / {row.entryLimit}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.totalPrize}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown\n                          className={classes.row}\n                          countDownEnd={new Date(row.start).getTime()}\n                          overMsg={\"Started!\"}\n                        />\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown\n                          className={classes.row}\n                          countDownEnd={new Date(row.end).getTime()}\n                          overMsg={\"Ended!\"}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default LobbyTable;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTournaments } from \"../redux/actions/tournament.actions\";\nimport { createEntry } from \"../redux/actions/entry.actions\";\nimport { loginWithToken } from \"../redux/actions/auth.actions\";\nimport TournamentModal from \"../components/TournamentModal\";\nimport LobbyTable from \"../components/LobbyTable\";\n// MATERIAL UI\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = (theme) => ({\n  mainContainer: {\n    [theme.breakpoints.up(\"lg\")]: {\n      padding: 100,\n    },\n  },\n  table: {\n    backgroundColor: theme.palette.text.secondary,\n    minWidth: 650,\n  },\n  createButton: {\n    marginBottom: 20,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  tableCellHeader: {\n    color: theme.palette.text.secondary,\n  },\n  tableCell: {\n    color: theme.palette.primary.dark,\n  },\n  row: {\n    textDecoration: \"none\",\n  },\n});\n\nclass Lobby extends React.Component {\n  state = {\n    tableHeader: \"LOBBY\",\n    modalOpen: false,\n    entered: false,\n    tournamentClickedInfo: {},\n  };\n\n  componentDidMount() {\n    this.props.getTournaments();\n  }\n\n  handleEnter = async (tournamentId) => {\n    await this.props.createEntry(tournamentId, localStorage.token);\n    await this.props.getTournaments();\n    await this.props.loginWithToken(localStorage.token);\n    const updatedTournament = this.props.tournamentsArr.find(\n      (t) => t.id === this.state.tournamentClickedInfo.id\n    );\n    this.handleClickTournamentRow(updatedTournament);\n  };\n\n  handleClickTournamentRow = (tournamentInfo) => {\n    let entered = false;\n    tournamentInfo.entries.forEach((entry) => {\n      this.props.currentUser.entries.forEach((userEntry) => {\n        if (entry._id === userEntry) {\n          entered = true;\n        }\n      });\n    });\n    this.setState({\n      tournamentClickedInfo: tournamentInfo,\n      entered: entered,\n      modalOpen: true,\n    });\n  };\n\n  handleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.mainContainer}>\n        <TournamentModal\n          entered={this.state.entered}\n          handleModal={this.handleModal}\n          open={this.state.modalOpen}\n          tournamentInfo={this.state.tournamentClickedInfo}\n          handleEnter={this.handleEnter}\n          currentUser={this.props.currentUser}\n        />\n        <LobbyTable\n          tournamentsArr={this.props.tournamentsArr}\n          handleClickTournamentRow={this.handleClickTournamentRow}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  tournamentsArr: state.tournament.tournamentsArr,\n  entryData: state.entry,\n  currentUser: state.auth.currentUser,\n});\n\nexport default connect(mapStateToProps, {\n  getTournaments,\n  createEntry,\n  loginWithToken,\n})(withStyles(useStyles, { withTheme: true })(Lobby));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"../redux/actions/auth.actions\";\n// MATERIAL UI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\">Stonk Kings</Link> {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst useStyles = (theme) => ({\n  root: {\n    minHeight: \"100vh\",\n  },\n  image: {\n    backgroundImage:\n      \"url(https://images.pexels.com/photos/189528/pexels-photo-189528.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  mainContainer: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    backgroundColor: theme.palette.primary.dark,\n    margin: theme.spacing(3, 0, 2),\n  },\n  input: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: `${theme.palette.text.primary} !important`,\n    },\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: `${theme.palette.text.primary} !important`,\n    },\n  },\n  cssLabel: {\n    color: \"white\",\n  },\n  cssFocused: {\n    color: \"white\",\n  },\n  notchedOutline: {\n    borderWidth: \"1px\",\n    borderColor: `${theme.palette.primary.dark} !important`,\n  },\n});\n\nclass Login extends React.Component {\n  state = {\n    signIn: true,\n  };\n\n  setSignIn = (bool) => {\n    this.setState({ signIn: bool });\n  };\n\n  handleField = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleLogin = async () => {\n    await this.props.auth(\n      { username: this.state.username, password: this.state.password },\n      \"signIn\"\n    );\n  };\n\n  handleSignUp = async () => {\n    await this.props.auth(\n      {\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n      },\n      \"signUp\"\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid\n          item\n          xs={12}\n          sm={8}\n          md={5}\n          component={Paper}\n          elevation={6}\n          square\n          className={classes.mainContainer}\n        >\n          <div className={classes.paper}>\n            <Typography\n              style={{ marginBottom: 100, fontWeight: \"bold\" }}\n              component=\"h3\"\n              variant=\"h1\"\n            >\n              Stonk Kings!\n            </Typography>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <form className={classes.form} noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                onChange={this.handleField}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {!this.state.signIn ? (\n                <TextField\n                  onChange={this.handleField}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                />\n              ) : null}\n              <TextField\n                onChange={this.handleField}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"secondary\" />}\n                label=\"Remember me\"\n              />\n              {this.state.signIn ? (\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={() => this.handleLogin()}\n                >\n                  Sign In\n                </Button>\n              ) : (\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={() => this.handleSignUp()}\n                >\n                  Sign up\n                </Button>\n              )}\n              <Grid container>\n                <Grid item>\n                  {this.state.signIn ? (\n                    <Link\n                      onClick={() => this.setSignIn(false)}\n                      style={{ color: \"white\" }}\n                      variant=\"body2\"\n                    >\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  ) : (\n                    <Link\n                      onClick={() => this.setSignIn(true)}\n                      style={{ color: \"white\" }}\n                      variant=\"body2\"\n                    >\n                      {\"Already have an account? Sign in\"}\n                    </Link>\n                  )}\n                </Grid>\n              </Grid>\n              <Box mt={5}>\n                <Copyright />\n              </Box>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default connect(null, { auth })(\n  withStyles(useStyles, { withTheme: true })(Login)\n);\n","import { SERVER_URL } from \"../../config\";\nexport const CREATE_TRADE_BEGIN = \"CREATE_TRADE_BEGIN\";\nexport const CREATE_TRADE_SUCCESS = \"CREATE_TRADE_SUCCESS\";\nexport const CREATE_TRADE_FAILURE = \"CREATE_TRADE_FAILURE\";\n\nconst createTradeBegin = () => ({\n  type: CREATE_TRADE_BEGIN,\n});\n\nconst createTradeSuccess = (tradeInfo) => ({\n  type: CREATE_TRADE_SUCCESS,\n  payload: { tradeInfo },\n});\n\nconst createTradeFailure = (err) => ({\n  type: CREATE_TRADE_FAILURE,\n  payload: { err },\n});\n\nexport const createTrade = (tradeObj, token) => {\n  return async (dispatch) => {\n    try {\n      dispatch(createTradeBegin());\n      const result = await fetch(`${SERVER_URL}/api/trades`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n        body: JSON.stringify({\n          entryId: tradeObj.entryId,\n          stockTicker: tradeObj.stockTicker,\n          time: tradeObj.time,\n          buyOrSell: tradeObj.buyOrSell,\n          price: tradeObj.price,\n          amountOfShares: tradeObj.amountOfShares,\n        }),\n      });\n      const tradeInfo = await result.json();\n      dispatch(createTradeSuccess(tradeInfo));\n    } catch (err) {\n      dispatch(createTradeFailure(err));\n    }\n  };\n};\n\nexport const FETCH_TRADES_BY_ENTRY_BEGIN = \"FETCH_TRADES_BY_ENTRY_BEGIN\";\nexport const FETCH_TRADES_BY_ENTRY_SUCCESS = \"FETCH_TRADES_BY_ENTRY_SUCCESS\";\nexport const FETCH_TRADES_BY_ENTRY_FAILURE = \"FETCH_TRADES_BY_ENTRY_FAILURE\";\n\nconst fetchTradesByEntryBegin = () => ({\n  type: FETCH_TRADES_BY_ENTRY_BEGIN,\n});\n\nconst fetchTradesByEntrySuccess = (tradesByEntry) => ({\n  type: FETCH_TRADES_BY_ENTRY_SUCCESS,\n  payload: { tradesByEntry },\n});\n\nconst fetchTradesByEntryFailure = (err) => ({\n  type: FETCH_TRADES_BY_ENTRY_FAILURE,\n  payload: { err },\n});\n\nexport const getTradesByEntryId = (entryId) => async (dispatch) => {\n  dispatch(fetchTradesByEntryBegin());\n  try {\n    const result = await fetch(`${SERVER_URL}/api/trades/${entryId}`);\n    const tradesByEntry = await result.json();\n    dispatch(fetchTradesByEntrySuccess(tradesByEntry));\n  } catch (err) {\n    dispatch(fetchTradesByEntryFailure(err));\n  }\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  paper: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  popper: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  input: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  inputFocused: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  groupLabel: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n  },\n  option: {\n    backgroundColor: theme.palette.primary.main,\n  },\n\n  inputRoot: {\n    backgroundColor: theme.palette.primary.main,\n    \"&.MuiFormLabel-root.Mui-focused\": {\n      color: theme.palette.text.secondary,\n    },\n  },\n}));\n\nconst SearchBar = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleInputChange = (e, value) => {\n    fetch(\n      `https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${value}&apikey=3VP9375JIOYD1569`\n    )\n      .then((res) => res.json())\n      .then((results) => {\n        setOptions(results.bestMatches || []);\n      });\n  };\n\n  const handleSelected = (e, val) => {\n    if (val !== null) {\n      props.handleSearchSubmit(val[\"1. symbol\"]);\n    }\n  };\n\n  return (\n    <Autocomplete\n      classes={classes}\n      id=\"asynchronous-demo\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option[\"2. name\"]}\n      options={options}\n      loading={loading}\n      onInputChange={handleInputChange}\n      onChange={handleSelected}\n      ListboxProps={{\n        className: classes.listBox,\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Search stocks...\"\n          variant=\"outlined\"\n          name=\"search\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport { ResponsiveLine } from \"@nivo/line\";\n\n// re renders with intraday format and daily data...\nconst Chart = (props) => {\n  return (\n    <div style={{ height: 400 }}>\n      <ResponsiveLine\n        theme={{\n          grid: {\n            line: {\n              stroke: \"grey\",\n            },\n          },\n          axis: {\n            ticks: {\n              text: {\n                fill: \"white\",\n              },\n            },\n            legend: {\n              text: {\n                fill: \"white\",\n              },\n            },\n          },\n          crosshair: {\n            line: {\n              stroke: \"white\",\n            },\n          },\n        }}\n        data={props.data}\n        margin={{ top: 50, right: 50, bottom: 50, left: 60 }}\n        xScale={{\n          type: \"time\",\n          format: props.xScaleFormat,\n          precision: \"minute\",\n        }}\n        xFormat={props.xFormat}\n        yScale={{\n          type: \"linear\",\n          min: \"auto\",\n          max: \"auto\",\n          stacked: false,\n          reverse: false,\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisLeft={{\n          orient: \"left\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: \"price\",\n          legendOffset: -40,\n          legendPosition: \"middle\",\n        }}\n        axisBottom={{\n          format: \"%b %d\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          orient: \"bottom\",\n          legendPosition: \"middle\",\n          legend: \"date\",\n          legendOffset: 36,\n        }}\n        colors={[\"#64dd17\"]}\n        pointSize={10}\n        pointColor={{ theme: \"background\" }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: \"serieColor\" }}\n        pointLabel=\"y\"\n        pointLabelYOffset={-12}\n        useMesh={true}\n      />\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n// MATERIAL UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: 0,\n  },\n  dialogContainer: {\n    backgroundColor: theme.palette.primary.light,\n  },\n  dialogHeader: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  dialogTitle: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n  },\n  dialogContent: {\n    color: theme.palette.primary.dark,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    border: 1,\n    borderColor: theme.palette.primary.dark,\n  },\n  textFieldContainer: {\n    paddingLeft: 20,\n  },\n  sharesField: {\n    width: \"60%\",\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 5,\n  },\n  sharesFieldInput: {\n    padding: 10,\n    paddingLeft: 20,\n    fontSize: 30,\n    fontWeight: \"bold\",\n  },\n  button: {\n    borderColor: theme.palette.text.primary,\n  },\n}));\n\nconst TradeModal = (props) => {\n  const classes = useStyles();\n\n  const calculateResultingBalance = (\n    buyOrSell,\n    currentBalance,\n    amountOfShares,\n    price\n  ) => {\n    if (buyOrSell === \"buy\") {\n      return (\n        (Math.round(currentBalance - price * amountOfShares) * 100) /\n        100\n      ).toFixed(2);\n    } else {\n      return (\n        (Math.round(currentBalance + price * amountOfShares) * 100) /\n        100\n      ).toFixed(2);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleModal}\n        classes={{\n          paper: classes.paper,\n        }}\n      >\n        <Grid className={classes.dialogContainer} container>\n          <Grid item container xs={12} className={classes.dialogHeader}>\n            <Grid item xs={6}>\n              {props.buyOrSell === \"buy\" ? (\n                <DialogTitle\n                  className={classes.dialogTitle}\n                  id=\"simple-dialog-title\"\n                >\n                  Buy Transaction\n                </DialogTitle>\n              ) : (\n                <DialogTitle\n                  style={{ color: \"red\" }}\n                  className={classes.dialogTitle}\n                  id=\"simple-dialog-title\"\n                >\n                  Sell Transaction\n                </DialogTitle>\n              )}\n            </Grid>\n            <Grid\n              container\n              item\n              alignItems=\"flex-start\"\n              justify=\"flex-end\"\n              direction=\"row\"\n              xs={6}\n            >\n              <DialogTitle\n                className={classes.dialogTitle}\n                id=\"simple-dialog-title\"\n              >\n                {props.stockTicker}\n              </DialogTitle>\n            </Grid>\n          </Grid>\n          <Grid item xs={6}>\n            <DialogContent>\n              <DialogContentText className={classes.dialogContent}>\n                Price:\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                Amount of shares:\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                Total value:\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                Resulting Balance:\n              </DialogContentText>\n            </DialogContent>\n          </Grid>\n          <Grid item xs={6}>\n            <DialogContent>\n              <DialogContentText className={classes.dialogContent}>\n                {props.price}\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                {props.amountOfShares}\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                {(\n                  Math.round(props.amountOfShares * props.price * 100) / 100\n                ).toFixed(2)}\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                {calculateResultingBalance(\n                  props.buyOrSell,\n                  props.currentEntry.tournamentBalance,\n                  props.amountOfShares,\n                  props.price\n                )}\n              </DialogContentText>\n            </DialogContent>\n          </Grid>\n          <Grid item xs={12} className={classes.textFieldContainer}>\n            <TextField\n              defaultValue={1}\n              className={classes.sharesField}\n              onChange={props.handleShareField}\n              inputProps={{\n                className: classes.sharesFieldInput,\n              }}\n              name=\"shareAmountField\"\n              type=\"number\"\n              id=\"standard-basic\"\n              label=\"Amount of shares\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <DialogActions>\n              <Button\n                onClick={props.handleModal}\n                className={classes.button}\n                variant=\"outlined\"\n                autoFocus\n                color=\"inherit\"\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={props.handleTrade}\n                className={classes.button}\n                variant=\"outlined\"\n                color=\"inherit\"\n                autoFocus\n              >\n                Confirm\n              </Button>\n            </DialogActions>\n          </Grid>\n        </Grid>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default TradeModal;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst useStyles = (theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n});\n\nclass SnackBarDisplay extends React.Component {\n  state = {\n    open: false,\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Snackbar\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.handleClose}\n          anchorOrigin={{\n            horizontal: \"right\",\n            vertical: \"bottom\",\n          }}\n        >\n          {this.props.error === true ? (\n            <Alert onClose={this.props.handleClose} severity=\"error\">\n              {this.props.message}\n            </Alert>\n          ) : (\n            <Alert onClose={this.props.handleClose} severity=\"success\">\n              {this.props.message}\n            </Alert>\n          )}\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(SnackBarDisplay);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TradeModal from \"../components/TradeModal\";\nimport SnackBarDisplay from \"../components/SnackBarDisplay\";\nimport { connect } from \"react-redux\";\nimport {\n  createTrade,\n  getTradesByEntryId,\n} from \"../redux/actions/trade.actions\";\n// MATERIAL UI\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = (theme) => ({\n  buyButton: {\n    fontSize: 25,\n    fontWeight: 900,\n    width: \"30%\",\n    padding: 8,\n    marginRight: 10,\n    backgroundColor: theme.palette.text.primary,\n    borderColor: theme.palette.text.primary,\n    color: theme.palette.primary.dark,\n    \"&:hover\": {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  sellButton: {\n    fontSize: 25,\n    fontWeight: 900,\n    width: \"30%\",\n    padding: 8,\n    marginRight: 10,\n    backgroundColor: \"red\",\n    borderColor: \"red\",\n    color: theme.palette.primary.dark,\n    \"&:hover\": {\n      color: \"red\",\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  sharesField: {\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 5,\n  },\n  sharesFieldInput: {\n    fontSize: 30,\n  },\n});\n\nclass TradeBar extends React.Component {\n  state = {\n    shareAmountField: 1,\n    openModal: false,\n    openSnackBar: false,\n  };\n\n  handleShareField = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleModal = (buyOrSell = \"buy\") => {\n    this.setState({\n      openModal: !this.state.openModal,\n      buyOrSell: buyOrSell,\n      shareAmountField: 1,\n    });\n  };\n\n  handleCloseSnackBar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({\n      openSnackBar: false,\n    });\n  };\n\n  handleClickSnackBar = () => {\n    this.setState({\n      openSnackBar: true,\n    });\n  };\n\n  handleTrade = async () => {\n    await this.props.createTrade(\n      {\n        entryId: this.props.entryId,\n        stockTicker: this.props.stockTicker,\n        time: new Date(),\n        buyOrSell: this.state.buyOrSell,\n        price: this.props.currentPrice,\n        amountOfShares: parseInt(this.state.shareAmountField),\n      },\n      localStorage.token\n    );\n    await this.props.getTradesByEntryId(this.props.entryId);\n    await this.props.getCurrentEntry();\n    this.handleModal(this.state.buyOrSell);\n    this.handleClickSnackBar();\n  };\n\n  render() {\n    const { classes } = this.props;\n    let snackbarmessage = \"\";\n    let snackbarErr = false;\n    if (this.props.createdTrade !== []) {\n      if (this.props.createdTrade.message) {\n        snackbarmessage = this.props.createdTrade.message;\n        snackbarErr = true;\n      } else {\n        let buyOrSell =\n          this.props.createdTrade.buyOrSell === \"buy\" ? \"purchased\" : \"sold\";\n        snackbarmessage = `You ${buyOrSell} ${this.props.createdTrade.amountOfShares} share(s) of ${this.props.createdTrade.stockTicker} @ $${this.props.createdTrade.price}!`;\n      }\n    }\n    return (\n      <div>\n        <Button\n          onClick={() => this.handleModal(\"buy\")}\n          size=\"large\"\n          name=\"buy\"\n          variant=\"outlined\"\n          className={classes.buyButton}\n        >\n          BUY\n        </Button>\n        <Button\n          onClick={() => this.handleModal(\"sell\")}\n          size=\"large\"\n          name=\"sell\"\n          variant=\"outlined\"\n          className={classes.sellButton}\n        >\n          SELL\n        </Button>\n        <TradeModal\n          handleShareField={this.handleShareField}\n          handleTrade={this.handleTrade}\n          handleModal={this.handleModal}\n          price={this.props.currentPrice}\n          stockTicker={this.props.stockTicker}\n          amountOfShares={parseInt(this.state.shareAmountField)}\n          buyOrSell={this.state.buyOrSell}\n          open={this.state.openModal}\n          currentEntry={this.props.currentEntry}\n        />\n        <SnackBarDisplay\n          handleClose={this.handleCloseSnackBar}\n          open={this.state.openSnackBar}\n          message={snackbarmessage}\n          error={snackbarErr}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { createTrade, getTradesByEntryId })(\n  withStyles(useStyles, { withTheme: true })(TradeBar)\n);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass LatestPrice extends React.Component {\n  componentDidMount() {\n    const intervalId = setInterval(this.fetchPrice, 1000);\n    this.setState({ intervalId: intervalId });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  fetchPrice = async () => {\n    try {\n      const result = await fetch(\n        `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${this.props.searchString}&apikey=3VP9375JIOYD1569`\n      );\n      const priceData = await result.json();\n      this.props.setPrice(priceData[\"Global Quote\"][\"05. price\"]);\n    } catch (err) {\n      console.err(err);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h5\">Current Price</Typography>\n        <Typography variant=\"h6\">${this.props.currentPrice}</Typography>\n      </div>\n    );\n  }\n}\n\nexport default LatestPrice;\n","import React from \"react\";\n// MATERIAL UI\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst headCells = [\n  {\n    id: \"ticker\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Ticker Symbol\",\n  },\n  {\n    id: \"averagePrice\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Average Price\",\n  },\n  {\n    id: \"netShares\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Net Shares\",\n  },\n];\n\nconst EnhancedTableHead = (props) => {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: \"bold\",\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    width: \"100%\",\n  },\n  row: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.dark,\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark,\n  },\n}));\n\nconst MyPositions = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"entryFee\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  let hasPositions = false;\n  const consolidatePositionsArr = () => {\n    const allTickers = props.tradeData.tradesByEntry.map((t) => t.stockTicker);\n    const uniqueTickers = allTickers.filter(\n      (val, index, self) => self.indexOf(val) === index\n    );\n    const positions = uniqueTickers.map((ticker) => {\n      const position = {\n        ticker: ticker,\n        netShares: 0,\n        averagePrice: 0,\n      };\n      let sharePriceXNumOfSharesSum = 0;\n      let totalShares = 0;\n      props.tradeData.tradesByEntry.forEach((trade) => {\n        if (trade.stockTicker === ticker) {\n          if (trade.buyOrSell === \"buy\") {\n            sharePriceXNumOfSharesSum += trade.amountOfShares * trade.price;\n            totalShares += trade.amountOfShares;\n\n            position.netShares = position.netShares + trade.amountOfShares;\n          } else {\n            position.netShares = position.netShares - trade.amountOfShares;\n          }\n        }\n      });\n      position.averagePrice = sharePriceXNumOfSharesSum / totalShares;\n      if (position.netShares > 0) {\n        hasPositions = true;\n      }\n      return position;\n    });\n\n    return positions;\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return consolidatePositionsArr().filter((position) => {\n      if (position.netShares > 0) {\n        return {\n          ticker: position.ticker,\n          netShares: position.netShares,\n          averagePrice: (Math.round(position.averagePrice * 100) / 100).toFixed(\n            2\n          ),\n        };\n      }\n      return null;\n    });\n  };\n\n  const rows = formatRows();\n  return (\n    <div>\n      {hasPositions ? (\n        <div className={classes.root}>\n          <Paper className={classes.paper}>\n            <TableContainer>\n              <Table\n                className={classes.table}\n                aria-labelledby=\"tableTitle\"\n                aria-label=\"enhanced table\"\n              >\n                <EnhancedTableHead\n                  classes={classes}\n                  order={order}\n                  orderBy={orderBy}\n                  onRequestSort={handleRequestSort}\n                  rowCount={rows.length}\n                />\n                <TableBody>\n                  {stableSort(rows, getComparator(order, orderBy))\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                      return (\n                        <TableRow\n                          hover\n                          role=\"checkbox\"\n                          tabIndex={-1}\n                          key={index}\n                        >\n                          <TableCell\n                            className={classes.row}\n                            component=\"th\"\n                            scope=\"row\"\n                          >\n                            {row.ticker}\n                          </TableCell>\n                          <TableCell className={classes.row} align=\"left\">\n                            {row.averagePrice.toFixed(2)}\n                          </TableCell>\n                          <TableCell className={classes.row} align=\"left\">\n                            {row.netShares}\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              className={classes.tablePagination}\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default MyPositions;\n","import React from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst withMediaQuery = (...args) => (Component) => (props) => {\n  const mediaQuery = useMediaQuery(...args);\n  return <Component mediaQuery={mediaQuery} {...props} />;\n};\n\nexport default withMediaQuery;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport withMediaQuery from \"../higherOrderComponents/withMediaQuery\";\n// Material UI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\n\nconst useStyles = (theme) => ({\n  root: {},\n  paper: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    textDecoration: \"none\",\n    marginRight: 30,\n  },\n  mobileTitles: {},\n  button: {\n    backgroundColor: theme.palette.primary.dark,\n    color: \"bolder\",\n  },\n});\n\nconst TournamentInformation = (props) => {\n  return (\n    <>\n      <Typography\n        onClick={() => props.setView(\"buy/sell\")}\n        variant=\"h6\"\n        color=\"inherit\"\n        className={props.classes.title}\n      >\n        Buy/Sell\n      </Typography>\n      <Typography\n        onClick={() => props.setView(\"tradeHistory\")}\n        variant=\"h6\"\n        color=\"inherit\"\n        className={props.classes.title}\n      >\n        Trade History\n      </Typography>\n      <Typography\n        onClick={() => props.setView(\"allEntrants\")}\n        variant=\"h6\"\n        color=\"inherit\"\n        style={{ flexGrow: 1 }}\n        className={props.classes.title}\n      >\n        All Entrants\n      </Typography>\n      {props.currentEntry && !props.currentEntry.message ? (\n        <Typography\n          style={{ margin: 0 }}\n          variant=\"h6\"\n          color=\"inherit\"\n          className={props.classes.title}\n        >\n          Tournament Balance: {props.currentEntry.tournamentBalance.toFixed(2)}\n        </Typography>\n      ) : null}\n    </>\n  );\n};\n\nclass TournamentBar extends React.Component {\n  state = {\n    drawerOpen: false,\n  };\n\n  setViewAndCloseDrawer = (view) => {\n    this.props.setView(view);\n    this.setState({\n      drawerOpen: false,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    console.log(this.props.mediaQuery);\n    return (\n      <>\n        <AppBar position=\"static\" color=\"secondary\">\n          <Toolbar>\n            {this.props.mediaQuery ? (\n              <>\n                <TournamentInformation\n                  setView={this.props.setView}\n                  currentEntry={this.props.currentEntry}\n                  classes={classes}\n                />\n              </>\n            ) : (\n              <>\n                <Button\n                  className={classes.button}\n                  onClick={() => this.setState({ drawerOpen: true })}\n                  fullWidth\n                >\n                  Tournament Information\n                </Button>\n                <SwipeableDrawer\n                  classes={{ paper: classes.paper }}\n                  open={this.state.drawerOpen}\n                  onOpen={() => this.setState({ drawerOpen: true })}\n                  onClose={() => this.setState({ drawerOpen: false })}\n                  anchor=\"top\"\n                >\n                  <div style={{ padding: 20, textAlign: \"center\" }}>\n                    {this.props.currentEntry &&\n                    !this.props.currentEntry.message ? (\n                      <Typography\n                        variant=\"h6\"\n                        color=\"inherit\"\n                        className={classes.title}\n                      >\n                        Tournament Balance:{\" \"}\n                        {this.props.currentEntry.tournamentBalance.toFixed(2)}\n                      </Typography>\n                    ) : null}\n                    <Typography\n                      className={classes.title}\n                      onClick={() => this.setViewAndCloseDrawer(\"buy/sell\")}\n                      variant=\"h6\"\n                      color=\"inherit\"\n                    >\n                      Buy/Sell\n                    </Typography>\n                    <Typography\n                      className={classes.title}\n                      onClick={() => this.setViewAndCloseDrawer(\"tradeHistory\")}\n                      variant=\"h6\"\n                      color=\"inherit\"\n                    >\n                      Trade History\n                    </Typography>\n                    <Typography\n                      className={classes.title}\n                      onClick={() => this.setViewAndCloseDrawer(\"allEntrants\")}\n                      variant=\"h6\"\n                      color=\"inherit\"\n                      style={{ flexGrow: 1 }}\n                    >\n                      All Entrants\n                    </Typography>\n                  </div>\n                </SwipeableDrawer>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentEntry: state.entry.currentEntry,\n  currentUser: state.auth.currentUser,\n});\n\nexport default connect(mapStateToProps)(\n  withStyles(useStyles, { withTheme: true })(\n    withMediaQuery(\"(min-width:770px)\")(TournamentBar)\n  )\n);\n","import React from \"react\";\n// MATERIAL UI\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst headCells = [\n  {\n    id: \"ticker\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Ticker Symbol\",\n  },\n  {\n    id: \"timeTraded\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Time of Trade\",\n  },\n  {\n    id: \"buyOrSell\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Transaction Type\",\n  },\n  {\n    id: \"numOfShares\",\n    numeric: true,\n    disablePadding: false,\n    label: \"# of Shares\",\n  },\n  { id: \"price\", numeric: true, disablePadding: false, label: \"Price\" },\n];\n\nconst EnhancedTableHead = (props) => {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: \"bold\",\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    width: \"100%\",\n  },\n  row: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.dark,\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark,\n  },\n}));\n\nconst TradeHistoryTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"timeTraded\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatDate = (date) => {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    let strTime = hours + \":\" + minutes + \" \" + ampm;\n    return (\n      date.getMonth() +\n      1 +\n      \"/\" +\n      date.getDate() +\n      \"/\" +\n      date.getFullYear() +\n      \"  \" +\n      strTime\n    );\n  };\n\n  const formatRows = () => {\n    return props.data.map((trade) => {\n      const formattedDate = formatDate(new Date(trade.time));\n      return {\n        ticker: trade.stockTicker,\n        timeTraded: formattedDate,\n        buyOrSell: trade.buyOrSell,\n        amountOfShares: parseFloat(trade.amountOfShares),\n        price: trade.price,\n      };\n    });\n  };\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                      <TableCell\n                        className={classes.row}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.ticker}\n                      </TableCell>\n                      <TableCell className={classes.row}>\n                        {row.timeTraded}\n                      </TableCell>\n                      {row.buyOrSell === \"buy\" ? (\n                        <TableCell\n                          style={{ color: \"green\" }}\n                          className={classes.row}\n                        >\n                          Bought\n                        </TableCell>\n                      ) : (\n                        <TableCell\n                          style={{ color: \"red\" }}\n                          className={classes.row}\n                        >\n                          Sold\n                        </TableCell>\n                      )}\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.amountOfShares}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.price}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default TradeHistoryTable;\n","import React from \"react\";\n// MATERIAL UI\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst headCells = [\n  { id: \"username\", numeric: false, disablePadding: false, label: \"Username\" },\n  {\n    id: \"#OfTrades\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Total Trades\",\n  },\n  {\n    id: \"tournamentBalance\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Tournament Balance\",\n  },\n];\n\nconst EnhancedTableHead = (props) => {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: \"bold\",\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    width: \"100%\",\n  },\n  row: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.dark,\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark,\n  },\n}));\n\nconst AllEntrantsTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"tournamentBalance\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.data.map((entry) => {\n      return {\n        username: entry.user.username,\n        tournamentBalance: (\n          Math.round(entry.tournamentBalance * 100) / 100\n        ).toFixed(2),\n        numOfTrades: entry.trades.length,\n        avatar: entry.user.avatar,\n      };\n    });\n  };\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                      <TableCell\n                        className={classes.row}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Grid container alignItems=\"flex-start\" direction=\"row\">\n                          <Avatar src={row.avatar} />\n                          <Typography\n                            variant=\"h5\"\n                            style={{ marginTop: 10, paddingLeft: 10 }}\n                          >\n                            {row.username}\n                          </Typography>\n                        </Grid>\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.numOfTrades}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.tournamentBalance}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default AllEntrantsTable;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getEntryByUsernameAndTournamentName } from \"../redux/actions/entry.actions\";\nimport { getTradesByEntryId } from \"../redux/actions/trade.actions\";\nimport { getEntriesByTournamentId } from \"../redux/actions/entry.actions\";\n// COMPONENTS\nimport SearchBar from \"../components/SearchBar\";\nimport Chart from \"../components/Chart\";\nimport TradeBar from \"../components/TradeBar\";\nimport LatestPrice from \"../components/LatestPrice\";\nimport MyPositions from \"../components/MyPositions\";\nimport TournamentBar from \"../components/TournamentBar\";\nimport TradeHistoryTable from \"../components/TradeHistoryTable\";\nimport AllEntrantsTable from \"../components/AllEntrantsTable\";\n// MATERIAL UI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = (theme) => ({\n  searchBar: {\n    backgroundColor: theme.palette.primary.main,\n    width: \"100%\",\n    marginTop: 30,\n    marginBottom: 30,\n  },\n  chartContainer: {\n    backgroundColor: theme.palette.primary.dark,\n    borderRadius: 5,\n  },\n});\n\nclass Tournament extends React.Component {\n  state = {\n    modalOpen: false,\n    error: null,\n    stockData: [\n      {\n        id: \"SHOP\",\n        data: [\n          {\n            x: \"2020-06-01\",\n            y: 1,\n          },\n        ],\n      },\n    ],\n    stockInfo: {\n      symbol: \"SHOP\",\n    },\n    currentSearch: \"SHOP\",\n    timeFunction: \"TIME_SERIES_DAILY\",\n    intradayInterval: \"1min\",\n    currentPrice: \"loading\",\n    currentView: \"buy/sell\",\n    xScaleFormat: \"%Y-%m-%d\",\n    xFormat: \"time:%Y-%m-%d\",\n  };\n\n  componentDidMount() {\n    this.getPriceData(\"SHOP\", \"TIME_SERIES_DAILY\");\n    this.props.getEntriesByTournamentId(this.props.match.params.id);\n    if (localStorage.userId) {\n      this.handleGetCurrentEntry();\n    }\n  }\n\n  getPriceData = async (\n    searchString,\n    timeFunction = \"SHOP\",\n    intradayInterval = \"\"\n  ) => {\n    const queryString = this.formatPriceQuery(\n      searchString,\n      timeFunction,\n      intradayInterval\n    );\n\n    try {\n      const timeSeriesDataResponse = await fetch(queryString);\n      const timeSeriesData = await timeSeriesDataResponse.json();\n      const stockInfoResponse = await fetch(\n        `https://www.alphavantage.co/query?function=OVERVIEW&symbol=${searchString}&apikey=3VP9375JIOYD1569`\n      );\n      const stockInfo = await stockInfoResponse.json();\n      const priceDataResponse = await fetch(\n        `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${searchString}&apikey=3VP9375JIOYD1569`\n      );\n      const priceData = await priceDataResponse.json();\n\n      const dataKeys = Object.keys(timeSeriesData);\n      const timeSeriesHash = timeSeriesData[dataKeys[1]];\n      const formattedData = Object.keys(timeSeriesHash).map((key) => {\n        return {\n          x: key,\n          y: parseFloat(timeSeriesHash[key][\"4. close\"]),\n        };\n      });\n\n      let xScaleFormat = \"%Y-%m-%d\";\n      let xFormat = \"time:%Y-%m-%d\";\n      if (intradayInterval !== \"\") {\n        xScaleFormat = \"%Y-%m-%d %H:%M:%S\";\n        xFormat = \"time:%Y-%m-%d %H:%M:%S\";\n      }\n\n      this.setState({\n        error: null,\n        stockData: [\n          {\n            id: searchString,\n            data: formattedData,\n          },\n        ],\n        stockInfo: {\n          symbol: stockInfo[\"Symbol\"],\n          name: stockInfo[\"Name\"],\n          exchange: stockInfo[\"Exchange\"],\n          sector: stockInfo[\"Sector\"],\n        },\n        currentPrice: priceData[\"Global Quote\"][\"05. price\"],\n        xFormat: xFormat,\n        xScaleFormat: xScaleFormat,\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  handleGetCurrentEntry = async () => {\n    await this.props.getEntryByUsernameAndTournamentName(\n      localStorage.userId,\n      this.props.match.params.id\n    );\n    await this.props.getTradesByEntryId(this.props.currentEntry._id);\n  };\n\n  setPrice = (price) => {\n    this.setState({\n      currentPrice: parseFloat(price),\n    });\n  };\n\n  handleSearchSubmit = (searchString) => {\n    if (searchString !== undefined) {\n      this.setState({\n        currentSearch: searchString,\n      });\n      this.getPriceData(searchString, this.state.timeFunction);\n    }\n  };\n\n  handleChangeTimeFunction = (timeFunction, intradayInterval = \"\") => {\n    if (intradayInterval === \"\") {\n      this.getPriceData(this.state.currentSearch, timeFunction);\n    } else {\n      this.getPriceData(\n        this.state.currentSearch,\n        timeFunction,\n        intradayInterval\n      );\n    }\n  };\n\n  formatPriceQuery = (searchString, timeFunction, intradayInterval = \"\") => {\n    if (timeFunction !== \"TIME_SERIES_INTRADAY\") {\n      return `https://www.alphavantage.co/query?function=${timeFunction}&symbol=${searchString}&outputsize=compact&apikey=3VP9375JIOYD1569`;\n    } else {\n      return `https://www.alphavantage.co/query?function=${timeFunction}&symbol=${searchString}&interval=${intradayInterval}&apikey=3VP9375JIOYD1569`;\n    }\n  };\n\n  changeView = (view) => {\n    this.setState({\n      currentView: view,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <TournamentBar setView={this.changeView} />\n        {this.state.currentView === \"buy/sell\" ? (\n          <div style={{ width: \"95%\", margin: \"auto\" }}>\n            <Grid container>\n              <Grid item className={classes.searchBar}>\n                <SearchBar\n                  handleSearchSubmit={this.handleSearchSubmit}\n                  error={this.state.error}\n                />\n              </Grid>\n              <Grid container>\n                {this.state.stockInfo ? (\n                  <Grid container item justify=\"space-between\" xs={12} md={6}>\n                    <div>\n                      <div style={{ display: \"flex\" }}>\n                        <Typography variant=\"h5\" className={classes.stockInfo}>\n                          {this.state.stockInfo.name}\n                        </Typography>\n                        <Typography\n                          style={{ marginLeft: 10 }}\n                          variant=\"h6\"\n                          className={classes.stockInfo}\n                        >\n                          {this.state.stockInfo.symbol}\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography>{this.state.stockInfo.sector}</Typography>\n                      </div>\n                    </div>\n                  </Grid>\n                ) : null}\n                <Grid\n                  container\n                  item\n                  xs={12}\n                  md={6}\n                  style={{ marginTop: 30 }}\n                  alignItems=\"flex-start\"\n                  justify=\"flex-end\"\n                  direction=\"row\"\n                >\n                  <Button\n                    onClick={() =>\n                      this.handleChangeTimeFunction(\"TIME_SERIES_MONTHLY\")\n                    }\n                  >\n                    Monthly\n                  </Button>\n                  <Button\n                    onClick={() =>\n                      this.handleChangeTimeFunction(\"TIME_SERIES_WEEKLY\")\n                    }\n                  >\n                    Weekly\n                  </Button>\n                  <Button\n                    onClick={() =>\n                      this.handleChangeTimeFunction(\"TIME_SERIES_DAILY\")\n                    }\n                  >\n                    Daily\n                  </Button>\n                  <Button\n                    onClick={() =>\n                      this.handleChangeTimeFunction(\n                        \"TIME_SERIES_INTRADAY\",\n                        \"60min\"\n                      )\n                    }\n                  >\n                    Hourly\n                  </Button>\n                  <Button\n                    onClick={() =>\n                      this.handleChangeTimeFunction(\n                        \"TIME_SERIES_INTRADAY\",\n                        \"15min\"\n                      )\n                    }\n                  >\n                    15 min\n                  </Button>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} className={classes.chartContainer}>\n                <Chart\n                  stockInfo={this.state.stockInfo}\n                  data={this.state.stockData}\n                  xFormat={this.state.xFormat}\n                  xScaleFormat={this.state.xScaleFormat}\n                />\n              </Grid>\n              {this.props.currentEntry && !this.props.currentEntry.message ? (\n                <Grid container item xs={12}>\n                  <Grid item xs={6} style={{ marginTop: 10, marginBottom: 20 }}>\n                    <TradeBar\n                      getCurrentEntry={this.handleGetCurrentEntry}\n                      createdTrade={this.props.createdTrade}\n                      currentEntry={this.props.currentEntry}\n                      currentPrice={this.state.currentPrice}\n                      stockTicker={this.state.stockInfo.symbol}\n                      entryId={this.props.currentEntry._id || null}\n                    />\n                  </Grid>\n                  <Grid\n                    container\n                    item\n                    alignItems=\"flex-start\"\n                    justify=\"flex-end\"\n                    direction=\"row\"\n                    xs={6}\n                  >\n                    <LatestPrice\n                      searchString={this.state.stockInfo.symbol}\n                      setPrice={this.setPrice}\n                      currentPrice={this.state.currentPrice}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <MyPositions tradeData={this.props.tradeData} />\n                  </Grid>\n                </Grid>\n              ) : null}\n            </Grid>\n          </div>\n        ) : null}\n        {this.state.currentView === \"tradeHistory\" ? (\n          <div>\n            <TradeHistoryTable data={this.props.tradeData.tradesByEntry} />\n          </div>\n        ) : null}\n        {this.state.currentView === \"allEntrants\" ? (\n          <div>\n            <AllEntrantsTable data={this.props.entries} />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentEntry: state.entry.currentEntry,\n  entries: state.entry.tournamentEntries,\n  currentUser: state.auth.currentUser,\n  createdTrade: state.trade.createdTrade,\n  tradeData: state.trade,\n  tournaments: state.tournament.tournamentsArr,\n});\n\nexport default connect(mapStateToProps, {\n  getEntryByUsernameAndTournamentName,\n  getTradesByEntryId,\n  getEntriesByTournamentId,\n})(withStyles(useStyles, { withTheme: true })(Tournament));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../redux/actions/auth.actions\";\n// MATERIAL UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  dialogContainer: {\n    backgroundColor: theme.palette.primary.light,\n  },\n}));\n\nconst LogoutModal = (props) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Dialog open={props.open} onClose={props.handleModal}>\n        <Grid className={classes.dialogContainer} container>\n          <Button onClick={() => props.logout()} fullWidth>\n            Logout!\n          </Button>\n        </Grid>\n      </Dialog>\n    </>\n  );\n};\n\nexport default connect(null, { logout })(LogoutModal);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport LogoutModal from \"../components/LogoutModal\";\nimport withMediaQuery from \"../higherOrderComponents/withMediaQuery\";\n// Material UI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = (theme) => ({\n  nav: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  title: {\n    fontWeight: \"bold\",\n    textDecoration: \"none\",\n    paddingRight: 30,\n    [theme.breakpoints.down(\"lg\")]: {\n      flexGrow: 1,\n    },\n  },\n  menuIcon: {\n    color: theme.palette.text.primary,\n  },\n  list: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  listItem: {\n    backgroundColor: theme.palette.primary.main,\n    borderBottom: \"1px solid black\",\n  },\n  listText: {\n    color: theme.palette.text.primary,\n  },\n  paper: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  userContainer: {\n    padding: 10,\n    alignContent: \"right\",\n  },\n  username: {\n    paddingTop: 10,\n  },\n  credits: {\n    paddingLeft: 5,\n  },\n  loginButton: {\n    backgroundColor: theme.palette.text.primary,\n  },\n});\n\nclass NavBar extends React.Component {\n  state = {\n    modalOpen: false,\n    drawerOpen: false,\n  };\n\n  handleLogoutModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <AppBar position=\"static\" className={classes.nav}>\n          <Toolbar>\n            <Typography\n              component={Link}\n              to={\"/\"}\n              variant=\"h4\"\n              color=\"textPrimary\"\n              className={classes.title}\n            >\n              STONKKINGS\n            </Typography>\n            {this.props.mediaQuery ? (\n              <>\n                <Typography\n                  component={Link}\n                  to={\"/\"}\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                  className={classes.title}\n                >\n                  Lobby\n                </Typography>\n                <Typography\n                  component={Link}\n                  to={\"/my-tournaments\"}\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                  className={classes.title}\n                >\n                  My Tournaments\n                </Typography>\n                <Typography\n                  component={Link}\n                  to={\"/leaderboard\"}\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                  className={classes.title}\n                >\n                  Leaderboard\n                </Typography>\n                <div style={{ flexGrow: 1 }}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    component={Link}\n                    to={`/create-tournament`}\n                  >\n                    Create a Tournament\n                  </Button>\n                </div>\n                {this.props.currentUser && !this.props.currentUser.message ? (\n                  <div>\n                    <Grid className={classes.userContainer} container>\n                      <Grid item xs={4}></Grid>\n                      <Grid item xs={2}>\n                        <Avatar\n                          onClick={this.handleLogoutModal}\n                          src={this.props.currentUser.avatar}\n                        />\n                      </Grid>\n                      <Grid item xs={3} className={classes.username}>\n                        <Typography\n                          style={{ fontWeight: \"bold\" }}\n                          variant=\"h6\"\n                          align=\"left\"\n                        >\n                          {this.props.currentUser.username}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography\n                          className={classes.credits}\n                          align=\"right\"\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          Stonk Credits: {this.props.currentUser.accountBalance}\n                        </Typography>\n                      </Grid>\n                      <LogoutModal\n                        handleModal={this.handleLogoutModal}\n                        open={this.state.modalOpen}\n                      />\n                    </Grid>\n                  </div>\n                ) : (\n                  <Button\n                    className={classes.loginButton}\n                    variant=\"contained\"\n                    component={Link}\n                    to={\"/\"}\n                  >\n                    Login\n                  </Button>\n                )}\n              </>\n            ) : (\n              <>\n                <MenuIcon\n                  className={classes.menuIcon}\n                  onClick={() => this.setState({ drawerOpen: true })}\n                />\n                <SwipeableDrawer\n                  classes={{ paper: classes.paper }}\n                  open={this.state.drawerOpen}\n                  onOpen={() => this.setState({ drawerOpen: true })}\n                  onClose={() => this.setState({ drawerOpen: false })}\n                  anchor=\"right\"\n                >\n                  {this.props.currentUser && !this.props.currentUser.message ? (\n                    <div>\n                      <Grid className={classes.userContainer} container>\n                        <Grid item xs={2}>\n                          <Avatar\n                            onClick={this.handleLogoutModal}\n                            src={this.props.currentUser.avatar}\n                          />\n                        </Grid>\n                        <Grid item xs={3} className={classes.username}>\n                          <Typography\n                            style={{ fontWeight: \"bold\" }}\n                            variant=\"h6\"\n                            align=\"left\"\n                          >\n                            {this.props.currentUser.username}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography\n                            className={classes.credits}\n                            align=\"left\"\n                            variant=\"h6\"\n                            color=\"textPrimary\"\n                          >\n                            Stonk Credits:{\" \"}\n                            {this.props.currentUser.accountBalance}\n                          </Typography>\n                        </Grid>\n                        <LogoutModal\n                          handleModal={this.handleLogoutModal}\n                          open={this.state.modalOpen}\n                        />\n                      </Grid>\n                    </div>\n                  ) : (\n                    <Button\n                      className={classes.loginButton}\n                      variant=\"contained\"\n                      component={Link}\n                      to={\"/\"}\n                    >\n                      Login\n                    </Button>\n                  )}\n                  <List className={classes.list} style={{ padding: 0 }}>\n                    <ListItem\n                      className={classes.listItem}\n                      onClick={() => this.setState({ drawerOpen: false })}\n                      key={\"Lobby\"}\n                      component={Link}\n                      to={\"/\"}\n                    >\n                      <ListItemText\n                        className={classes.listText}\n                        primary={\"Lobby\"}\n                      />\n                    </ListItem>\n                    <ListItem\n                      className={classes.listItem}\n                      onClick={() => this.setState({ drawerOpen: false })}\n                      key={\"My Tournaments\"}\n                      component={Link}\n                      to={\"/my-tournaments\"}\n                    >\n                      <ListItemText\n                        className={classes.listText}\n                        primary={\"My Tournaments\"}\n                      />\n                    </ListItem>\n                    <ListItem\n                      className={classes.listItem}\n                      onClick={() => this.setState({ drawerOpen: false })}\n                      key={\"LeaderBoard\"}\n                      component={Link}\n                      to={\"/leaderboard\"}\n                    >\n                      <ListItemText\n                        className={classes.listText}\n                        primary={\"LeaderBoard\"}\n                      />\n                    </ListItem>\n                    <ListItem\n                      className={classes.listItem}\n                      onClick={() => this.setState({ drawerOpen: false })}\n                      key={\"Create Tournament\"}\n                      component={Link}\n                      to={\"/create-tournament\"}\n                    >\n                      <ListItemText\n                        className={classes.listText}\n                        primary={\"Create Tournament\"}\n                      />\n                    </ListItem>\n                  </List>\n                </SwipeableDrawer>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.auth.currentUser,\n});\n\nexport default connect(mapStateToProps)(\n  withStyles(useStyles, { withTheme: true })(\n    withMediaQuery(\"(min-width:1900px)\")(NavBar)\n  )\n);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// MATERIAL UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  dialogBox: {\n    backgroundColor: theme.palette.primary.light,\n  },\n  title: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  textContainer: {\n    display: \"flex\",\n  },\n  text: {\n    fontWeight: \"bold\",\n    color: theme.palette.primary.dark,\n  },\n  lobbyButton: {\n    width: \"100%\",\n    fontWeight: \"bold\",\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n    \"&:hover\": {\n      backgroundColor: theme.palette.text.primary,\n    },\n  },\n  createButton: {\n    backgroundColor: theme.palette.text.primary,\n    color: theme.palette.primary.dark,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.text.secondary,\n    },\n  },\n  cancelButton: {\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nconst CreateTournamentModal = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <div>\n      <Dialog open={props.open} onClose={props.handleModal}>\n        <Grid container className={classes.dialogBox}>\n          {!props.createTournamentSuccess ? (\n            <div>\n              <Grid item xs={12} className={classes.title}>\n                <DialogTitle id=\"simple-dialog-title\">\n                  Create Tournament\n                </DialogTitle>\n              </Grid>\n              <Grid item container xs={12}>\n                <DialogContent>\n                  <DialogContentText className={classes.text}>\n                    Tournament Name: {props.tournamentName}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    Max Entries: {props.entryLimit}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    Entry Fee: {props.entryFee}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    Start Time: {props.startTime}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    End Time: {props.endTime}\n                  </DialogContentText>\n                </DialogContent>\n              </Grid>\n              <Grid item xs={12}>\n                <DialogActions>\n                  <Button\n                    className={classes.cancelButton}\n                    variant=\"outlined\"\n                    onClick={props.handleModal}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    className={classes.createButton}\n                    variant=\"primary\"\n                    onClick={props.createTournament}\n                  >\n                    Create\n                  </Button>\n                </DialogActions>\n              </Grid>\n            </div>\n          ) : (\n            <div>\n              <Grid item xs={12} className={classes.title}>\n                <DialogTitle id=\"simple-dialog-title\">\n                  Tournament Successfully Created!\n                </DialogTitle>\n              </Grid>\n              <Grid item xs={12}>\n                <DialogActions>\n                  <Button\n                    className={classes.lobbyButton}\n                    onClick={() => history.push(\"/\")}\n                    variant=\"contained\"\n                  >\n                    Go to lobby!\n                  </Button>\n                </DialogActions>\n              </Grid>\n            </div>\n          )}\n        </Grid>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CreateTournamentModal;\n","import React from \"react\";\nimport CreateTournamentModal from \"../components/CreateTournamentModal\";\nimport { SERVER_URL } from \"../config\";\n// MATERIAL UI\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\n\nconst useStyles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 10,\n    padding: 20,\n    width: 600,\n    margin: \"auto\",\n  },\n  titleContainer: {\n    marginLeft: \"22%\",\n    marginBottom: 10,\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  title: {\n    marginRight: 10,\n    color: theme.palette.text.secondary,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    marginTop: 20,\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n    \"&:hover\": {\n      backgroundColor: theme.palette.text.primary,\n    },\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: `${theme.palette.text.primary} !important`,\n    },\n  },\n  cssLabel: {\n    color: \"white\",\n  },\n  cssFocused: {},\n  notchedOutline: {\n    borderWidth: \"1px\",\n    borderColor: `${theme.palette.primary.dark} !important`,\n  },\n});\n\nconst DateAndTimeSelectors = (props) => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container>\n        <Grid item xs={6} style={{ padding: 5 }}>\n          <KeyboardDatePicker\n            style={{ width: \"100%\" }}\n            InputLabelProps={{\n              style: {\n                color: \"white\",\n              },\n            }}\n            margin=\"normal\"\n            id={props.dateLabel}\n            label={props.dateLabel}\n            format=\"MM/dd/yyyy\"\n            value={props.dateValue}\n            onChange={(value) =>\n              props.handleChangeTime(value, `selectedDateFor${props.name}`)\n            }\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n        </Grid>\n        <Grid item xs={6} style={{ padding: 5 }}>\n          <KeyboardTimePicker\n            style={{ width: \"100%\" }}\n            InputLabelProps={{\n              style: {\n                color: \"white\",\n              },\n            }}\n            margin=\"normal\"\n            id={props.timeLabel}\n            label={props.timeLabel}\n            value={props.timeValue}\n            onChange={(value) =>\n              props.handleChangeTime(value, `selectedTimeFor${props.name}`)\n            }\n            KeyboardButtonProps={{\n              \"aria-label\": \"change time\",\n            }}\n          />\n        </Grid>\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n};\n\nclass CreateTournament extends React.Component {\n  state = {\n    modalOpen: false,\n    createTournamentLoading: false,\n    createTournamentSuccess: null,\n    tournamentName: \"\",\n    entryLimit: 20,\n    entryFee: 100,\n    selectedDateForStart: new Date(),\n    selectedTimeForStart: new Date(),\n    selectedDateForEnd: new Date(),\n    selectedTimeForEnd: new Date(),\n  };\n\n  handleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen,\n      createTournamentSuccess: false,\n    });\n  };\n\n  handleChangeTime = (value, name) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  formatTime = (dateSelected, timeSelected) => {\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    return new Date(\n      `${\n        monthNames[dateSelected.getMonth()]\n      } ${dateSelected.getDate()}, ${dateSelected.getFullYear()} ${timeSelected.getHours()}:${timeSelected.getMinutes()}:${timeSelected.getSeconds()}`\n    ).toString();\n  };\n\n  createTournamentFetch = () => {\n    this.setState({\n      createTournamentLoading: true,\n    });\n    fetch(`${SERVER_URL}/api/tournaments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-access-token\": localStorage.token,\n      },\n      body: JSON.stringify({\n        name: this.state.tournamentName,\n        entryFee: this.state.entryFee,\n        entryLimit: this.state.entryLimit,\n        startTime: this.formatTime(\n          this.state.selectedDateForStart,\n          this.state.selectedTimeForStart\n        ),\n        endTime: this.formatTime(\n          this.state.selectedDateForEnd,\n          this.state.selectedTimeForEnd\n        ),\n      }),\n    })\n      .then((res) => res.json())\n      .then((createdTournament) => {\n        this.setState({\n          createTournamentLoading: false,\n          createTournamentSuccess: true,\n        });\n      })\n      .catch(console.log);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container className={classes.paper}>\n        <Grid\n          className={classes.titleContainer}\n          item\n          xs={12}\n          container\n          direction=\"row\"\n          alignItems=\"center\"\n        >\n          <Grid item className={classes.title}>\n            <Typography color=\"\" variant=\"h4\">\n              Tournament Details\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AddCircleOutlineIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <TextField\n          style={{ margin: 5 }}\n          color=\"primary\"\n          value={this.state.name}\n          onChange={this.handleChange}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"tournamentName\"\n          label=\"Tournament Name\"\n          name=\"tournamentName\"\n          autoFocus\n          InputLabelProps={{\n            classes: {\n              root: classes.cssLabel,\n              focused: classes.cssFocused,\n            },\n          }}\n          InputProps={{\n            classes: {\n              root: classes.cssOutlinedInput,\n              focused: classes.cssFocused,\n              notchedOutline: classes.notchedOutline,\n            },\n          }}\n        />\n        <Grid item xs={6} style={{ padding: 5 }}>\n          <TextField\n            fullWidth={true}\n            value={this.state.entryLimit}\n            onChange={this.handleChange}\n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            required\n            name=\"entryLimit\"\n            label=\"Max Players\"\n            id=\"\"\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused,\n              },\n            }}\n            InputProps={{\n              classes: {\n                root: classes.cssOutlinedInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n              },\n            }}\n          />\n        </Grid>\n        <Grid item xs={6} style={{ padding: 5 }}>\n          <TextField\n            value={this.state.entryFee}\n            fullWidth={true}\n            onChange={this.handleChange}\n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            required\n            name=\"entryFee\"\n            label=\"Entry Fee\"\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused,\n              },\n            }}\n            InputProps={{\n              style: {\n                color: \"white\",\n              },\n              classes: {\n                root: classes.cssOutlinedInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n              },\n            }}\n            id=\"\"\n          />\n        </Grid>\n        <DateAndTimeSelectors\n          name={\"Start\"}\n          dateLabel={\"Choose start date\"}\n          timeLabel={\"Choose start time\"}\n          dateValue={this.state.selectedDateForStart}\n          timeValue={this.state.selectedTimeForStart}\n          handleChangeTime={this.handleChangeTime}\n        />\n        <DateAndTimeSelectors\n          name={\"End\"}\n          dateLabel={\"Choose end date\"}\n          timeLabel={\"Choose end time\"}\n          dateValue={this.state.selectedDateForEnd}\n          timeValue={this.state.selectedTimeForEnd}\n          handleChangeTime={this.handleChangeTime}\n        />\n        <Button\n          onClick={this.handleModal}\n          fullWidth\n          variant=\"contained\"\n          className={classes.submit}\n        >\n          Create Tournament\n        </Button>\n        <CreateTournamentModal\n          createTournamentLoading={this.state.createTournamentLoading}\n          createTournamentSuccess={this.state.createTournamentSuccess}\n          open={this.state.modalOpen}\n          handleModal={this.handleModal}\n          createTournament={this.createTournamentFetch}\n          tournamentName={this.state.tournamentName}\n          entryLimit={this.state.entryLimit}\n          entryFee={this.state.entryFee}\n          startTime={this.formatTime(\n            this.state.selectedDateForStart,\n            this.state.selectedTimeForStart\n          )}\n          endTime={this.formatTime(\n            this.state.selectedDateForEnd,\n            this.state.selectedTimeForEnd\n          )}\n        />\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(CreateTournament);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n// actions\nimport { loginWithToken } from \"./redux/actions/auth.actions\";\n// components\nimport Footer from \"./components/Footer\";\nimport DisplayErrors from \"./components/DisplayErrors\";\n// containers\nimport Leaderboard from \"./containers/Leaderboard\";\nimport MyTournaments from \"./containers/MyTournaments\";\nimport Lobby from \"./containers/Lobby\";\nimport Login from \"./containers/Login\";\nimport Tournament from \"./containers/Tournament\";\nimport NavBar from \"./containers/NavBar\";\nimport CreateTournament from \"./containers/CreateTournament\";\n// MATERIAL UI\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = (theme) => ({\n  base: {\n    backgroundColor: theme.palette.primary.light,\n  },\n  mainContainer: {\n    minHeight: \"100vh\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n});\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.handleLoginUser();\n  }\n\n  handleLoginUser = async () => {\n    await this.props.loginWithToken(localStorage.token);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.base}>\n        <div className={classes.mainContainer}>\n          <DisplayErrors />\n          {!this.props.currentUser ? (\n            <Login currentUser={this.props.currentUser} />\n          ) : (\n            <BrowserRouter>\n              <NavBar />\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={(routeProps) => <Lobby {...routeProps} />}\n                />\n                <Route\n                  exact\n                  path=\"/my-tournaments\"\n                  render={(routeProps) => <MyTournaments {...routeProps} />}\n                />\n                <Route\n                  exact\n                  path=\"/leaderboard\"\n                  render={(routeProps) => <Leaderboard {...routeProps} />}\n                />\n                <Route\n                  exact\n                  path=\"/create-tournament\"\n                  render={(routeProps) => <CreateTournament {...routeProps} />}\n                />\n                <Route\n                  exact\n                  path=\"/tournament/:id\"\n                  render={(routeProps) => (\n                    <Tournament\n                      {...routeProps}\n                      currentUser={this.props.currentUser}\n                    />\n                  )}\n                />\n              </Switch>\n            </BrowserRouter>\n          )}\n        </div>\n        <Footer className={classes.footer} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.auth.currentUser,\n});\n\nexport default connect(mapStateToProps, { loginWithToken })(\n  withStyles(useStyles, { withTheme: true })(App)\n);\n","import {\n  FETCH_USER_INFORMATION_BEGIN,\n  FETCH_USER_INFORMATION_SUCCESS,\n  FETCH_USER_INFORMATION_FAILURE,\n  END_USER_SESSION,\n} from \"../actions/auth.actions\";\n\nconst initialState = {\n  currentUser: null,\n  loggedIn: false,\n  loading: false,\n  error: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_USER_INFORMATION_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case FETCH_USER_INFORMATION_SUCCESS:\n      return {\n        loading: false,\n        loggedIn: true,\n        error: false,\n        currentUser: action.payload.userInfo,\n      };\n    case FETCH_USER_INFORMATION_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n    case END_USER_SESSION:\n      return {\n        ...initialState,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import {\n  FETCH_TOURNAMENTS_BEGIN,\n  FETCH_TOURNAMENTS_SUCCESS,\n  FETCH_TOURNAMENTS_FAILURE,\n} from \"../actions/tournament.actions\";\n\nconst initialState = {\n  tournamentsArr: [],\n  loadingTournaments: false,\n  tournamentsError: null,\n};\n\nconst tournamentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_TOURNAMENTS_BEGIN:\n      return {\n        ...state,\n        loadingTournaments: true,\n        tournamentsError: null,\n      };\n    case FETCH_TOURNAMENTS_SUCCESS:\n      return {\n        ...state,\n        loadingTournaments: false,\n        tournamentsError: false,\n        tournamentsArr: action.payload.tournamentsArr,\n      };\n    case FETCH_TOURNAMENTS_FAILURE:\n      return {\n        ...state,\n        loadingTournaments: false,\n        tournamentsError: action.payload.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default tournamentReducer;\n","import {\n  CREATE_ENTRY_BEGIN,\n  CREATE_ENTRY_SUCCESS,\n  CREATE_ENTRY_FAILURE,\n  FETCH_ENTRY_INFORMATION_BEGIN,\n  FETCH_ENTRY_INFORMATION_SUCCESS,\n  FETCH_ENTRY_INFORMATION_FAILURE,\n  FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN,\n  FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS,\n  FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE,\n} from \"../actions/entry.actions\";\n\nconst initialState = {\n  createdEntry: null,\n  currentEntry: null,\n  tournamentEntries: [],\n  loadingCurrentEntry: false,\n  loadingCreatedEntry: false,\n  loadingTournamentEntries: false,\n  currentEntryError: null,\n  createdEntryError: null,\n  tournamentEntriesError: null,\n};\n// make errors false on success and null on begin\nconst entryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ENTRY_INFORMATION_BEGIN:\n      return {\n        ...state,\n        loadingCurrentEntry: true,\n        currentEntryError: null,\n      };\n    case FETCH_ENTRY_INFORMATION_SUCCESS:\n      return {\n        ...state,\n        loadingCurrentEntry: false,\n        currentEntryError: false,\n        currentEntry: action.payload.entryInfo,\n      };\n    case FETCH_ENTRY_INFORMATION_FAILURE:\n      return {\n        ...state,\n        loadingCurrentEntry: false,\n        currentEntryError: action.payload.error,\n      };\n    case CREATE_ENTRY_BEGIN:\n      return {\n        ...state,\n        loadingCreatedEntry: true,\n        createdEntryError: null,\n      };\n    case CREATE_ENTRY_SUCCESS:\n      return {\n        ...state,\n        loadingCreatedEntry: false,\n        createdEntry: action.payload.entryInfo,\n        createdEntryError: false,\n      };\n    case CREATE_ENTRY_FAILURE:\n      return {\n        ...state,\n        loadingCreatedEntry: false,\n        createdEntryError: action.payload.error,\n      };\n    case FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN:\n      return {\n        ...state,\n        loadingTournamentEntries: true,\n        tournamentEntriesError: null,\n      };\n    case FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS:\n      return {\n        ...state,\n        loadingTournamentEntries: false,\n        tournamentEntries: action.payload.entriesArr,\n        tournamentEntriesError: false,\n      };\n    case FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE:\n      return {\n        ...state,\n        loadingTournamentEntries: false,\n        tournamentEntriesError: action.payload.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default entryReducer;\n","import {\n  CREATE_TRADE_BEGIN,\n  CREATE_TRADE_SUCCESS,\n  CREATE_TRADE_FAILURE,\n  FETCH_TRADES_BY_ENTRY_BEGIN,\n  FETCH_TRADES_BY_ENTRY_SUCCESS,\n  FETCH_TRADES_BY_ENTRY_FAILURE,\n} from \"../actions/trade.actions\";\n\nconst initialState = {\n  createdTrade: [],\n  tradesByEntry: [],\n  loadingCreatedTrade: false,\n  loadingTradeByEntryArr: false,\n  createTradeErr: null,\n  tradesByEntryErr: null,\n};\n\nconst tradeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_TRADE_BEGIN:\n      return {\n        ...state,\n        loadingCreatedTrade: true,\n      };\n    case CREATE_TRADE_SUCCESS:\n      return {\n        ...state,\n        loadingCreatedTrade: false,\n        createdTrade: action.payload.tradeInfo,\n      };\n    case CREATE_TRADE_FAILURE:\n      return {\n        ...state,\n        loadingCreatedTrade: false,\n        createTradeErr: action.payload.error,\n      };\n    case FETCH_TRADES_BY_ENTRY_BEGIN:\n      return {\n        ...state,\n        loadingTradeByEntryArr: true,\n      };\n    case FETCH_TRADES_BY_ENTRY_SUCCESS:\n      return {\n        ...state,\n        loadingTradeByEntryArr: false,\n        tradesByEntry: action.payload.tradesByEntry,\n      };\n    case FETCH_TRADES_BY_ENTRY_FAILURE:\n      return {\n        ...state,\n        loadingTradeByEntryArr: false,\n        tradesByEntryErr: action.payload.err,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default tradeReducer;\n","import { combineReducers } from \"redux\";\n// import reducers here\nimport auth from \"./auth.reducers\";\nimport tournament from \"./tournament.reducers\";\nimport entry from \"./entry.reducers\";\nimport trade from \"./trade.reducers\";\n\nexport default combineReducers({ auth, tournament, entry, trade });\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#484848\",\n      dark: \"#000000\",\n    },\n    secondary: {\n      main: \"#d84315\",\n    },\n    text: {\n      primary: \"#64dd17\",\n      secondary: \"#fafafa\",\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n        <App />\n      </SnackbarProvider>\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}