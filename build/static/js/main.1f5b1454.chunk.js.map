{"version":3,"sources":["config.js","redux/actions/auth.actions.js","components/Footer.js","components/Countdown.js","components/LeaderboardTable.js","containers/Leaderboard.js","redux/actions/tournament.actions.js","components/MyTournamentsTable.js","containers/MyTournaments.js","components/TournamentModal.js","components/LobbyTable.js","containers/Lobby.js","redux/actions/entry.actions.js","containers/Login.js","redux/actions/trade.actions.js","components/SearchBar.js","components/Chart.js","components/TradeModal.js","components/SnackBarDisplay.js","components/TradeBar.js","components/LatestPrice.js","components/MyPositions.js","higherOrderComponents/withMediaQuery.js","components/TournamentBar.js","components/TradeHistoryTable.js","components/AllEntrantsTable.js","containers/Tournament.js","components/LogoutModal.js","containers/NavBar.js","components/CreateTournamentModal.js","containers/CreateTournament.js","App.js","redux/reducers/auth.reducers.js","redux/reducers/tournament.reducers.js","redux/reducers/entry.reducers.js","redux/reducers/trade.reducers.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["URL","fetchUserInfoSuccess","userInfo","type","payload","fetchUserInfoFailure","err","loginWithToken","token","dispatch","fetch","method","headers","then","res","json","localStorage","accessToken","userId","id","catch","Copyright","Typography","variant","style","color","align","Date","getFullYear","useStyles","makeStyles","theme","footer","padding","spacing","maxWidth","marginTop","backgroundColor","palette","primary","dark","icon","text","secondary","width","Footer","classes","Fragment","className","Grid","container","xs","item","component","Countdown","state","countdown","now","getTime","timeleft","props","countDownEnd","days","Math","floor","hours","minutes","seconds","setState","overMsg","intervalId","setInterval","this","clearInterval","React","Component","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","label","EnhancedTableHead","order","onRequestSort","rowCount","TableHead","TableRow","tableHead","map","headCell","TableCell","key","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","root","paddingLeft","paddingRight","toolbar","title","fontWeight","flexGrow","stonkKing","main","EnhancedTableToolbar","Toolbar","alignItems","justify","Avatar","src","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","row","tablePagination","LeaderboardTable","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","rows","users","user","username","avatar","wins","accountBalance","numOfEntries","entries","length","Paper","TableContainer","Table","aria-labelledby","aria-label","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","hover","role","tabIndex","scope","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","Leaderboard","mainContainer","withStyles","breakpoints","up","withTheme","getTournaments","tournamentsArr","fetchTournamentsSuccess","fetchTournamentsFailure","enterButton","MyTournamentsTable","tournament","name","entryFee","totalPrize","start","startTime","end","endTime","Button","autoFocus","Link","to","MyTournaments","userTournaments","getUserTournaments","forEach","entry","push","connect","TournamentModal","entered","handleSignUp","handleEnter","tournamentInfo","Dialog","open","onClose","handleModal","dialogContainer","dialogTitle","DialogTitle","timer","DialogContent","dialogContent","currentUser","calcContainer","DialogContentText","calcTitle","entryLimit","DialogActions","cancelButton","signUpButton","textAlign","light","borderBottom","borderColor","display","fontSize","LobbyTable","tableHeader","handleClickTournamentRow","Lobby","modalOpen","tournamentClickedInfo","tournamentId","createEntry","updatedTournament","find","t","userEntry","_id","mainTableHeader","entryData","auth","body","JSON","stringify","entryInfo","createEntrySuccess","createEntryFailure","createButton","tableCellHeader","tableCell","textDecoration","href","Login","signIn","setSignIn","bool","handleField","e","handleLogin","password","logIn","history","email","loggedIn","console","log","CssBaseline","sm","md","image","elevation","square","form","noValidate","TextField","fullWidth","onChange","InputLabelProps","cssLabel","focused","cssFocused","InputProps","cssOutlinedInput","notchedOutline","required","autoComplete","FormControlLabel","control","Checkbox","submit","Box","mt","credentials","signInOrUp","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","input","borderWidth","getTradesByEntryId","entryId","tradesByEntry","fetchTradesByEntrySuccess","fetchTradesByEntryFailure","popper","inputFocused","groupLabel","option","inputRoot","SearchBar","setOpen","options","setOptions","loading","useEffect","Autocomplete","onOpen","getOptionSelected","getOptionLabel","onInputChange","results","bestMatches","val","handleSearchSubmit","ListboxProps","listBox","renderInput","params","endAdornment","CircularProgress","size","stockInfo","Chart","grid","line","stroke","axis","ticks","fill","legend","crosshair","data","right","bottom","left","xScale","format","xScaleFormat","precision","xFormat","yScale","min","max","stacked","reverse","axisTop","axisRight","axisLeft","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","axisBottom","colors","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","dialogHeader","textFieldContainer","sharesField","borderRadius","sharesFieldInput","button","TradeModal","buyOrSell","currentBalance","amountOfShares","price","stockTicker","round","toFixed","currentEntry","tournamentBalance","defaultValue","handleShareField","inputProps","handleTrade","Alert","SnackBarDisplay","Snackbar","autoHideDuration","handleClose","anchorOrigin","horizontal","vertical","error","severity","message","TradeBar","shareAmountField","openModal","openSnackBar","handleCloseSnackBar","reason","handleClickSnackBar","createTrade","time","currentPrice","getCurrentEntry","snackbarmessage","snackbarErr","createdTrade","buyButton","sellButton","tradeObj","tradeInfo","createTradeSuccess","createTradeFailure","marginRight","LatestPrice","fetchPrice","searchString","priceData","setPrice","MyPositions","hasPositions","tradeData","filter","self","indexOf","ticker","netShares","averagePrice","sharePriceXNumOfSharesSum","totalShares","trade","withMediaQuery","args","mediaQuery","useMediaQuery","TournamentInformation","setView","TournamentBar","drawerOpen","setViewAndCloseDrawer","view","AppBar","SwipeableDrawer","anchor","menuButton","mobileTitles","TradeHistoryTable","formattedDate","date","getHours","getMinutes","ampm","strTime","getMonth","getDate","formatDate","timeTraded","parseFloat","AllEntrantsTable","numOfTrades","trades","Tournament","stockData","x","y","symbol","currentSearch","timeFunction","intradayInterval","currentView","getPriceData","queryString","formatPriceQuery","timeSeriesHash","Object","keys","formattedData","exchange","sector","handleGetCurrentEntry","getEntryByUsernameAndTournamentName","match","undefined","handleChangeTimeFunction","changeView","getEntriesByTournamentId","tournaments","searchBar","marginLeft","chartContainer","tournamentEntries","fetchEntryInfoSuccess","fetchEntryInfoFailure","entriesArr","fetchEntriesByTournamentIdSuccess","fetchEntriesByTournamentIdFailure","LogoutModal","useHistory","clear","NavBar","handleLogoutModal","nav","userContainer","credits","loginButton","menuIcon","List","list","ListItem","listItem","ListItemText","listText","down","alignContent","paddingTop","dialogBox","textContainer","lobbyButton","CreateTournamentModal","createTournamentSuccess","tournamentName","createTournament","DateAndTimeSelectors","utils","DateFnsUtils","dateLabel","dateValue","handleChangeTime","KeyboardButtonProps","timeLabel","timeValue","CreateTournament","createTournamentLoading","selectedDateForStart","selectedTimeForStart","selectedDateForEnd","selectedTimeForEnd","handleChange","formatTime","dateSelected","timeSelected","getSeconds","toString","createTournamentFetch","createdTournament","titleContainer","App","app","exact","path","render","routeProps","minHeight","initialState","authReducer","action","loadingTournaments","tournamentsError","tournamentById","loadingTournamentById","tournamentByIdError","tournamentReducer","createdEntry","loadingCurrentEntry","loadingCreatedEntry","loadingTournamentEntries","currentEntryError","createdEntryError","tournamentEntriesError","entryReducer","loadingCreatedTrade","loadingTradeByEntryArr","createTradeErr","tradesByEntryErr","tradeReducer","combineReducers","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","createMuiTheme","ReactDOM","ThemeProvider","store","document","getElementById"],"mappings":"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","file":"static/js/main.1f5b1454.chunk.js","sourcesContent":["export default URL = \"https://stonk-kings.herokuapp.com\"; ","import URL from '../../config';\nexport const FETCH_USER_INFORMATION_BEGIN = \"FETCH_USER_INFORMATION_BEGIN\";\nexport const FETCH_USER_INFORMATION_SUCCESS = \"FETCH_USER_INFORMATION_SUCCESS\";\nexport const FETCH_USER_INFORMATION_FAILURE = \"FETCH_USER_INFORMATION_FAILURE\";\n\nconst fetchUserInfoBegin = () => ({\n  type: FETCH_USER_INFORMATION_BEGIN\n});\n\nconst fetchUserInfoSuccess = userInfo => ({\n  type: FETCH_USER_INFORMATION_SUCCESS,\n  payload: { userInfo }\n});\n\nconst fetchUserInfoFailure = err => ({\n  type: FETCH_USER_INFORMATION_FAILURE,\n  payload: { err }\n});\n\nexport const auth = (credentials, signInOrUp) => {\n  return dispatch => {\n    dispatch(fetchUserInfoBegin());\n    return fetch(`${URL}/api/auth/${signInOrUp}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ...credentials\n      })\n    })\n      .then(res => res.json())\n      .then(userInfo => {\n        dispatch(fetchUserInfoSuccess(userInfo))\n        localStorage.token = userInfo.accessToken\n        localStorage.userId = userInfo.id\n        return userInfo\n      })\n      .catch(err => dispatch(fetchUserInfoFailure(err)));\n  }\n};\n\nexport const loginWithToken = (token) => {\n  return dispatch => {\n    dispatch(fetchUserInfoBegin());\n    return fetch(`${URL}/api/auth/loginWithToken`, {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": token\n      }\n    })\n    .then(res => res.json())\n    .then(userInfo => {\n      dispatch(fetchUserInfoSuccess(userInfo))\n      localStorage.token = userInfo.accessToken\n      localStorage.userId = userInfo.id\n      return userInfo\n    })\n    .catch(err => dispatch(fetchUserInfoFailure(err)))\n  }\n};","import React from 'react';\n// MATERIAL-UI\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { NavLink } from 'react-router-dom';\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" style={{color: 'white'}} align=\"center\">\n      {'Copyright © '}\n\n        Stonk Kings\n\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    padding: theme.spacing(4),\n    maxWidth: '100%',\n    marginTop: 20,\n    backgroundColor: theme.palette.primary.dark\n  },\n  icon: {\n    color: theme.palette.text.secondary,\n    width: '100%',\n  }\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment >\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Grid container xs={12}>\n          <Grid item xs={4}>\n            <InstagramIcon className={classes.icon}/>\n          </Grid>\n          <Grid item xs={4}>\n            <TwitterIcon className={classes.icon}/>\n          </Grid>\n          <Grid item xs={4}>\n            <FacebookIcon className={classes.icon}/>\n          </Grid>\n        </Grid>\n        <Typography variant=\"subtitle1\" align=\"center\" style={{color: 'white'}} component=\"p\">\n          Follow us on Social Media!\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  )\n}\n\nexport default Footer;","import React from \"react\";\nimport TableCell from '@material-ui/core/TableCell';\n\nclass Countdown extends React.Component {\n\n  state = {\n    countdown: \"loading...\"\n  }\n  \n  componentDidMount() {\n    const intervalId = setInterval(this.countdown, 1000)\n    this.setState({intervalId: intervalId})\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId)\n  }\n  \n  countdown = () => {\n    let now = new Date().getTime();\n\n    let timeleft = this.props.countDownEnd - now;\n        \n    // Calculating the days, hours, minutes and seconds left\n    let days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\n    let hours = Math.floor((timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    let minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = Math.floor((timeleft % (1000 * 60)) / 1000);\n    this.setState({\n      countdown: `${days} days, ${hours}:${minutes}:${seconds}`\n    })\n    if (timeleft < 0) {\n      // clearInterval(this.state.intervalId);\n      this.setState({\n        countdown: this.props.overMsg \n      })\n    }\n  }\n\n  render() {\n    return (\n      this.state.countdown\n    )\n  }\n}\n\nexport default Countdown;","import React from 'react';\nimport Countdown from './Countdown';\n// MATERIAL UI \nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport Avatar from '@material-ui/core/Avatar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'username', numeric: false, disablePadding: false, label: 'Username' },\n  { id: 'numOfEntries', numeric: true, disablePadding: false, label: 'Number of Entries' },\n  { id: 'wins', numeric: true, disablePadding: false, label: 'Wins' },\n  { id: 'accountBalance', numeric: true, disablePadding: false, label: 'Account Balance'}\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  toolbar: {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.dark\n  },\n  title: {\n    fontWeight: 'bold',\n    flexGrow: 1,\n  },\n  stonkKing: {\n    fontWeight: 'bold',\n    color: theme.palette.secondary.main,\n    paddingRight: 10\n  },\n}));\n\nconst EnhancedTableToolbar = () => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar className={classes.toolbar}>\n      <Grid container item alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\" xs={12}>\n        <Typography style={{flexGrow: 1}} className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n          Leaderboard\n        </Typography>\n\n        <Typography align=\"right\" className={classes.stonkKing} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          L33TPikachu\n        </Typography>\n        <Avatar src={'https://i1.sndcdn.com/avatars-000547985256-ntiz46-t500x500.jpg'} />\n      </Grid>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary\n  },\n  row: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark\n  }\n}));\n\nconst LeaderboardTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('accountBalance');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.users.map(user => {\n      return {\n        username: user.username,\n        avatar: user.avatar,\n        wins: user.wins,\n        accountBalance: user.accountBalance,\n        numOfEntries: user.entries.length\n      }\n    })\n  }\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar  />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                   \n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                    >\n                      <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                        <Grid container alignItems=\"flex-start\" direction=\"row\">\n                          <Avatar src={row.avatar} />\n                          <Typography variant=\"h5\" style={{marginTop: 10, paddingLeft: 10}}>\n                            {row.username}\n                          </Typography>\n                        </Grid>\n                      </TableCell>\n                      {row.username === \"Pikachu\" ? (\n                        <TableCell className={classes.row} align=\"right\">12</TableCell>\n                      ) : (\n                        <TableCell className={classes.row} align=\"right\">{row.numOfEntries}</TableCell>\n                      )}\n                      <TableCell className={classes.row} align=\"right\">{row.wins}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.accountBalance}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default LeaderboardTable;","import React from 'react';\nimport LeaderboardTable from '../components/LeaderboardTable';\nimport URL from '../config';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  mainContainer: {\n    [theme.breakpoints.up('lg')]:{\n      padding: 100\n    }\n  }\n});\n\nclass Leaderboard extends React.Component {\n\n  state = {\n    users: []\n  }\n\n  componentDidMount() {\n    fetch(`${URL}/api/users`)\n      .then(res => res.json())\n      .then(users => {\n        this.setState({\n          users: users\n        })\n      })\n  }\n\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.mainContainer}>\n        <LeaderboardTable users={this.state.users} />\n      </div>\n    )\n  }\n}\n\nexport default withStyles(useStyles, {withTheme: true})(Leaderboard);","import URL from '../../config';\nexport const FETCH_TOURNAMENTS_BEGIN = \"FETCH_TOURNAMENTS_BEGIN\";\nexport const FETCH_TOURNAMENTS_SUCCESS = \"FETCH_TOURNAMENTS_SUCCESS\";\nexport const FETCH_TOURNAMENTS_FAILURE = \"FETCH_TOURNAMENTS_FAILURE\";\n\nconst fetchTouranmentsBegin = () => ({\n  type: FETCH_TOURNAMENTS_BEGIN \n});\n\nconst fetchTournamentsSuccess = tournamentsArr => ({\n  type: FETCH_TOURNAMENTS_SUCCESS,\n  payload: { tournamentsArr }\n});\n\nconst fetchTournamentsFailure = err => ({\n  type: FETCH_TOURNAMENTS_FAILURE,\n  payload: { err }\n});\n\nexport const getTournaments = () => dispatch => {\n  dispatch(fetchTouranmentsBegin())\n  return fetch(`${URL}/api/tournaments`)\n    .then(res => res.json())\n    .then(tournamentsArr => {\n      dispatch(fetchTournamentsSuccess(tournamentsArr))\n    })\n    .catch(err => dispatch(fetchTournamentsFailure(err)));\n};\n  \n","import React from 'react';\nimport Countdown from './Countdown';\nimport { Link } from \"react-router-dom\";\n// MATERIAL UI \nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'name', numeric: false, disablePadding: false, label: 'Tournament Name' },\n  { id: 'entryFee', numeric: true, disablePadding: false, label: 'Entry Fee' },\n  { id: 'entries', numeric: true, disablePadding: false, label: 'Entries'},\n  { id: 'totalPrize', numeric: true, disablePadding: false, label: 'Total Prize' },\n  { id: 'start', numeric: true, disablePadding: false, label: 'Start' },\n  { id: 'end', numeric: true, disablePadding: false, label: 'End' },\n  { id: 'enter', numeric: true, disablePadding: false, label: 'Enter' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  toolbar: {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.dark\n  },\n  title: {\n    fontWeight: 'bold',\n    flexGrow: 1,\n  }\n}));\n\nconst EnhancedTableToolbar = () => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar className={classes.toolbar}>\n      <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n        My Tournaments\n      </Typography>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary\n  },\n  row: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark\n  },\n  enterButton: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.dark,\n    width: 20,\n    '&:hover': {\n      backgroundColor: theme.palette.text.primary\n    }\n  }\n}));\n\nconst MyTournamentsTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('start');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.tournamentsArr.map(tournament => {\n      return {\n        tournament: tournament,\n        name: tournament.name,\n        entryFee: tournament.entryFee,\n        entries: tournament.entries.length,\n        totalPrize: tournament.entryFee * tournament.entries.length,\n        start: tournament.startTime,\n        end: tournament.endTime\n      }\n    })\n  }\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar  />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                   \n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                    >\n                      <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                        {row.name}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.entryFee}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.entries}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.totalPrize}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown className={classes.row} countDownEnd={new Date(row.start).getTime()} overMsg={\"Started!\"}/>\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown className={classes.row} countDownEnd={new Date(row.end).getTime()} overMsg={\"Ended!\"}/>\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Button className={classes.enterButton} variant=\"outlined\" autoFocus component={Link} to={`/tournament/${row.tournament.id}`}>\n                          Enter\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default MyTournamentsTable;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getTournaments } from \"../redux/actions/tournament.actions\";\nimport MyTournamentsTable from \"../components/MyTournamentsTable\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  mainContainer: {\n    [theme.breakpoints.up('lg')]:{\n      padding: 100\n    }\n  }\n});\n\nclass MyTournaments extends React.Component {\n\n  state = {\n    userTournaments: []\n  }\n\n  componentDidMount() {\n    this.props.getTournaments();\n  }\n\n  getUserTournaments = () => {\n    if (localStorage.userId) {\n      const userTournaments = [];\n      this.props.tournamentsArr.forEach(tournament => {\n        tournament.entries.forEach(entry => {\n          if (entry.user === localStorage.userId) {\n            userTournaments.push(tournament);\n          }\n        })  \n      });\n      return userTournaments;\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.mainContainer}>\n        <MyTournamentsTable tournamentsArr={this.getUserTournaments()} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  tournamentsArr: state.tournament.tournamentsArr\n})\n\nexport default connect(\n  mapStateToProps,\n  { getTournaments }\n)(withStyles(useStyles, {withTheme: true})(MyTournaments));","import React from 'react';\nimport Countdown from '../components/Countdown';\nimport { Link } from 'react-router-dom';\n// MATERIAL UI  \nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = (theme) => ({\n  timer: {\n    textAlign: 'right'\n  },\n  paper: {\n    margin: 0\n  },\n  dialogTitle: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  dialogContainer: {\n    backgroundColor: theme.palette.primary.light\n  },\n  dialogContent: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  }, \n  calcContainer: {\n    borderBottom: 1,\n    borderColor: 'black',\n    display: 'flex'\n  },\n  calcTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark,\n    flexGrow: 1 \n  },\n  enterButton: {\n    width: '100%',\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n   '&:hover': {\n     backgroundColor: theme.palette.text.primary,\n   }\n  },\n  signUpButton: {\n    backgroundColor: theme.palette.text.primary,\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.text.secondary\n   }\n  },\n  cancelButton: {\n    backgroundColor: theme.palette.primary.main\n  }\n});\n\n// updates and sets entered to true, and never gets reset to false. \n// when clicked sign in current user is updated but curr tournament clicked info is not \n// tournament info only updated on click tournament row which row info is updated when handleenter \n\n\nclass TournamentModal extends React.Component {\n  \n  state = {\n    entered: false\n  }\n\n  handleSignUp = () => {\n    this.props.handleEnter(this.props.tournamentInfo.id)\n    this.setState({\n      entered: !this.state.entered\n    }) \n  }\n  \n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        {this.props.tournamentInfo ? (\n          <div>\n            <Dialog\n              classes={{\n                paper: classes.paper\n              }}\n              open={this.props.open}\n              onClose={this.props.handleModal}\n            >\n              <Grid className={classes.dialogContainer} container >\n                <Grid className={classes.dialogTitle} container item xs={12}>\n                  <Grid item xs={6}>\n                    <DialogTitle id=\"simple-dialog-title\">{this.props.tournamentInfo.name}</DialogTitle>\n                  </Grid>\n                  {new Date(this.props.tournamentInfo.startTime) > new Date() ? (\n                    <Grid item xs={6}>\n                      <DialogTitle className={classes.timer} id=\"simple-dialog-title\">\n                        Starts: <Countdown countDownEnd={new Date(this.props.tournamentInfo.startTime).getTime()} overMsg={\"Started!\"}/>\n                      </DialogTitle>\n                    </Grid>\n                  ) : (\n                    <Grid item xs={6}>\n                      {new Date(this.props.tournamentInfo.endTime) > new Date() ? (\n                        <DialogTitle className={classes.timer} id=\"simple-dialog-title\">\n                          Ends: <Countdown countDownEnd={new Date(this.props.tournamentInfo.endTime).getTime()} overMsg={\"Ended!\"}/>\n                        </DialogTitle>\n                      ) : (\n                      <DialogTitle className={classes.timer} id=\"simple-dialog-title\">\n                        Tournament has ended.\n                      </DialogTitle>\n                      )}\n                    </Grid>\n                  )}\n                </Grid>\n                <Grid item container xs={6}>\n                  <DialogContent className={classes.dialogContent}>\n                    {this.props.currentUser ? (\n                      <div>\n                        <Grid className={classes.calcContainer} item xs={12}>\n                          <DialogContentText className={classes.calcTitle}>\n                            Your Credits: \n                          </DialogContentText>\n                          <DialogContentText className={classes.dialogContent}>\n                            {this.props.currentUser.accountBalance} \n                          </DialogContentText>\n                        </Grid>\n                        <Grid className={classes.calcContainer} item xs={12}>\n                          <DialogContentText className={classes.calcTitle}>\n                            Entry Fee: \n                          </DialogContentText>\n                          <DialogContentText className={classes.dialogContent}>\n                            - {this.props.tournamentInfo.entryFee} \n                          </DialogContentText>\n                        </Grid>\n                        <Grid className={classes.calcContainer} item xs={12}>\n                          <DialogContentText className={classes.calcTitle}>\n                            Resulting Balance: \n                          </DialogContentText>\n                          <DialogContentText className={classes.dialogContent}>\n                            {this.props.currentUser.accountBalance - this.props.tournamentInfo.entryFee} \n                          </DialogContentText>\n                        </Grid>\n                      </div>\n                    ) : (\n                      <DialogContentText>\n                        Please login!\n                      </DialogContentText>\n                    )}\n                  </DialogContent>\n                </Grid>\n                <Grid item container xs={6}>\n                  <DialogContent className={classes.dialogContent}>\n                    <Grid className={classes.calcContainer} item xs={12}>\n                      <DialogContentText className={classes.calcTitle}>\n                        Entries:\n                      </DialogContentText>\n                      <DialogContentText className={classes.dialogContent}>\n                        {this.props.tournamentInfo.entries ? this.props.tournamentInfo.entries.length : null} / {this.props.tournamentInfo.entryLimit}\n                      </DialogContentText>\n                    </Grid>\n                    <Grid className={classes.calcContainer} item xs={12}>\n                      <DialogContentText className={classes.calcTitle}>\n                        Total prize pool:\n                      </DialogContentText>\n                      <DialogContentText className={classes.dialogContent}>\n                        {this.props.tournamentInfo.entries ? this.props.tournamentInfo.entries.length * this.props.tournamentInfo.entryFee : null}\n                      </DialogContentText>\n                    </Grid>\n                  </DialogContent>\n                </Grid>\n                <Grid item xs={12}>\n                  {this.props.entered ? (\n                    <DialogActions>\n                      <Button className={classes.enterButton} variant=\"contained\" autoFocus component={Link} to={`/tournament/${this.props.tournamentInfo.id}`}>\n                        Enter Tournament\n                      </Button>\n                    </DialogActions>\n                  ) : (\n                    <DialogActions>\n                      <Button className={classes.cancelButton} autoFocus variant=\"outlined\" onClick={this.props.handleModal}>\n                        Cancel\n                      </Button>\n                      <Button className={classes.signUpButton} onClick={() => this.handleSignUp()} color=\"primary\" autoFocus>\n                        Sign Up\n                      </Button>\n                    </DialogActions>\n                  )}\n                </Grid>\n              </Grid>\n            </Dialog>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles, {withTheme: true})(TournamentModal);\n","import React from 'react';\nimport Countdown from './Countdown';\nimport { Link } from \"react-router-dom\";\n// MATERIAL UI \nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'name', numeric: false, disablePadding: false, label: 'Tournament Name' },\n  { id: 'entryFee', numeric: true, disablePadding: false, label: 'Entry Fee' },\n  { id: 'entries', numeric: true, disablePadding: false, label: 'Entries'},\n  { id: 'totalPrize', numeric: true, disablePadding: false, label: 'Total Prize' },\n  { id: 'start', numeric: true, disablePadding: false, label: 'Start' },\n  { id: 'end', numeric: true, disablePadding: false, label: 'End' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            style={{fontWeight: \"bold\"}}\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  toolbar: {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.dark\n  },\n  title: {\n    fontWeight: 'bold',\n    flexGrow: 1,\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar className={classes.toolbar}>\n      <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n        LOBBY\n      </Typography>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary\n  },\n  row: {\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  tablePagination: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  }\n}));\n\nconst LobbyTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('start');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.tournamentsArr.map(tournament => {\n      return {\n        tournament: tournament,\n        name: tournament.name,\n        entryFee: tournament.entryFee,\n        entryLimit: tournament.entryLimit,\n        entries: tournament.entries.length,\n        totalPrize: tournament.entryFee * tournament.entries.length,\n        start: tournament.startTime,\n        end: tournament.endTime\n      }\n    })\n  }\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar tableHeader={props.tableHeader} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                   \n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                      onClick={() => props.handleClickTournamentRow(row.tournament)}\n                    >\n                      <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                        {row.name}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.entryFee}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.entries} / {row.entryLimit}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.totalPrize}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown className={classes.row} countDownEnd={new Date(row.start).getTime()} overMsg={\"Started!\"}/>\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown className={classes.row} countDownEnd={new Date(row.end).getTime()} overMsg={\"Ended!\"}/>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default LobbyTable;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { getTournaments } from \"../redux/actions/tournament.actions\";\nimport { createEntry } from \"../redux/actions/entry.actions\";\nimport { loginWithToken } from \"../redux/actions/auth.actions\";\nimport Countdown from \"../components/Countdown\";\nimport { Link } from \"react-router-dom\";\nimport TournamentModal from \"../components/TournamentModal\";\nimport LobbyTable from '../components/LobbyTable';\n// MATERIAL UI \nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = (theme) => ({\n  mainContainer: {\n    [theme.breakpoints.up('lg')]: {\n      padding: 100\n    }\n  }, \n  table: {\n    backgroundColor: theme.palette.text.secondary,\n    minWidth: 650,\n  },\n  createButton: {\n    marginBottom: 20\n  },\n  tableHead: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  tableCellHeader: {\n    color: theme.palette.text.secondary\n  },\n  tableCell: {\n    color: theme.palette.primary.dark\n  },\n  row: {\n    textDecoration: 'none'\n  }\n});\n\nclass Lobby extends React.Component {\n  \n  state = {\n    tableHeader: \"LOBBY\",\n    modalOpen: false,\n    entered: false,\n    tournamentClickedInfo: {}\n  }\n\n  componentDidMount() {\n    this.props.getTournaments();\n  }\n\n  handleEnter = async (tournamentId) => {\n    await this.props.createEntry(tournamentId, localStorage.token)\n    await this.props.getTournaments()\n    await this.props.loginWithToken(localStorage.token)\n    const updatedTournament = this.props.tournamentsArr.find(t => t.id === this.state.tournamentClickedInfo.id);\n    this.handleClickTournamentRow(updatedTournament);\n  }\n\n  handleClickTournamentRow = (tournamentInfo) => {\n    let entered = false;\n    tournamentInfo.entries.forEach(entry => {\n      this.props.currentUser.entries.forEach(userEntry => {\n        if (entry._id === userEntry) {\n          entered = true\n        }\n      });\n    });\n    this.setState({\n      tournamentClickedInfo: tournamentInfo,\n      entered: entered,\n      modalOpen: true\n    })\n  }\n\n  handleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.mainContainer}>\n        <TournamentModal\n          entered={this.state.entered}\n          handleModal={this.handleModal}\n          open={this.state.modalOpen}\n          tournamentInfo={this.state.tournamentClickedInfo}\n          handleEnter={this.handleEnter}\n          currentUser={this.props.currentUser}\n        />\n        <LobbyTable \n          tableHeader={this.props.mainTableHeader}\n          tournamentsArr={this.props.tournamentsArr}\n          handleClickTournamentRow={this.handleClickTournamentRow}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  tournamentsArr: state.tournament.tournamentsArr,\n  entryData: state.entry,\n  currentUser: state.auth.currentUser\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTournaments, createEntry, loginWithToken }\n)(withStyles(useStyles, {withTheme: true})(Lobby))\n","import URL from '../../config'\nexport const FETCH_ENTRY_INFORMATION_BEGIN = \"FETCH_ENTRY_INFORMATION_BEGIN\";\nexport const FETCH_ENTRY_INFORMATION_SUCCESS = \"FETCH_ENTRY_INFORMATION_SUCCESS\";\nexport const FETCH_ENTRY_INFORMATION_FAILURE = \"FETCH_ENTRY_INFORMATION_FAILURE\";\n\nconst fetchEntryInfoBegin = () => ({\n  type: FETCH_ENTRY_INFORMATION_BEGIN \n});\n\nconst fetchEntryInfoSuccess = entryInfo => ({\n  type: FETCH_ENTRY_INFORMATION_SUCCESS,\n  payload: { entryInfo }\n});\n\nconst fetchEntryInfoFailure = err => ({\n  type: FETCH_ENTRY_INFORMATION_FAILURE,\n  payload: { err }\n});\n\nexport const getEntryByUsernameAndTournamentName = (userId, tournamentId) => {\n  return dispatch => {\n    dispatch(fetchEntryInfoBegin());\n    return fetch(`${URL}/api/entries/${userId}/${tournamentId}`)\n    .then(res => res.json())\n    .then(entryInfo => {\n      dispatch(fetchEntryInfoSuccess(entryInfo));\n      return entryInfo;\n    })\n   .catch(err => {\n     dispatch(fetchEntryInfoFailure(err))\n    });\n  };\n};\n\n// export const getEntrants = (credentials, signInOrUp) => {\n  // return dispatch => {\n    // dispatch(fetchUserInfoBegin());\n    // return fetch(`http://localhost:3000/api/auth/${signInOrUp}`, {\n      // method: \"POST\",\n      // headers: {\n        // \"Content-Type\": \"application/json\"\n      // },\n      // body: JSON.stringify({\n        // ...credentials\n      // })\n    // })\n    // .then(res => res.json())\n    // .then(userInfo => {\n      // dispatch(fetchUserInfoSuccess(userInfo))\n      // console.log(userInfo)\n      // localStorage.token = userInfo.accessToken\n      // return userInfo\n    // })\n    // .catch(err => dispatch(fetchUserInfoFailure(err)));\n  // };\n// };\n\nexport const CREATE_ENTRY_BEGIN = \"CREATE_ENTRY_BEGIN\";\nexport const CREATE_ENTRY_SUCCESS = \"CREATE_ENTRY_SUCCESS\";\nexport const CREATE_ENTRY_FAILURE = \"CREATE_ENTRY_FAILURE\";\n\nconst createEntryBegin = () => ({\n  type: CREATE_ENTRY_BEGIN\n});\n\nconst createEntrySuccess = entryInfo => ({\n  type: CREATE_ENTRY_SUCCESS,\n  payload: { entryInfo }\n});\n\nconst createEntryFailure = err => ({\n  type: CREATE_ENTRY_FAILURE,\n  payload: { err }\n});\n\nexport const createEntry = (tournamentId, token) => {\n  return dispatch => {\n    dispatch(createEntryBegin());\n    return fetch(`${URL}/api/entries`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token\n      },\n      body: JSON.stringify({\n        tournamentId: tournamentId\n      })\n    })\n    .then(res => res.json())\n    .then(entryInfo => {\n      dispatch(createEntrySuccess(entryInfo))\n      return entryInfo;\n    })\n    .catch(err => {\n      dispatch(createEntryFailure(err))\n    });\n  };\n};\n\nexport const FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN = \"FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN\";\nexport const FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS = \"FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS\";\nexport const FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE = \"FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE\";\n\nconst fetchEntriesByTournamentIdBegin = () => ({\n  type: FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN \n});\n\nconst fetchEntriesByTournamentIdSuccess = entriesArr => ({\n  type: FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS,\n  payload: { entriesArr }\n});\n\nconst fetchEntriesByTournamentIdFailure = error => ({\n  type: FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE,\n  payload: { error }\n});\n\nexport const getEntriesByTournamentId = (tournamentId) => dispatch => {\n  dispatch(fetchEntriesByTournamentIdBegin())\n  return fetch(`${URL}/api/entries/tournament/${tournamentId}`)\n    .then(res => res.json())\n    .then(entriesArr => {\n      dispatch(fetchEntriesByTournamentIdSuccess(entriesArr))\n    })\n    .catch(error => dispatch(fetchEntriesByTournamentIdFailure(error)));\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { auth } from \"../redux/actions/auth.actions\";\n// MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Stonk Kings\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = (theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.pexels.com/photos/189528/pexels-photo-189528.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  mainContainer: {\n    backgroundColor: theme.palette.primary.main\n  },\n  paper: {\n     margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    backgroundColor: theme.palette.primary.dark,\n    margin: theme.spacing(3, 0, 2),\n  },\n  input: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: `${theme.palette.text.primary} !important`,\n    }\n  },\n  cssOutlinedInput: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: `${theme.palette.text.primary} !important`,\n    }\n  },\n  cssLabel: {\n    color: 'white'\n  },\n  cssFocused: {\n    color: 'white'\n  },\n  notchedOutline: {\n    borderWidth: '1px',\n    borderColor: `${theme.palette.primary.dark} !important`\n  },\n\n});\n\nclass Login extends React.Component {\n  state = {\n    signIn: true\n  }\n\n  componentDidUpdate() {\n    if (this.props.loggedIn) {\n      console.log(\"pushing\")\n      this.props.history.push('/lobby')\n    }\n  }\n\n  setSignIn = (bool) => {\n    this.setState({signIn: bool})\n  }\n\n  handleField = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value \n    })\n  }\n  \n  handleLogin = async () => {\n    await this.props.auth({username: this.state.username, password: this.state.password}, \"signIn\")\n    this.props.logIn();\n    this.props.history.push('/lobby')\n  }\n\n  handleSignUp = async () => {\n    await this.props.auth({username: this.state.username, password: this.state.password, email: this.state.email}, \"signUp\")\n    this.props.logIn()\n    this.props.history.push('/lobby')\n  }\n   \n  render() {\n    const { classes } = this.props;\n    console.log(this.props.loggedIn)\n\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square className={classes.mainContainer}>\n          <div className={classes.paper}>\n            <Typography style={{marginBottom: 100, fontWeight: 'bold'}} component=\"h3\" variant=\"h1\">\n              Stonk Kings!\n            </Typography>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <form className={classes.form} noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                onChange={this.handleField}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {!this.state.signIn ? (\n                <TextField\n                  onChange={this.handleField}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  \n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                />\n              ) : null}\n              <TextField\n                onChange={this.handleField}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            \n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"secondary\" />}\n                label=\"Remember me\"\n              />\n              {this.state.signIn ? (\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={() => this.handleLogin()}\n                >\n                  Sign In\n                </Button>\n\n              ) : (\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={() => this.handleSignUp()}\n                >\n                  Sign up \n                </Button>\n              )}\n              <Grid container>\n                <Grid item>\n                  {this.state.signIn ? (\n                    <Link onClick={() => this.setSignIn(false)} style={{color: 'white'}} variant=\"body2\">\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  ) : (\n                    <Link onClick={() => this.setSignIn(true)} style={{color: 'white'}} variant=\"body2\">\n                      {\"Already have an account? Sign in\"}\n                    </Link>\n                  )}\n                </Grid>\n              </Grid>\n              <Box mt={5}>\n                <Copyright />\n              </Box>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n\n  }\n}\n\n\n\nexport default connect(\n  null,\n  {auth}\n)(withStyles(useStyles, {withTheme: true})(Login))\n    ","import URL from '../../config';\nexport const CREATE_TRADE_BEGIN = \"CREATE_TRADE_BEGIN\";\nexport const CREATE_TRADE_SUCCESS = \"CREATE_TRADE_SUCCESS\";\nexport const CREATE_TRADE_FAILURE = \"CREATE_TRADE_FAILURE\";\n\nconst createTradeBegin = () => ({\n  type: CREATE_TRADE_BEGIN \n});\n\nconst createTradeSuccess = tradeInfo => ({\n  type: CREATE_TRADE_SUCCESS,\n  payload: { tradeInfo }\n});\n\nconst createTradeFailure = err => ({\n  type: CREATE_TRADE_FAILURE,\n  payload: { err }\n});\n\nexport const createTrade = (tradeObj, token) => {\n  return dispatch => {\n    dispatch(createTradeBegin());\n    return fetch(`${URL}/api/trades`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token\n      },\n      body: JSON.stringify({\n        entryId: tradeObj.entryId,\n        stockTicker: tradeObj.stockTicker,\n        time: tradeObj.time,\n        buyOrSell: tradeObj.buyOrSell,\n        price: tradeObj.price,\n        amountOfShares: tradeObj.amountOfShares\n      })\n    })\n    .then(res => res.json())\n    .then(tradeInfo => {\n      dispatch(createTradeSuccess(tradeInfo))\n      return tradeInfo;\n    })\n    .catch(err => dispatch(createTradeFailure(err)));\n  };\n};\n\nexport const FETCH_TRADES_BY_ENTRY_BEGIN = \"FETCH_TRADES_BY_ENTRY_BEGIN\";\nexport const FETCH_TRADES_BY_ENTRY_SUCCESS = \"FETCH_TRADES_BY_ENTRY_SUCCESS\";\nexport const FETCH_TRADES_BY_ENTRY_FAILURE = \"FETCH_TRADES_BY_ENTRY_FAILURE\";\n\nconst fetchTradesByEntryBegin = () => ({\n  type: FETCH_TRADES_BY_ENTRY_BEGIN \n});\n\nconst fetchTradesByEntrySuccess = tradesByEntry => ({\n  type: FETCH_TRADES_BY_ENTRY_SUCCESS,\n  payload: { tradesByEntry }\n});\n\nconst fetchTradesByEntryFailure = err => ({\n  type: FETCH_TRADES_BY_ENTRY_FAILURE,\n  payload: { err }\n});\n\nexport const getTradesByEntryId = (entryId) => dispatch => {\n  dispatch(fetchTradesByEntryBegin())\n  return fetch(`${URL}/api/trades/${entryId}`)\n    .then(res => res.json())\n    .then(tradesByEntry => {\n      dispatch(fetchTradesByEntrySuccess(tradesByEntry))\n    })\n    .catch(err => dispatch(fetchTradesByEntryFailure(err)));\n};\n  \n\n","import React from \"react\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  },\n  paper: {\n    backgroundColor: theme.palette.primary.main\n  },\n  popper: {\n    backgroundColor: theme.palette.primary.main\n  },\n  input: {\n    backgroundColor: theme.palette.primary.main\n  },\n  inputFocused: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  groupLabel: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary\n  },\n  option: {\n    backgroundColor: theme.palette.primary.main\n  },\n\n  inputRoot: {\n    backgroundColor: theme.palette.primary.main,\n    \"&.MuiFormLabel-root.Mui-focused\": {\n      color: theme.palette.text.secondary\n    }\n  }\n}));\n\nconst SearchBar = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleInputChange = (e, value) => {\n    fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${value}&apikey=3VP9375JIOYD1569`)\n      .then(res => res.json())\n      .then(results => {\n        setOptions(results.bestMatches || []);\n      })\n  }\n\n  const handleSelected = (e, val) => {\n    if (val !== null) {\n      props.handleSearchSubmit(val[\"1. symbol\"]);\n    }\n  }\n\n  return (\n    <Autocomplete\n      classes={classes}\n      id=\"asynchronous-demo\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option[\"2. name\"]}\n      options={options}\n      loading={loading}\n      onInputChange={handleInputChange}\n      onChange={handleSelected}\n      ListboxProps={{\n        className: classes.listBox\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Search stocks...\"\n          variant=\"outlined\"\n          name=\"search\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nexport default SearchBar;\n\n\n\n","import React from \"react\";\nimport { ResponsiveLine } from '@nivo/line';\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  stockInfo: {\n    display: 'inline-block'\n  }\n}));\n\n// re renders with intraday format and daily data... \nconst Chart = (props) => {\n  const theme = {\n  axis: {\n    textColor: '#eee',\n    fontSize: '20px',\n    tickColor: '#eee',\n  },\n  grid: {\n    stroke: 'black',\n    strokeWidth: 1\n  },\n};\n  const classes = useStyles(); \n  return (\n    <div style={{height: 400}}>\n      <ResponsiveLine\n        theme={{\n          grid: {\n            line: {\n              stroke: \"grey\"\n            }\n          },\n          axis: {\n            ticks: {\n              text: {\n                fill: \"white\"\n              }\n            },\n            legend: {\n              text: {\n                fill: \"white\"\n              }\n            }\n          },\n          crosshair: {\n            line: {\n              stroke: \"white\"\n            }\n          }\n          \n        }}\n        data={props.data}\n        margin={{ top: 50, right: 50, bottom: 50, left: 60}}\n        xScale={{\n          type: \"time\",\n          format: props.xScaleFormat,\n          precision: \"minute\"\n        }}\n        xFormat={props.xFormat}\n        yScale={{\n          type: \"linear\",\n          min: \"auto\",\n          max: \"auto\",\n          stacked: false,\n          reverse: false\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisLeft={{\n          orient: \"left\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: \"price\",\n          legendOffset: -40,\n          legendPosition: \"middle\"\n        }}\n        axisBottom={{\n          format: \"%b %d\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          orient: \"bottom\",\n          legendPosition: \"middle\",\n          legend: \"date\",\n          legendOffset: 36\n        }}\n        colors={[\"#64dd17\"]}\n        pointSize={10}\n        pointColor={{ theme: \"background\" }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: \"serieColor\" }}\n        pointLabel=\"y\"\n        pointLabelYOffset={-12}\n        useMesh={true}\n      />\n    </div> \n  )\n}\n\nexport default Chart;","import React from 'react';\nimport Countdown from '../components/Countdown';\nimport { Link } from 'react-router-dom';\n// MATERIAL UI  \nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: 0\n  },\n  dialogContainer: {\n    backgroundColor: theme.palette.primary.light,\n  },\n  dialogHeader: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  dialogTitle: {\n    fontWeight: 'bold',\n    fontSize: 30,\n  },\n  dialogContent: {\n    color: theme.palette.primary.dark,\n    fontSize: 20,\n    fontWeight: 'bold',\n    border: 1,\n    borderColor: theme.palette.primary.dark\n  }, \n  textFieldContainer: {\n    paddingLeft: 20\n  },\n  sharesField: {\n    width: \"60%\",\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 5\n  },\n  sharesFieldInput: {\n    padding: 10,\n    paddingLeft: 20,\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  button: {\n    borderColor: theme.palette.text.primary,\n  }\n}));\n\nconst TradeModal = (props) => {\n  const classes = useStyles();\n\n  // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const calculateResultingBalance = (buyOrSell, currentBalance, amountOfShares, price) => {\n      if (buyOrSell === \"buy\") {\n        return (Math.round(currentBalance - (price * amountOfShares) ) * 100 / 100).toFixed(2);\n      } else {\n        return (Math.round(currentBalance + (price * amountOfShares) ) * 100 / 100).toFixed(2);\n      }\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleModal}\n        classes={{\n          paper: classes.paper\n        }}\n      >\n        <Grid className={classes.dialogContainer} container>\n          <Grid item container xs={12} className={classes.dialogHeader}>\n            <Grid item xs={6}>\n              {props.buyOrSell === \"buy\" ? (\n                <DialogTitle className={classes.dialogTitle} id=\"simple-dialog-title\">Buy Transaction</DialogTitle>\n              ) : (\n                <DialogTitle style={{color: \"red\"}} className={classes.dialogTitle} id=\"simple-dialog-title\">Sell Transaction</DialogTitle>\n              )}\n            </Grid>\n            <Grid container item alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\" xs={6}>\n              <DialogTitle className={classes.dialogTitle} id=\"simple-dialog-title\">{props.stockTicker}</DialogTitle>\n            </Grid>\n          </Grid>\n          <Grid item xs={6}>\n            <DialogContent >\n              <DialogContentText className={classes.dialogContent}>\n                Price:\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                Amount of shares:\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                Total value:\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                Resulting Balance:\n              </DialogContentText>\n            </DialogContent>\n          </Grid>\n          <Grid item xs={6}>\n            <DialogContent>\n              <DialogContentText className={classes.dialogContent}>\n                {props.price}\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                {props.amountOfShares}\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                {(Math.round(props.amountOfShares * props.price * 100) / 100).toFixed(2)}\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                {calculateResultingBalance(props.buyOrSell, props.currentEntry.tournamentBalance, props.amountOfShares, props.price)}\n              </DialogContentText>\n            </DialogContent>\n          </Grid>\n          <Grid item xs={12} className={classes.textFieldContainer}>\n            <TextField \n              defaultValue={1}\n              className={classes.sharesField}\n              onChange={props.handleShareField}\n              inputProps={{\n                className: classes.sharesFieldInput\n              }}\n              name=\"shareAmountField\"\n              type=\"number\" \n              id=\"standard-basic\" \n              label=\"Amount of shares\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <DialogActions>\n              <Button onClick={props.handleModal} className={classes.button} variant=\"outlined\" autoFocus color=\"inherit\" >\n                Cancel\n              </Button>\n              <Button onClick={props.handleTrade} className={classes.button} variant=\"outlined\" color=\"inherit\" autoFocus>\n                Confirm\n              </Button>\n            </DialogActions>\n          </Grid>\n        </Grid>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default TradeModal;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { withStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = (theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n});\n\n// put open state in parent component,\n//  when trade is created handle open in handle trade function,\n// pass results of created trade to be displayed in snasckbar\n\nclass SnackBarDisplay extends React.Component {\n\n  state = {\n    open: false\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Snackbar\n          open={this.props.open} \n          autoHideDuration={6000} \n          onClose={this.props.handleClose}\n          anchorOrigin={{\n            horizontal: 'right',\n            vertical: 'bottom'\n          }}\n        >\n          {this.props.error === true ? (\n            <Alert \n              onClose={this.props.handleClose}\n              severity=\"error\"\n            >\n              {this.props.message}\n            </Alert>\n          ) : (\n            <Alert \n              onClose={this.props.handleClose}\n              severity=\"success\"\n            >\n              {this.props.message}\n            </Alert>\n          )}\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles, {withTheme: true})(SnackBarDisplay);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TradeModal from \"../components/TradeModal\";\nimport SnackBarDisplay from \"../components/SnackBarDisplay\";\nimport { connect } from \"react-redux\";\nimport { createTrade, getTradesByEntryId } from \"../redux/actions/trade.actions\";\n// MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = (theme) => ({\n  buyButton: {\n    width: \"30%\",\n    padding: 8,\n    marginRight: 10,\n    backgroundColor: theme.palette.text.primary,\n    borderColor: theme.palette.text.primary,\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  sellButton: {\n    width: \"30%\",\n    padding: 8,\n    marginRight: 10,\n    backgroundColor: \"red\",\n    borderColor: \"red\",\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      color: 'red',\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  sharesField: {\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 5\n  },\n  sharesFieldInput: {\n    fontSize: 30\n  }\n});\n\nclass TradeBar extends React.Component {\n\n  state = {\n    shareAmountField: 1,\n    openModal: false,\n    openSnackBar: false\n  }\n  \n  handleShareField = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleModal = (buyOrSell=\"buy\") => {\n    this.setState({\n      openModal: !this.state.openModal,\n      buyOrSell: buyOrSell,\n      shareAmountField: 1\n    });\n  }\n\n  handleCloseSnackBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({\n      openSnackBar: false\n    });\n  };\n\n  handleClickSnackBar = () => {\n    this.setState({\n      openSnackBar: true\n    });\n  };\n\n  handleTrade = async () => {\n    await this.props.createTrade({\n      entryId: this.props.entryId,\n      stockTicker: this.props.stockTicker,\n      time: new Date(),\n      buyOrSell: this.state.buyOrSell,\n      price: this.props.currentPrice,\n      amountOfShares: parseInt(this.state.shareAmountField)\n    }, localStorage.token)\n    await this.props.getTradesByEntryId(this.props.entryId)\n    await this.props.getCurrentEntry();\n    this.handleModal(this.state.buyOrSell);\n    this.handleClickSnackBar();\n  }\n\n  render() {\n    const { classes } = this.props\n    let snackbarmessage = \"\";\n    let snackbarErr = false;\n    if (this.props.createdTrade !== []) {\n      if (this.props.createdTrade.message) {\n        snackbarmessage = this.props.createdTrade.message\n        snackbarErr = true;\n      } else {\n        let buyOrSell = this.props.createdTrade.buyOrSell === 'buy' ? \"purchased\" : \"sold\";\n        snackbarmessage = `You ${buyOrSell} ${this.props.createdTrade.amountOfShares} share(s) of ${this.props.createdTrade.stockTicker} @ $${this.props.createdTrade.price}!`\n      }\n    }\n    console.log(\"tradebar state\", this.state)\n    return (\n      <div>\n        <Button onClick={() => this.handleModal(\"buy\")} size=\"large\" name=\"buy\" variant=\"outlined\" className={classes.buyButton}>BUY</Button>\n        <Button onClick={() => this.handleModal(\"sell\")} size=\"large\" name=\"sell\" variant=\"outlined\" className={classes.sellButton}>SELL</Button>\n        <TradeModal\n          handleShareField={this.handleShareField}\n          handleTrade={this.handleTrade}\n          handleModal={this.handleModal}\n          price={this.props.currentPrice}\n          stockTicker={this.props.stockTicker}\n          amountOfShares={parseInt(this.state.shareAmountField)}\n          buyOrSell={this.state.buyOrSell}\n          open={this.state.openModal}\n          currentEntry={this.props.currentEntry}\n        />\n        <SnackBarDisplay \n          handleClose={this.handleCloseSnackBar}\n          open={this.state.openSnackBar}\n          message={snackbarmessage}\n          error={snackbarErr}\n        />\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { createTrade, getTradesByEntryId }\n)(withStyles(useStyles, {withTheme: true})(TradeBar));","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass LatestPrice extends React.Component {\n\n  componentDidMount() {\n    const intervalId = setInterval(this.fetchPrice, 1000)\n    this.setState({ intervalId: intervalId });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  fetchPrice = () => {\n    fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${this.props.searchString}&apikey=3VP9375JIOYD1569`)\n      .then(res => res.json())\n      .then(priceData => {\n        this.props.setPrice(priceData[\"Global Quote\"][\"05. price\"])\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h5\">\n          Current Price\n        </Typography>\n        <Typography variant=\"h6\">\n          ${this.props.currentPrice}\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default LatestPrice;\n            ","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTradesByEntryId } from \"../redux/actions/trade.actions\";\n// MATERIAL UI  \nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'ticker', numeric: false, disablePadding: false, label: 'Ticker Symbol' },\n  { id: 'averagePrice', numeric: false, disablePadding: false, label: 'Average Price' },\n  { id: 'netShares', numeric: false, disablePadding: false, label: 'Net Shares' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    width: \"100%\"\n  },\n  row: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark\n  }\n}));\n\nconst MyPositions = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('entryFee');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  \n\n  let hasPositions = false; \n  const consolidatePositionsArr = () => {\n    const allTickers = props.tradeData.tradesByEntry.map(t => t.stockTicker);\n    const uniqueTickers = allTickers.filter((val, index, self) => self.indexOf(val) === index);\n    const positions = uniqueTickers.map(ticker => {\n      const position = {\n        ticker: ticker,\n        netShares: 0,\n        averagePrice: 0\n      }\n      let sharePriceXNumOfSharesSum = 0; \n      let totalShares = 0;\n      props.tradeData.tradesByEntry.forEach(trade => {\n        if (trade.stockTicker === ticker) {\n\n          if (trade.buyOrSell === \"buy\") {\n            sharePriceXNumOfSharesSum += (trade.amountOfShares * trade.price);\n            totalShares += trade.amountOfShares\n\n            position.netShares = position.netShares + trade.amountOfShares\n          } else {\n            position.netShares = position.netShares - trade.amountOfShares\n          }\n        }\n      });\n      position.averagePrice = sharePriceXNumOfSharesSum / totalShares\n      if (position.netShares > 0) {\n        hasPositions = true\n      }\n      return position;\n    })\n\n    return positions\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return consolidatePositionsArr().filter(position => {\n      if (position.netShares > 0) {\n        return {\n          ticker: position.ticker,\n          netShares: position.netShares,\n          averagePrice: (Math.round(position.averagePrice * 100) / 100).toFixed(2)\n        }\n      }\n    })\n  }\n\n  const rows = formatRows();\n  return (\n    <div>\n      {hasPositions ? (\n        <div className={classes.root}>\n          <Paper className={classes.paper}>\n            <TableContainer>\n              <Table\n                className={classes.table}\n                aria-labelledby=\"tableTitle\"\n                aria-label=\"enhanced table\"\n              >\n                <EnhancedTableHead\n                  classes={classes}\n                  order={order}\n                  orderBy={orderBy}\n                  onRequestSort={handleRequestSort}\n                  rowCount={rows.length}\n                />\n                <TableBody>\n                  {stableSort(rows, getComparator(order, orderBy))\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                      return (\n                        <TableRow\n                          hover\n                          role=\"checkbox\"\n                          tabIndex={-1}\n                          key={index}\n                        >\n                          <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                            {row.ticker}\n                          </TableCell>\n                          <TableCell className={classes.row} align=\"left\">{row.averagePrice.toFixed(2)}</TableCell>\n                          <TableCell className={classes.row} align=\"left\">{row.netShares}</TableCell>\n                        </TableRow>\n                      );\n                    })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              className={classes.tablePagination}\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>\n\n        </div>\n\n      ) : null}\n\n    </div>\n  );\n}\n\nexport default MyPositions;","import React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst withMediaQuery = (...args) => Component => props => {\n  const mediaQuery = useMediaQuery(...args);\n  return <Component mediaQuery={mediaQuery} {...props} />\n}\n\nexport default withMediaQuery;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport withMediaQuery from '../higherOrderComponents/withMediaQuery';\n// Material UI \nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nconst useStyles = (theme) => ({\n  root: {\n  },\n  paper: {\n    backgroundColor: theme.palette.primary.main \n  }, \n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    textDecoration: 'none',\n    marginRight: 30\n  },\n  mobileTitles: {\n\n  },\n  button: {\n    backgroundColor: theme.palette.primary.dark,\n    color: 'bolder'\n  }\n});\n\nconst TournamentInformation = (props) => {\n  return (\n    <>\n      <Typography onClick={() => props.setView(\"buy/sell\")} variant=\"h6\" color=\"inherit\" className={props.classes.title}>\n        Buy/Sell\n      </Typography>\n      <Typography onClick={() => props.setView(\"tradeHistory\")} variant=\"h6\" color=\"inherit\" className={props.classes.title}>\n        Trade History\n      </Typography>\n      <Typography onClick={() => props.setView(\"allEntrants\")} variant=\"h6\" color=\"inherit\" style={{flexGrow: 1}} className={props.classes.title}>\n        All Entrants\n      </Typography>\n      {props.currentEntry && !props.currentEntry.message ? (\n        <Typography style={{margin: 0}} variant=\"h6\" color=\"inherit\" className={props.classes.title}>\n          Tournament Balance: {props.currentEntry.tournamentBalance.toFixed(2)}\n        </Typography>\n      ) : (\n        null\n      )}\n    </>\n  )\n} \n\nclass TournamentBar extends React.Component {\n\n  state = {\n    drawerOpen: false \n  }\n\n  setViewAndCloseDrawer = (view) => {\n    this.props.setView(view);\n    this.setState({\n      drawerOpen: false\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    console.log(this.props.mediaQuery)\n    return (\n      <>\n        <AppBar position=\"static\" color=\"secondary\">\n          <Toolbar>\n            {this.props.mediaQuery ? (\n              <>\n                <TournamentInformation\n                  setView={this.props.setView}\n                  currentEntry={this.props.currentEntry}\n                  classes={classes}\n                />\n              </>\n            ) : (\n              <>\n                <Button className={classes.button} onClick={() => this.setState({ drawerOpen: true })} fullWidth>\n                  Tournament Information\n                </Button>\n                <SwipeableDrawer \n                  classes={{ paper: classes.paper }} \n                  open={this.state.drawerOpen} \n                  onClose={() => this.setState({ drawerOpen: false })} \n                  anchor=\"top\"\n                >\n                  <div style={{ padding: 20, textAlign: \"center\" }}>\n                    {this.props.currentEntry && !this.props.currentEntry.message ? (\n                      <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n                        Tournament Balance: {this.props.currentEntry.tournamentBalance.toFixed(2)}\n                      </Typography>\n                    ) : (\n                      null\n                    )}\n                    <Typography className={classes.title} onClick={() => this.setViewAndCloseDrawer(\"buy/sell\")} variant=\"h6\" color=\"inherit\">\n                      Buy/Sell\n                    </Typography>\n                    <Typography className={classes.title} onClick={() => this.setViewAndCloseDrawer(\"tradeHistory\")} variant=\"h6\" color=\"inherit\">\n                      Trade History\n                    </Typography>\n                    <Typography className={classes.title} onClick={() => this.setViewAndCloseDrawer(\"allEntrants\")} variant=\"h6\" color=\"inherit\" style={{flexGrow: 1}}>\n                      All Entrants\n                    </Typography>\n\n\n                  </div>\n                </SwipeableDrawer>\n\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentEntry: state.entry.currentEntry,\n  currentUser: state.auth.currentUser\n})\n\nexport default connect(\n  mapStateToProps\n)(withStyles(useStyles, {withTheme: true})(withMediaQuery('(min-width:770px)')(TournamentBar)));","import React from \"react\";\n// MATERIAL UI  \nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'ticker', numeric: false, disablePadding: false, label: 'Ticker Symbol' },\n  { id: 'timeTraded', numeric: false, disablePadding: false, label: 'Time of Trade' },\n  { id: 'buyOrSell', numeric: false, disablePadding: false, label: 'Transaction Type' },\n  { id: 'numOfShares', numeric: true, disablePadding: false, label: '# of Shares' },\n  { id: 'price', numeric: true, disablePadding: false, label: 'Price' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    width: \"100%\"\n  },\n  row: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark\n  }\n}));\n\nconst TradeHistoryTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('timeTraded');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatDate = (date) => {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    let strTime = hours + ':' + minutes + ' ' + ampm;\n    return (date.getMonth()+1) + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \"  \" + strTime;\n  }\n\n  const formatRows = () => {\n    return props.data.map(trade => {\n      const formattedDate = formatDate(new Date(trade.time));\n      return {\n        ticker: trade.stockTicker,\n        timeTraded: formattedDate,\n        buyOrSell: trade.buyOrSell,\n        amountOfShares: parseFloat(trade.amountOfShares),\n        price: trade.price \n      }\n    })\n  }\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                    >\n                      <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                        {row.ticker}\n                      </TableCell>\n                      <TableCell className={classes.row}>\n                        {row.timeTraded}\n                      </TableCell>\n                      {row.buyOrSell === \"buy\" ? (\n                        <TableCell style={{color: \"green\"}} className={classes.row}>\n                          Bought\n                        </TableCell>\n                      ) : (\n                        <TableCell style={{color: 'red'}} className={classes.row}>\n                          Sold\n                        </TableCell>\n                      )}\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.amountOfShares}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.price}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n    </div>\n  );\n}\n\nexport default TradeHistoryTable;","import React from \"react\";\n// MATERIAL UI  \nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport Typography from '@material-ui/core/Typography';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Avatar from '@material-ui/core/Avatar';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'username', numeric: false, disablePadding: false, label: 'Username' },\n  { id: '#OfTrades', numeric: true, disablePadding: false, label: 'Total Trades' },\n  { id: 'tournamentBalance', numeric: true, disablePadding: false, label: 'Tournament Balance' }\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    width: \"100%\"\n  },\n  row: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark\n  }\n}));\n\nconst AllEntrantsTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('tournamentBalance');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.data.map(entry=> {\n      return {\n        username: entry.user.username,\n        tournamentBalance: (Math.round(entry.tournamentBalance * 100) / 100).toFixed(2),\n        numOfTrades: entry.trades.length,\n        avatar: entry.user.avatar\n      }\n    })\n  }\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                    >\n                      <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                        <Grid container alignItems=\"flex-start\" direction=\"row\">\n                          <Avatar src={row.avatar} />\n                          <Typography variant=\"h5\" style={{marginTop: 10, paddingLeft: 10}}>\n                            {row.username}\n                          </Typography>\n                        </Grid>\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.numOfTrades}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.tournamentBalance}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n    </div>\n  );\n}\n\nexport default AllEntrantsTable;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getEntryByUsernameAndTournamentName } from \"../redux/actions/entry.actions\";\nimport { getTradesByEntryId } from \"../redux/actions/trade.actions\";\nimport { getEntriesByTournamentId } from \"../redux/actions/entry.actions\"\n\n// COMPONENTS\nimport SearchBar from \"../components/SearchBar\";\nimport Chart from \"../components/Chart\";\nimport TradeBar from \"../components/TradeBar\";\nimport LatestPrice from \"../components/LatestPrice\";\nimport MyPositions from \"../components/MyPositions\";\nimport TournamentBar from \"../components/TournamentBar\";\nimport TradeHistoryTable from \"../components/TradeHistoryTable\";\nimport AllEntrantsTable from \"../components/AllEntrantsTable\";\n\n// MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = (theme) => ({\n  searchBar: {\n    backgroundColor: theme.palette.primary.main,\n    width: '100%',\n    marginTop: 30,\n    marginBottom: 30\n  },\n  chartContainer: {\n    backgroundColor: theme.palette.primary.dark,\n    borderRadius: 5\n  }\n});\n\nclass Tournament extends React.Component {\n\n  state = {\n    modalOpen: false,\n    error: null,\n    stockData: [{\n      id: \"IBM\",\n      data: [{\n        x: \"2020-06-01\",\n        y: 1\n      }]\n    }],\n    stockInfo: {\n      symbol: \"IBM\"\n    },\n    currentSearch: \"IBM\",\n    timeFunction: \"TIME_SERIES_DAILY\",\n    intradayInterval: \"1min\",\n    currentPrice: \"loading\",\n    currentView: \"buy/sell\",\n    xScaleFormat: \"%Y-%m-%d\",\n    xFormat: \"time:%Y-%m-%d\"\n  }\n\n  componentDidMount() {\n    this.getPriceData(\"IBM\", \"TIME_SERIES_DAILY\");\n    this.props.getEntriesByTournamentId(this.props.match.params.id);\n    console.log(this.props.tournaments.filter(tournament => tournament.id === this.props.match.params.id));\n    if (localStorage.userId) {\n      this.handleGetCurrentEntry();\n    }\n  }\n\n  componentDidUpdate() { \n\n  }\n\n  getPriceData = (searchString, timeFunction=\"IBM\", intradayInterval=\"\") => {\n    const queryString = this.formatPriceQuery(searchString, timeFunction, intradayInterval)\n    fetch(queryString)\n      .then(res => res.json())\n      .then(data => {\n        if (data[\"Error Message\"]) {\n          this.setState({\n            error: data[\"Error Message\"]\n          })\n          return;\n        }\n        const dataKeys = Object.keys(data)\n        const timeSeriesHash = data[dataKeys[1]] \n        const formattedData = Object.keys(timeSeriesHash).map(key => {\n          return {\n            x: key, \n            y: parseFloat(timeSeriesHash[key][\"4. close\"])\n          };\n        });\n        fetch(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${searchString}&apikey=3VP9375JIOYD1569`)\n          .then(res => res.json())\n          .then(stockInfo => {\n            fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${searchString}&apikey=3VP9375JIOYD1569`)\n              .then(res => res.json())\n              .then(priceData => {\n                let xScaleFormat = \"%Y-%m-%d\"\n                let xFormat = \"time:%Y-%m-%d\"\n                if (intradayInterval !== \"\") {\n                  xScaleFormat = \"%Y-%m-%d %H:%M:%S\";\n                  xFormat = \"time:%Y-%m-%d %H:%M:%S\";\n                }\n                this.setState({\n                  error: null,\n                  stockData: [{\n                    id: searchString,\n                    data: formattedData\n                  }],\n                  stockInfo: {\n                    symbol: stockInfo[\"Symbol\"],\n                    name: stockInfo[\"Name\"],\n                    exchange: stockInfo[\"Exchange\"],\n                    sector: stockInfo[\"Sector\"]\n                  },\n                  currentPrice: priceData[\"Global Quote\"][\"05. price\"],\n                  xFormat: xFormat,\n                  xScaleFormat: xScaleFormat\n                });\n              });\n          });\n      });\n  }\n  \n  handleGetCurrentEntry = async () => {\n    await this.props.getEntryByUsernameAndTournamentName(localStorage.userId, this.props.match.params.id);\n    await this.props.getTradesByEntryId(this.props.currentEntry._id)\n  }\n\n  setPrice = (price) => {\n    this.setState({\n      currentPrice: parseFloat(price)\n    });\n  }\n\n  handleSearchSubmit = (searchString) => {\n    if (searchString !== undefined) {\n      this.setState({\n        currentSearch: searchString\n      })\n      this.getPriceData(searchString, this.state.timeFunction);\n    }\n  }\n\n  handleChangeTimeFunction = (timeFunction, intradayInterval=\"\") => {\n    if (intradayInterval === \"\") {\n      this.getPriceData(this.state.currentSearch, timeFunction);\n    } else {\n      this.getPriceData(this.state.currentSearch, timeFunction, intradayInterval)\n    }\n  }\n\n  formatPriceQuery = (searchString, timeFunction, intradayInterval=\"\") => {\n    if (timeFunction !== \"TIME_SERIES_INTRADAY\") {\n      return `https://www.alphavantage.co/query?function=${timeFunction}&symbol=${searchString}&outputsize=compact&apikey=3VP9375JIOYD1569`\n    } else {\n      return `https://www.alphavantage.co/query?function=${timeFunction}&symbol=${searchString}&interval=${intradayInterval}&apikey=3VP9375JIOYD1569`\n    }\n  }\n  \n  changeView = (view) => {\n    this.setState({\n      currentView: view\n    });\n  }\n  \n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <TournamentBar setView={this.changeView} />\n        {this.state.currentView === \"buy/sell\" ? (\n          <div style={{width: \"95%\", margin: \"auto\"}}>\n            <Grid container>\n              <Grid item className={classes.searchBar}>\n                <SearchBar \n                  handleSearchSubmit={this.handleSearchSubmit} \n                  error={this.state.error} \n                />\n              </Grid>\n              <Grid container >\n                {this.state.stockInfo ? (\n                  <Grid container item justify=\"space-between\" item xs={12} md={6}>\n                    <div>\n                      <div style={{display: 'flex'}}>\n                        <Typography variant=\"h5\" className={classes.stockInfo}>\n                          {this.state.stockInfo.name}\n                        </Typography>\n                        <Typography style={{marginLeft: 10}} variant=\"h6\" className={classes.stockInfo}>\n                          {this.state.stockInfo.symbol}\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography>\n                          {this.state.stockInfo.sector}\n                        </Typography>\n                      </div>\n                    </div>\n                  </Grid>\n                ) : null}\n                <Grid container item xs={12} md={6} style={{marginTop: 30}} alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\n                  <Button onClick={() => this.handleChangeTimeFunction(\"TIME_SERIES_MONTHLY\")}>\n                    Monthly \n                  </Button>\n                  <Button onClick={() => this.handleChangeTimeFunction(\"TIME_SERIES_WEEKLY\")}>\n                    Weekly\n                  </Button>\n                  <Button onClick={() => this.handleChangeTimeFunction(\"TIME_SERIES_DAILY\")}>\n                    Daily\n                  </Button>\n                  <Button onClick={() => this.handleChangeTimeFunction(\"TIME_SERIES_INTRADAY\", \"60min\")}>\n                    Hourly\n                  </Button>\n                  <Button onClick={() => this.handleChangeTimeFunction(\"TIME_SERIES_INTRADAY\", \"15min\")}>\n                    15 min\n                  </Button>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} className={classes.chartContainer}>\n                <Chart\n                  stockInfo={this.state.stockInfo}\n                  data={this.state.stockData}\n                  xFormat={this.state.xFormat}\n                  xScaleFormat={this.state.xScaleFormat}\n                />\n              </Grid>\n              {this.props.currentEntry && !this.props.currentEntry.message ? (\n                <Grid container item xs={12}>\n                  <Grid item xs={6} style={{marginTop: 10}}>\n                    <TradeBar \n                      getCurrentEntry={this.handleGetCurrentEntry}\n                      createdTrade={this.props.createdTrade}\n                      currentEntry={this.props.currentEntry}\n                      currentPrice={this.state.currentPrice}\n                      stockTicker={this.state.stockInfo.symbol}\n                      entryId={this.props.currentEntry._id || null} \n                    />\n                  </Grid>\n                  <Grid container item alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\" xs={6}>\n                    <LatestPrice \n                      searchString={this.state.stockInfo.symbol}\n                      setPrice={this.setPrice}\n                      currentPrice={this.state.currentPrice}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <MyPositions tradeData={this.props.tradeData} />\n                  </Grid>\n                </Grid>\n              ): (null)}\n            </Grid>\n          </div>\n        ) : null}\n        {this.state.currentView === \"tradeHistory\" ? (\n          <div>\n            <TradeHistoryTable data={this.props.tradeData.tradesByEntry}/>\n          </div>\n        ) : null}\n        {this.state.currentView === \"allEntrants\" ? (\n          <div>\n            <AllEntrantsTable data={this.props.entries} /> \n          </div>\n        ) : null}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentEntry: state.entry.currentEntry,\n  entries: state.entry.tournamentEntries,\n  currentUser: state.auth.currentUser,\n  createdTrade: state.trade.createdTrade,\n  tradeData: state.trade,\n  tournaments: state.tournament.tournamentsArr,\n});\n\nexport default connect(\n  mapStateToProps,\n  { getEntryByUsernameAndTournamentName, getTradesByEntryId, getEntriesByTournamentId }\n)(withStyles(useStyles, {withTheme: true})(Tournament));\n  \n","import React from 'react';\nimport Countdown from '../components/Countdown';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\n// MATERIAL UI  \nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  dialogContainer: {\n    backgroundColor: theme.palette.primary.light\n  }\n}));\n\nconst LogoutModal = (props) => {\n\n  let history = useHistory();\n\n  const handleLogout = () => {\n    localStorage.clear();\n    history.push('/');\n    props.handleModal();\n  }\n  \n  const classes = useStyles();\n  return (\n    <>\n      <Dialog\n        open={props.open}\n        onClose={props.handleModal}\n      >\n        <Grid className={classes.dialogContainer} container>\n          <Button onClick={() => handleLogout()} fullWidth>\n            Logout! \n          </Button>\n        </Grid>\n      </Dialog>\n    </>\n  );\n}\n\nexport default LogoutModal;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport LogoutModal from '../components/LogoutModal';\nimport withMediaQuery from '../higherOrderComponents/withMediaQuery';\n// Material UI \nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = (theme) => ({\n  nav: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  title: {\n    fontWeight: 'bold',\n    textDecoration: 'none',\n    paddingRight: 30,\n    [theme.breakpoints.down('lg')]: {\n      flexGrow: 1\n    }\n  },\n  menuIcon: {\n    color: theme.palette.text.primary\n  },\n  list: {\n    backgroundColor: theme.palette.primary.main\n  },\n  listItem: {\n    backgroundColor: theme.palette.primary.main,\n    borderBottom: '1px solid black'\n  },\n  listText: {\n    color: theme.palette.text.primary\n  },\n  paper: {\n    backgroundColor: theme.palette.primary.main \n  }, \n  userContainer: {\n    padding: 10,\n    alignContent: \"right\"\n  }, \n  username: {\n    paddingTop: 10\n  },\n  credits: {\n    paddingLeft: 5\n  },\n  loginButton: {\n    backgroundColor: theme.palette.text.primary\n  }\n});\n\nclass NavBar extends React.Component { \n\n  state = { \n    modalOpen: false,\n    drawerOpen: false,\n  }\n\n  handleLogoutModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    console.log(this.props.mediaQuery)\n    return (\n      <div >\n        <AppBar position=\"static\" className={classes.nav}>\n          <Toolbar>\n            <Typography component={Link} to={\"/lobby\"} variant=\"h4\" color=\"textPrimary\" className={classes.title}>\n              STONKKINGS\n            </Typography>\n            {this.props.mediaQuery ? (\n              <>\n                <Typography component={Link} to={\"/lobby\"} variant=\"h6\" color=\"textPrimary\" className={classes.title}>\n                  Lobby\n                </Typography>\n                <Typography component={Link} to={\"/my-tournaments\"} variant=\"h6\" color=\"textPrimary\" className={classes.title}>\n                  My Tournaments\n                </Typography>\n                <Typography component={Link} to={\"/leaderboard\"} variant=\"h6\" color=\"textPrimary\" className={classes.title}>\n                  Leaderboard        \n                </Typography>\n                <div style={{flexGrow: 1}}>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"secondary\"\n                    component={Link}\n                    to={`/create-tournament`}\n                  >\n                    Create a Tournament\n                  </Button>\n\n                </div>\n                {this.props.currentUser && !this.props.currentUser.message ? \n                (\n                  <div>\n                    <Grid className={classes.userContainer} container>\n                      <Grid item xs={4}>\n                      </Grid>\n                      <Grid item xs={2}>\n                        <Avatar onClick={this.handleLogoutModal} src={this.props.currentUser.avatar}/>\n                      </Grid>\n                      <Grid item xs={3} className={classes.username}>\n                        <Typography style={{fontWeight: 'bold'}} variant=\"h6\" align=\"left\">\n                          {this.props.currentUser.username}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography className={classes.credits} align=\"right\" variant=\"h6\" color=\"textPrimary\">\n                          Stonk Credits: {this.props.currentUser.accountBalance}\n                        </Typography>\n                      </Grid>\n                      <LogoutModal handleModal={this.handleLogoutModal} open={this.state.modalOpen} />\n                    </Grid>\n                  </div>\n                ) : (\n                  <Button \n                    className={classes.loginButton}\n                    variant=\"contained\"\n                    component={Link}\n                    to={\"/\"} \n                  >\n                    Login\n                  </Button>\n                )}\n              </>\n            ) : (\n              <>\n                <MenuIcon className={classes.menuIcon} onClick={() => this.setState({ drawerOpen: true })}/>\n                <SwipeableDrawer classes={{ paper: classes.paper }} open={this.state.drawerOpen} onClose={() => this.setState({ drawerOpen: false })} anchor=\"right\">\n                  {this.props.currentUser && !this.props.currentUser.message ? \n                  (\n                    <div>\n                      <Grid className={classes.userContainer} container>\n                        <Grid item xs={2}>\n                          <Avatar onClick={this.handleLogoutModal} src={this.props.currentUser.avatar}/>\n                        </Grid>\n                        <Grid item xs={3} className={classes.username}>\n                          <Typography style={{fontWeight: 'bold'}} variant=\"h6\" align=\"left\">\n                            {this.props.currentUser.username}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography className={classes.credits} align=\"left\" variant=\"h6\" color=\"textPrimary\">\n                            Stonk Credits: {this.props.currentUser.accountBalance}\n                          </Typography>\n                        </Grid>\n                        <LogoutModal handleModal={this.handleLogoutModal} open={this.state.modalOpen} />\n                      </Grid>\n                    </div>\n                  ) : (\n                    <Button \n                      className={classes.loginButton}\n                      variant=\"contained\"\n                      component={Link}\n                      to={\"/\"} \n                    >\n                      Login\n                    </Button>\n                  )}\n                  <List className={classes.list} style={{padding: 0}}>\n                    <ListItem className={classes.listItem} onClick={() => this.setState({ drawerOpen: false })} key={\"Lobby\"} component={Link} to={\"/lobby\"}>\n                      <ListItemText className={classes.listText} primary={\"Lobby\"} />\n                    </ListItem>\n                    <ListItem className={classes.listItem} onClick={() => this.setState({ drawerOpen: false })} key={\"My Tournaments\"} component={Link} to={\"/my-tournaments\"}>\n                      <ListItemText className={classes.listText} primary={\"My Tournaments\"} />\n                    </ListItem>\n                    <ListItem className={classes.listItem} onClick={() => this.setState({ drawerOpen: false })} key={\"LeaderBoard\"} component={Link} to={\"/leaderboard\"}>\n                      <ListItemText className={classes.listText} primary={\"LeaderBoard\"} />\n                    </ListItem>\n                    <ListItem className={classes.listItem} onClick={() => this.setState({ drawerOpen: false })} key={\"Create Tournament\"} component={Link} to={\"/create-tournament\"}>\n                      <ListItemText className={classes.listText} primary={\"Create Tournament\"} />\n                    </ListItem>\n                  </List>\n                </SwipeableDrawer>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.auth.currentUser\n})\n\nexport default connect(\n  mapStateToProps\n)(withStyles(useStyles, {withTheme: true})(withMediaQuery('(min-width:1900px)')(NavBar)));","import React from 'react';\nimport Countdown from '../components/Countdown';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\n// MATERIAL UI  \nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogBox: {\n    backgroundColor: theme.palette.primary.light,\n    \n  },\n  title: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  textContainer: {\n    display: 'flex'  \n  },\n  text: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  lobbyButton: {\n    width: '100%',\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n   '&:hover': {\n     backgroundColor: theme.palette.text.primary,\n   }\n  },\n  createButton: {\n    backgroundColor: theme.palette.text.primary,\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.text.secondary\n   }\n  },\n  cancelButton: {\n    backgroundColor: theme.palette.primary.main\n  }\n\n}));\n\nconst CreateTournamentModal = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  // getModalStyle is not a pure function, we roll the style only on the first render\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleModal}\n      >\n        <Grid container className={classes.dialogBox}>\n          {!props.createTournamentSuccess ? (\n            <div>\n              <Grid item xs={12} className={classes.title}>\n                <DialogTitle id=\"simple-dialog-title\">Create Tournament</DialogTitle>\n              </Grid>\n              <Grid item container xs={12}>\n                <DialogContent>\n                  <DialogContentText className={classes.text}>\n                    Tournament Name: {props.tournamentName}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    Max Entries: {props.entryLimit}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    Entry Fee: {props.entryFee}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    Start Time: {props.startTime}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    End Time: {props.endTime}\n                  </DialogContentText>\n                </DialogContent>\n              </Grid>\n              <Grid item xs={12}>\n                <DialogActions>\n                  <Button className={classes.cancelButton}variant=\"outlined\" onClick={props.handleModal}>\n                    Cancel\n                  </Button>\n                  <Button className={classes.createButton} variant=\"primary\" onClick={props.createTournament}>\n                    Create\n                  </Button>\n                </DialogActions>\n              </Grid>\n            </div>\n          ) : (\n            <div>\n              <Grid item xs={12} className={classes.title}>\n                <DialogTitle id=\"simple-dialog-title\">Tournament Successfully Created!</DialogTitle>\n              </Grid>\n              <Grid item xs={12}>\n                <DialogActions>\n                  <Button className={classes.lobbyButton} onClick={() => history.push('/lobby')} variant=\"contained\">\n                    Go to lobby!\n                  </Button>\n                </DialogActions>\n              </Grid>\n            </div>\n          )}\n        </Grid>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default CreateTournamentModal;\n","import React from \"react\";\nimport CreateTournamentModal from '../components/CreateTournamentModal';\nimport URL from '../config';\n// MATERIAL UI\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\n\nconst useStyles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 10,\n    padding: 20,\n    width: 600,\n    margin: 'auto'\n  },\n  titleContainer: {\n    marginLeft: '22%',\n    marginBottom: 10,\n    \n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  title: {\n    marginRight: 10,\n    color: theme.palette.text.secondary\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    marginTop: 20,\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n    '&:hover': {\n      backgroundColor: theme.palette.text.primary\n    }\n  },\n  cssOutlinedInput: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: `${theme.palette.text.primary} !important`,\n    }\n  },\n  cssLabel: {\n    color: 'white'\n  },\n  cssFocused: {\n  },\n  notchedOutline: {\n    borderWidth: '1px',\n    borderColor: `${theme.palette.primary.dark} !important`\n  },\n});\n\nconst DateAndTimeSelectors = (props) => {\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container>\n        <Grid item xs={6} style={{padding: 5}}>\n          <KeyboardDatePicker\n            style={{width: '100%'}}\n            InputLabelProps={{\n              style: {\n                color: 'white'\n              }\n            }}\n            margin=\"normal\"\n            id={props.dateLabel}\n            label={props.dateLabel}\n            format=\"MM/dd/yyyy\"\n            value={props.dateValue}\n            onChange={(value) => props.handleChangeTime(value, `selectedDateFor${props.name}`)}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n        </Grid>\n        <Grid item xs={6} style={{padding: 5}}>\n          <KeyboardTimePicker\n            style={{width: '100%'}}\n            InputLabelProps={{\n              style: {\n                color: 'white'\n              }\n            }}\n            margin=\"normal\"\n            id={props.timeLabel}\n            label={props.timeLabel}\n            value={props.timeValue}\n            onChange={(value) => props.handleChangeTime(value, `selectedTimeFor${props.name}`)}\n            KeyboardButtonProps={{\n              'aria-label': 'change time',\n            }}\n          />\n        </Grid>\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nclass CreateTournament extends React.Component {\n\n  state = {\n    modalOpen: false,\n    createTournamentLoading: false,\n    createTournamentSuccess: null,\n    tournamentName: \"\",\n    entryLimit: 20,\n    entryFee: 100,\n    selectedDateForStart: new Date(),\n    selectedTimeForStart: new Date(),\n    selectedDateForEnd: new Date(),\n    selectedTimeForEnd: new Date() \n  }\n\n  handleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen,\n      createTournamentSuccess: false\n    });\n  }\n  \n  handleChangeTime = (value, name) => {\n    this.setState({\n      [name]: value \n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  formatTime = (dateSelected, timeSelected) => {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    return new Date(`${monthNames[dateSelected.getMonth()]} ${dateSelected.getDate()}, ${dateSelected.getFullYear()} ${timeSelected.getHours()}:${timeSelected.getMinutes()}:${timeSelected.getSeconds()}`).toString();\n  }\n\n  createTournamentFetch = () => {\n    this.setState({\n      createTournamentLoading: true\n    });\n    fetch(`${URL}/api/tournaments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-access-token\": localStorage.token\n      },\n      body: JSON.stringify({\n        name: this.state.tournamentName,\n        entryFee: this.state.entryFee,\n        entryLimit: this.state.entryLimit,\n        startTime: this.formatTime(this.state.selectedDateForStart, this.state.selectedTimeForStart),\n        endTime: this.formatTime(this.state.selectedDateForEnd, this.state.selectedTimeForEnd)\n      })\n    })\n    .then(res => res.json())\n    .then(createdTournament => {\n      this.setState({\n        createTournamentLoading: false,\n        createTournamentSuccess: true\n      })\n    })\n    .catch(console.log)\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container className={classes.paper}>\n        <Grid className={classes.titleContainer} item xs={12} container direction=\"row\" alignItems=\"center\">\n          <Grid item className={classes.title}>\n            <Typography color=\"\" variant=\"h4\">\n              Tournament Details\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AddCircleOutlineIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <TextField\n          style={{margin: 5}}\n          color=\"primary\"\n          value={this.state.name}\n          onChange={this.handleChange}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"tournamentName\"\n          label=\"Tournament Name\"\n          name=\"tournamentName\"\n          autoFocus\n          InputLabelProps={{\n            classes: {\n              root: classes.cssLabel,\n              focused: classes.cssFocused,\n            },\n          }}\n          InputProps={{\n            classes: {\n              root: classes.cssOutlinedInput,\n              focused: classes.cssFocused,\n              notchedOutline: classes.notchedOutline,\n            },\n          }}\n\n        />\n        <Grid item xs={6} style={{padding: 5}}>\n          <TextField\n            fullWidth={true}\n            value={this.state.entryLimit}      \n            onChange={this.handleChange}        \n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            required\n            name=\"entryLimit\"\n            label=\"Max Players\"\n            id=\"\"\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused,\n              },\n            }}\n            InputProps={{\n              classes: {\n                root: classes.cssOutlinedInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n              },\n            }}\n\n          />\n        </Grid>\n        <Grid item xs={6} style={{padding: 5}}>\n          <TextField\n            InputLabelProps={{\n              style: {\n                color: 'white'\n              }\n            }}\n            value={this.state.entryFee}      \n            fullWidth={true}\n            onChange={this.handleChange}        \n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            required\n            name=\"entryFee\"\n            label=\"Entry Fee\"\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused,\n              },\n            }}\n            InputProps={{\n              classes: {\n                root: classes.cssOutlinedInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n              },\n            }}\n            id=\"\"\n          />\n        </Grid>\n        <DateAndTimeSelectors \n          name={\"Start\"}   \n          dateLabel={\"Choose start date\"}\n          timeLabel={\"Choose start time\"}\n          dateValue={this.state.selectedDateForStart}\n          timeValue={this.state.selectedTimeForStart}\n          handleChangeTime={this.handleChangeTime}\n        />\n        <DateAndTimeSelectors \n          name={\"End\"}   \n          dateLabel={\"Choose end date\"}\n          timeLabel={\"Choose end time\"}\n          dateValue={this.state.selectedDateForEnd}\n          timeValue={this.state.selectedTimeForEnd}\n          handleChangeTime={this.handleChangeTime}\n        />\n        <Button\n          onClick={this.handleModal}\n          fullWidth\n          variant=\"contained\"\n          className={classes.submit}\n        >\n          Create Tournament\n        </Button>\n        <CreateTournamentModal\n          createTournamentLoading={this.state.createTournamentLoading}\n          createTournamentSuccess={this.state.createTournamentSuccess}\n          open={this.state.modalOpen}\n          handleModal={this.handleModal}\n          createTournament={this.createTournamentFetch}\n          tournamentName={this.state.tournamentName}\n          entryLimit={this.state.entryLimit}\n          entryFee={this.state.entryFee}\n          startTime={this.formatTime(this.state.selectedDateForStart, this.state.selectedTimeForStart)}\n          endTime={this.formatTime(this.state.selectedDateForEnd, this.state.selectedTimeForEnd)}\n        />\n      </Grid>\n    )\n  }\n}\n\nexport default withStyles(useStyles, {withTheme: true})(CreateTournament);\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n// actions\nimport { loginWithToken } from \"./redux/actions/auth.actions\";\n// components \nimport Footer from './components/Footer';\n// containers \nimport Leaderboard from './containers/Leaderboard';\nimport MyTournaments from './containers/MyTournaments';\nimport Lobby from \"./containers/Lobby\";\nimport Login from \"./containers/Login\";\nimport Tournament from \"./containers/Tournament\";\nimport NavBar from \"./containers/NavBar\";\nimport CreateTournament from \"./containers/CreateTournament\";\n// MATERIAL UI \nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = (theme) => ({\n  app: {\n    backgroundColor: theme.palette.primary.light\n  },\n  mainContainer: {\n    minHeight: '100vh',\n    width: '100%',\n    height: '100%'\n  }\n});\n\nclass App extends React.Component {\n\n  state = {\n    loggedIn: false,\n  }\n\n  logIn = () => {\n    this.setState({\n      loggedIn: true\n    })\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      this.props.loginWithToken(localStorage.token);\n      this.logIn();\n    } \n  }\n  \n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.app}>\n        <BrowserRouter>\n          {this.state.loggedIn || localStorage.token ? (\n            <NavBar />\n          ) : null}\n          <div className={classes.mainContainer}>\n            <Switch>\n              <Route\n                exact\n                path=\"/lobby\"\n                render={(routeProps) => (\n                  <Lobby {...routeProps} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/\"\n                render={(routeProps) => (\n                  <Login logIn={this.logIn} loggedIn={this.state.loggedIn} {...routeProps} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/my-tournaments\"\n                render={(routeProps) => (\n                  <MyTournaments {...routeProps} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/leaderboard\"\n                render={(routeProps) => (\n                  <Leaderboard {...routeProps} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/create-tournament\"\n                render={(routeProps) => (\n                  <CreateTournament {...routeProps} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/tournament/:id\"\n                render={(routeProps) => (\n                  <Tournament {...routeProps} currentUser={this.props.currentUser} />\n                )}\n              />\n            </Switch>\n\n          </div>\n          {this.state.loggedIn || localStorage.token ? (\n            <Footer className={classes.footer}/>\n          ) : null}\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.auth.currentUser,\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginWithToken }\n)(withStyles(useStyles, {withTheme: true})(App));\n","import { \n  FETCH_USER_INFORMATION_BEGIN,\n  FETCH_USER_INFORMATION_SUCCESS,\n  FETCH_USER_INFORMATION_FAILURE,\n} from \"../actions/auth.actions\";\n\nconst initialState = {\n  currentUser: null,\n  loggedIn: false,\n  loading: false,\n  error: null\n}\n\nconst authReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case FETCH_USER_INFORMATION_BEGIN: \n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_USER_INFORMATION_SUCCESS:\n      return {\n        loading: false,\n        loggedIn: true,\n        error: false,\n        currentUser: action.payload.userInfo\n      }\n    case FETCH_USER_INFORMATION_FAILURE:\n        return {\n          ...state,\n          loading: false,\n          error: action.payload.error\n        }\n    default:\n      return state;\n  }  \n}\n\nexport default authReducer;","import { \n  FETCH_TOURNAMENTS_BEGIN,\n  FETCH_TOURNAMENTS_SUCCESS,\n  FETCH_TOURNAMENTS_FAILURE\n} from \"../actions/tournament.actions\";\n\nconst initialState = {\n  tournamentsArr: [],\n  loadingTournaments: false,\n  tournamentsError: null,\n  tournamentById: {},\n  loadingTournamentById: false,\n  tournamentByIdError: null,\n}\n\nconst tournamentReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case FETCH_TOURNAMENTS_BEGIN: \n      return {\n        ...state,\n        loadingTournaments: true,\n        tournamentsError: null\n      };\n    case FETCH_TOURNAMENTS_SUCCESS:\n      return {\n        ...state,\n        loadingTournaments: false,\n        tournamentsArr: action.payload.tournamentsArr\n      }\n    case FETCH_TOURNAMENTS_FAILURE:\n      return {\n        ...state,\n        loadingTournaments: false,\n        tournamentsError: action.payload.error\n      }\n    default:\n      return state;\n  }  \n}\n\nexport default tournamentReducer;","import { \n  CREATE_ENTRY_BEGIN,\n  CREATE_ENTRY_SUCCESS,\n  CREATE_ENTRY_FAILURE,\n  FETCH_ENTRY_INFORMATION_BEGIN,\n  FETCH_ENTRY_INFORMATION_SUCCESS,\n  FETCH_ENTRY_INFORMATION_FAILURE,\n  FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN,\n  FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS,\n  FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE\n} from \"../actions/entry.actions\";\n\nconst initialState = {\n  createdEntry: null,\n  currentEntry: null,\n  tournamentEntries: [],\n  loadingCurrentEntry: false,\n  loadingCreatedEntry: false,\n  loadingTournamentEntries: false,\n  currentEntryError: null,\n  createdEntryError: null,\n  tournamentEntriesError: null\n}\n// make errors false on success and null on begin\nconst entryReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case FETCH_ENTRY_INFORMATION_BEGIN: \n      return {\n        ...state,\n        loadingCurrentEntry: true,\n        currentEntryError: null\n      };\n    case FETCH_ENTRY_INFORMATION_SUCCESS:\n      return {\n        ...state,\n        loadingCurrentEntry: false,\n        currentEntry: action.payload.entryInfo,\n        currentEntryError: false\n      }\n    case FETCH_ENTRY_INFORMATION_FAILURE:\n      return {\n        ...state,\n        loadingCurrentEntry: false,\n        currentEntryError: action.payload.error\n      }\n    case CREATE_ENTRY_BEGIN:\n      return {\n        ...state,\n        loadingCreatedEntry: true,\n        createdEntryError: null\n      }\n    case CREATE_ENTRY_SUCCESS:\n      return {\n        ...state,\n        loadingCreatedEntry: false,\n        createdEntry: action.payload.entryInfo,\n        createdEntryError: false\n      }\n    case CREATE_ENTRY_FAILURE:\n      return {\n        ...state,\n        loadingCreatedEntry: false,\n        createdEntryError: action.payload.error\n      }\n    case FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN: \n      return {\n        ...state,\n        loadingTournamentEntries: true,\n        tournamentEntriesError: null\n      }\n    case FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS:\n      return {\n        ...state,\n        loadingTournamentEntries: false,\n        tournamentEntries: action.payload.entriesArr,\n        tournamentEntriesError: false\n      }\n    case FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE: \n      return {\n        ...state,\n        loadingTournamentEntries: false,\n        tournamentEntriesError: action.payload.error\n      }\n    default:\n      return state;\n  }  \n}\n\nexport default entryReducer;","import { \n  CREATE_TRADE_BEGIN,\n  CREATE_TRADE_SUCCESS,\n  CREATE_TRADE_FAILURE,\n  FETCH_TRADES_BY_ENTRY_BEGIN,\n  FETCH_TRADES_BY_ENTRY_SUCCESS,\n  FETCH_TRADES_BY_ENTRY_FAILURE\n} from \"../actions/trade.actions\";\n\n\nconst initialState = {\n  createdTrade: [],\n  tradesByEntry: [],\n  loadingCreatedTrade: false,\n  loadingTradeByEntryArr: false,\n  createTradeErr: null,\n  tradesByEntryErr: null\n}\n\nconst tradeReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case CREATE_TRADE_BEGIN:\n      return {\n        ...state,\n        loadingCreatedTrade: true\n      }\n    case CREATE_TRADE_SUCCESS:\n      return {\n        ...state,\n        loadingCreatedTrade: false,\n        createdTrade: action.payload.tradeInfo\n      }\n    case CREATE_TRADE_FAILURE:\n      return {\n        ...state,\n        loadingCreatedTrade: false,\n        createTradeErr: action.payload.error\n      }\n    case FETCH_TRADES_BY_ENTRY_BEGIN:\n      return {\n        ...state,\n        loadingTradeByEntryArr: true\n      }\n    case FETCH_TRADES_BY_ENTRY_SUCCESS:\n      return {\n        ...state,\n        loadingTradeByEntryArr: false,\n        tradesByEntry: action.payload.tradesByEntry\n      }\n    case FETCH_TRADES_BY_ENTRY_FAILURE:\n      return {\n        ...state,\n        loadingTradeByEntryArr: false,\n        tradesByEntryErr: action.payload.err\n      }\n\n    default:\n      return state;\n  }  \n}\n\nexport default tradeReducer;","import { combineReducers } from \"redux\";\n// import reducers here\nimport auth from \"./auth.reducers\";\nimport tournament from \"./tournament.reducers\";\nimport entry from \"./entry.reducers\";\nimport trade from \"./trade.reducers\";\n\nexport default combineReducers({ auth, tournament, entry, trade });\n\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\nimport { createMuiTheme }  from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#484848\",\n      dark: \"#000000\"\n    },\n    secondary: {\n      main: \"#d84315\"\n    },\n    text: {\n      primary: \"#64dd17\",\n      secondary: \"#fafafa\"\n    }\n  }\n})\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}