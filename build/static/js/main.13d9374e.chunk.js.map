{"version":3,"sources":["redux/actions/auth.actions.js","components/Footer.js","components/Countdown.js","components/LeaderboardTable.js","containers/Leaderboard.js","redux/actions/tournament.actions.js","components/MyTournamentsTable.js","containers/MyTournaments.js","components/TournamentModal.js","components/LobbyTable.js","containers/Lobby.js","redux/actions/entry.actions.js","containers/Login.js","redux/actions/trade.actions.js","components/SearchBar.js","components/Chart.js","components/TradeModal.js","components/SnackBarDisplay.js","components/TradeBar.js","components/LatestPrice.js","components/MyPositions.js","components/TournamentBar.js","components/TradeHistoryTable.js","components/AllEntrantsTable.js","containers/Tournament.js","containers/NavBar.js","components/CreateTournamentModal.js","containers/CreateTournament.js","App.js","redux/reducers/auth.reducers.js","redux/reducers/tournament.reducers.js","redux/reducers/entry.reducers.js","redux/reducers/trade.reducers.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["fetchUserInfoSuccess","userInfo","type","payload","fetchUserInfoFailure","err","loginWithToken","token","dispatch","fetch","method","headers","then","res","json","localStorage","accessToken","userId","id","catch","Copyright","Typography","variant","style","color","align","Date","getFullYear","useStyles","makeStyles","theme","footer","padding","spacing","maxWidth","marginTop","backgroundColor","palette","primary","dark","icon","text","secondary","width","Footer","classes","Fragment","className","Grid","container","xs","item","component","Countdown","state","countdown","now","getTime","timeleft","props","countDownEnd","days","Math","floor","hours","minutes","seconds","setState","overMsg","intervalId","setInterval","this","console","log","clearInterval","React","Component","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","label","EnhancedTableHead","order","onRequestSort","rowCount","TableHead","TableRow","tableHead","map","headCell","TableCell","key","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","root","paddingLeft","paddingRight","toolbar","title","fontWeight","flexGrow","stonkKing","main","EnhancedTableToolbar","Toolbar","alignItems","justify","Avatar","src","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","row","tablePagination","LeaderboardTable","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","rows","users","user","username","avatar","wins","accountBalance","numOfEntries","entries","length","Paper","TableContainer","Table","aria-labelledby","aria-label","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","hover","role","tabIndex","scope","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","Leaderboard","getTournaments","tournamentsArr","fetchTournamentsSuccess","fetchTournamentsFailure","enterButton","MyTournamentsTable","tournament","name","entryFee","totalPrize","start","startTime","end","endTime","Button","autoFocus","Link","to","MyTournaments","userTournaments","getUserTournaments","forEach","entry","push","connect","TournamentModal","entered","handleSignUp","handleEnter","tournamentInfo","Dialog","open","onClose","handleModal","dialogContainer","dialogTitle","DialogTitle","timer","DialogContent","dialogContent","currentUser","calcContainer","DialogContentText","calcTitle","entryLimit","DialogActions","cancelButton","signUpButton","withStyles","textAlign","light","borderBottom","borderColor","display","fontSize","withTheme","LobbyTable","tableHeader","handleClickTournamentRow","Lobby","modalOpen","tournamentClickedInfo","tournamentId","createEntry","updatedTournament","find","t","userEntry","_id","mainContainer","mainTableHeader","entryData","auth","body","JSON","stringify","entryInfo","createEntrySuccess","createEntryFailure","createButton","tableCellHeader","tableCell","textDecoration","href","Login","signIn","setSignIn","bool","handleField","e","handleLogin","password","logIn","history","email","CssBaseline","sm","md","image","elevation","square","form","noValidate","TextField","fullWidth","onChange","InputLabelProps","cssLabel","focused","cssFocused","InputProps","cssOutlinedInput","notchedOutline","required","autoComplete","FormControlLabel","control","Checkbox","submit","Box","mt","credentials","signInOrUp","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","input","borderWidth","getTradesByEntryId","entryId","tradesByEntry","fetchTradesByEntrySuccess","fetchTradesByEntryFailure","popper","inputFocused","groupLabel","option","inputRoot","SearchBar","setOpen","options","setOptions","loading","useEffect","Autocomplete","onOpen","getOptionSelected","getOptionLabel","onInputChange","results","bestMatches","currentTarget","val","handleSearchSubmit","ListboxProps","listBox","renderInput","params","endAdornment","CircularProgress","size","stockInfo","Chart","grid","line","stroke","axis","ticks","fill","legend","crosshair","data","right","bottom","left","xScale","format","xScaleFormat","precision","xFormat","yScale","min","max","stacked","reverse","axisTop","axisRight","axisLeft","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","axisBottom","colors","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","dialogHeader","textFieldContainer","sharesField","borderRadius","sharesFieldInput","button","TradeModal","buyOrSell","currentBalance","amountOfShares","price","opacity","stockTicker","round","toFixed","currentEntry","tournamentBalance","defaultValue","handleShareField","inputProps","handleTrade","Alert","SnackBarDisplay","Snackbar","autoHideDuration","handleClose","anchorOrigin","horizontal","vertical","error","severity","message","TradeBar","shareAmountField","openModal","openSnackBar","handleCloseSnackBar","reason","handleClickSnackBar","createTrade","time","currentPrice","getCurrentEntry","snackbarmessage","snackbarErr","createdTrade","buyButton","sellButton","tradeObj","tradeInfo","createTradeSuccess","createTradeFailure","marginRight","LatestPrice","fetchPrice","searchString","priceData","setPrice","MyPositions","hasPositions","tradeData","filter","self","indexOf","ticker","netShares","averagePrice","sharePriceXNumOfSharesSum","totalShares","trade","TournamentBar","AppBar","setView","menuButton","TradeHistoryTable","formattedDate","date","getHours","getMinutes","ampm","strTime","getMonth","getDate","formatDate","timeTraded","parseFloat","AllEntrantsTable","numOfTrades","trades","Tournament","stockData","x","y","symbol","currentSearch","timeFunction","intradayInterval","currentView","getPriceData","queryString","formatPriceQuery","timeSeriesHash","Object","keys","formattedData","exchange","sector","handleGetCurrentEntry","getEntryByUsernameAndTournamentName","match","undefined","handleChangeTimeFunction","changeView","view","getEntriesByTournamentId","searchBar","marginLeft","chartContainer","tournamentEntries","fetchEntryInfoSuccess","fetchEntryInfoFailure","entriesArr","fetchEntriesByTournamentIdSuccess","fetchEntriesByTournamentIdFailure","NavBar","nav","userContainer","credits","loginButton","alignContent","paddingTop","dialogBox","textContainer","lobbyButton","CreateTournamentModal","useHistory","createTournamentSuccess","tournamentName","createTournament","DateAndTimeSelectors","utils","DateFnsUtils","dateLabel","dateValue","handleChangeTime","KeyboardButtonProps","timeLabel","timeValue","CreateTournament","createTournamentLoading","selectedDateForStart","selectedTimeForStart","selectedDateForEnd","selectedTimeForEnd","handleChange","formatTime","dateSelected","timeSelected","getSeconds","toString","createTournamentFetch","createdTournament","titleContainer","App","loggedIn","app","exact","path","render","routeProps","minHeight","initialState","authReducer","action","loadingTournaments","tournamentsError","tournamentById","loadingTournamentById","tournamentByIdError","tournamentReducer","createdEntry","loadingCurrentEntry","loadingCreatedEntry","loadingTournamentEntries","currentEntryError","createdEntryError","tournamentEntriesError","entryReducer","loadingCreatedTrade","loadingTradeByEntryArr","createTradeErr","tradesByEntryErr","tradeReducer","combineReducers","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","createMuiTheme","ReactDOM","ThemeProvider","store","document","getElementById"],"mappings":"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","file":"static/js/main.13d9374e.chunk.js","sourcesContent":["export const FETCH_USER_INFORMATION_BEGIN = \"FETCH_USER_INFORMATION_BEGIN\";\nexport const FETCH_USER_INFORMATION_SUCCESS = \"FETCH_USER_INFORMATION_SUCCESS\";\nexport const FETCH_USER_INFORMATION_FAILURE = \"FETCH_USER_INFORMATION_FAILURE\";\n\nconst fetchUserInfoBegin = () => ({\n  type: FETCH_USER_INFORMATION_BEGIN\n});\n\nconst fetchUserInfoSuccess = userInfo => ({\n  type: FETCH_USER_INFORMATION_SUCCESS,\n  payload: { userInfo }\n});\n\nconst fetchUserInfoFailure = err => ({\n  type: FETCH_USER_INFORMATION_FAILURE,\n  payload: { err }\n});\n\nexport const auth = (credentials, signInOrUp) => {\n  return dispatch => {\n    dispatch(fetchUserInfoBegin());\n    return fetch(`http://localhost:3000/api/auth/${signInOrUp}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ...credentials\n      })\n    })\n      .then(res => res.json())\n      .then(userInfo => {\n        dispatch(fetchUserInfoSuccess(userInfo))\n        localStorage.token = userInfo.accessToken\n        localStorage.userId = userInfo.id\n        return userInfo\n      })\n      .catch(err => dispatch(fetchUserInfoFailure(err)));\n  }\n};\n\nexport const loginWithToken = (token) => {\n  return dispatch => {\n    dispatch(fetchUserInfoBegin());\n    return fetch(\"http://localhost:3000/api/auth/loginWithToken\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": token\n      }\n    })\n    .then(res => res.json())\n    .then(userInfo => {\n      dispatch(fetchUserInfoSuccess(userInfo))\n      localStorage.token = userInfo.accessToken\n      localStorage.userId = userInfo.id\n      return userInfo\n    })\n    .catch(err => dispatch(fetchUserInfoFailure(err)))\n  }\n};","import React from 'react';\n// MATERIAL-UI\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { NavLink } from 'react-router-dom';\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" style={{color: 'white'}} align=\"center\">\n      {'Copyright © '}\n\n        Stonk Kings\n\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    padding: theme.spacing(4),\n    maxWidth: '100%',\n    marginTop: 20,\n    backgroundColor: theme.palette.primary.dark\n  },\n  icon: {\n    color: theme.palette.text.secondary,\n    width: '100%',\n  }\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Grid container xs={12}>\n          <Grid item xs={4}>\n            <InstagramIcon className={classes.icon}/>\n          </Grid>\n          <Grid item xs={4}>\n            <TwitterIcon className={classes.icon}/>\n          </Grid>\n          <Grid item xs={4}>\n            <FacebookIcon className={classes.icon}/>\n          </Grid>\n        </Grid>\n        <Typography variant=\"subtitle1\" align=\"center\" style={{color: 'white'}} component=\"p\">\n          Follow us on Social Media!\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  )\n}\n\nexport default Footer;","import React from \"react\";\nimport TableCell from '@material-ui/core/TableCell';\n\nclass Countdown extends React.Component {\n\n  state = {\n    countdown: \"loading...\"\n  }\n  \n  componentDidMount() {\n    const intervalId = setInterval(this.countdown, 1000)\n    this.setState({intervalId: intervalId})\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmounting\")\n    clearInterval(this.state.intervalId)\n  }\n  \n  countdown = () => {\n    let now = new Date().getTime();\n\n    let timeleft = this.props.countDownEnd - now;\n        \n    // Calculating the days, hours, minutes and seconds left\n    let days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\n    let hours = Math.floor((timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    let minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = Math.floor((timeleft % (1000 * 60)) / 1000);\n    this.setState({\n      countdown: `${days} days, ${hours}:${minutes}:${seconds}`\n    })\n    if (timeleft < 0) {\n      // clearInterval(this.state.intervalId);\n      this.setState({\n        countdown: this.props.overMsg \n      })\n    }\n  }\n\n  render() {\n    return (\n      this.state.countdown\n    )\n  }\n}\n\nexport default Countdown;","import React from 'react';\nimport Countdown from './Countdown';\n// MATERIAL UI \nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport Avatar from '@material-ui/core/Avatar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'username', numeric: false, disablePadding: false, label: 'Username' },\n  { id: 'numOfEntries', numeric: true, disablePadding: false, label: 'Number of Entries' },\n  { id: 'wins', numeric: true, disablePadding: false, label: 'Wins' },\n  { id: 'accountBalance', numeric: true, disablePadding: false, label: 'Account Balance'}\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  toolbar: {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.dark\n  },\n  title: {\n    fontWeight: 'bold',\n    flexGrow: 1,\n  },\n  stonkKing: {\n    fontWeight: 'bold',\n    color: theme.palette.secondary.main,\n    paddingRight: 10\n  },\n}));\n\nconst EnhancedTableToolbar = () => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar className={classes.toolbar}>\n\n      <Grid container item alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\" xs={12}>\n        <Typography style={{flexGrow: 1}} className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n          Leaderboard\n        </Typography>\n\n        <Typography align=\"right\" className={classes.stonkKing} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          L33TPikachu\n        </Typography>\n        <Avatar src={'https://i1.sndcdn.com/avatars-000547985256-ntiz46-t500x500.jpg'} />\n      </Grid>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary\n  },\n  row: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark\n  }\n}));\n\nconst LeaderboardTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('accountBalance');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.users.map(user => {\n      console.log(user)\n      return {\n        username: user.username,\n        avatar: user.avatar,\n        wins: user.wins,\n        accountBalance: user.accountBalance,\n        numOfEntries: user.entries.length\n      }\n    })\n  }\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar  />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                   \n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                    >\n                      <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                        <Grid container alignItems=\"flex-start\" direction=\"row\">\n                          <Avatar src={row.avatar} />\n                          <Typography variant=\"h5\" style={{marginTop: 10, paddingLeft: 10}}>\n                            {row.username}\n                          </Typography>\n                        </Grid>\n                      </TableCell>\n                      {row.username === \"Pikachu\" ? (\n                        <TableCell className={classes.row} align=\"right\">12</TableCell>\n                      ) : (\n                        <TableCell className={classes.row} align=\"right\">{row.numOfEntries}</TableCell>\n                      )}\n                      <TableCell className={classes.row} align=\"right\">{row.wins}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.accountBalance}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default LeaderboardTable;","import React from 'react';\nimport LeaderboardTable from '../components/LeaderboardTable';\n\nclass Leaderboard extends React.Component {\n\n  state = {\n    users: []\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/api/users')\n      .then(res => res.json())\n      .then(users => {\n        this.setState({\n          users: users\n        })\n      })\n  }\n\n\n  render() {\n    console.log(this.state)\n    return (\n      <div style={{padding: 100}}>\n        <LeaderboardTable users={this.state.users} />\n      </div>\n    )\n  }\n}\n\nexport default Leaderboard;","export const FETCH_TOURNAMENTS_BEGIN = \"FETCH_TOURNAMENTS_BEGIN\";\nexport const FETCH_TOURNAMENTS_SUCCESS = \"FETCH_TOURNAMENTS_SUCCESS\";\nexport const FETCH_TOURNAMENTS_FAILURE = \"FETCH_TOURNAMENTS_FAILURE\";\n\nconst fetchTouranmentsBegin = () => ({\n  type: FETCH_TOURNAMENTS_BEGIN \n});\n\nconst fetchTournamentsSuccess = tournamentsArr => ({\n  type: FETCH_TOURNAMENTS_SUCCESS,\n  payload: { tournamentsArr }\n});\n\nconst fetchTournamentsFailure = err => ({\n  type: FETCH_TOURNAMENTS_FAILURE,\n  payload: { err }\n});\n\nexport const getTournaments = () => dispatch => {\n  dispatch(fetchTouranmentsBegin())\n  return fetch(\"http://localhost:3000/api/tournaments\")\n    .then(res => res.json())\n    .then(tournamentsArr => {\n      dispatch(fetchTournamentsSuccess(tournamentsArr))\n    })\n    .catch(err => dispatch(fetchTournamentsFailure(err)));\n};\n  \n","import React from 'react';\nimport Countdown from './Countdown';\nimport { Link } from \"react-router-dom\";\n// MATERIAL UI \nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'name', numeric: false, disablePadding: false, label: 'Tournament Name' },\n  { id: 'entryFee', numeric: true, disablePadding: false, label: 'Entry Fee' },\n  { id: 'entries', numeric: true, disablePadding: false, label: 'Entries'},\n  { id: 'totalPrize', numeric: true, disablePadding: false, label: 'Total Prize' },\n  { id: 'start', numeric: true, disablePadding: false, label: 'Start' },\n  { id: 'end', numeric: true, disablePadding: false, label: 'End' },\n  { id: 'enter', numeric: true, disablePadding: false, label: 'Enter' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  toolbar: {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.dark\n  },\n  title: {\n    fontWeight: 'bold',\n    flexGrow: 1,\n  }\n}));\n\nconst EnhancedTableToolbar = () => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar className={classes.toolbar}>\n      <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n        My Tournaments\n      </Typography>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary\n  },\n  row: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark\n  },\n  enterButton: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.dark,\n    width: 20,\n    '&:hover': {\n      backgroundColor: theme.palette.text.primary\n    }\n  }\n}));\n\nconst MyTournamentsTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('start');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.tournamentsArr.map(tournament => {\n      return {\n        tournament: tournament,\n        name: tournament.name,\n        entryFee: tournament.entryFee,\n        entries: tournament.entries.length,\n        totalPrize: tournament.entryFee * tournament.entries.length,\n        start: tournament.startTime,\n        end: tournament.endTime\n      }\n    })\n  }\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar  />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                   \n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                    >\n                      <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                        {row.name}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.entryFee}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.entries}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.totalPrize}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown className={classes.row} countDownEnd={new Date(row.start).getTime()} overMsg={\"Started!\"}/>\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown className={classes.row} countDownEnd={new Date(row.end).getTime()} overMsg={\"Ended!\"}/>\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Button className={classes.enterButton} variant=\"outlined\" autoFocus component={Link} to={`/tournament/${row.tournament.id}`}>\n                          Enter\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default MyTournamentsTable;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getTournaments } from \"../redux/actions/tournament.actions\";\nimport MyTournamentsTable from \"../components/MyTournamentsTable\";\nimport { isThursday } from 'date-fns';\n\nclass MyTournaments extends React.Component {\n\n  state = {\n    userTournaments: []\n  }\n\n  componentDidMount() {\n    this.props.getTournaments();\n  }\n\n  getUserTournaments = () => {\n    if (localStorage.userId) {\n      const userTournaments = [];\n      this.props.tournamentsArr.forEach(tournament => {\n        tournament.entries.forEach(entry => {\n          if (entry.user === localStorage.userId) {\n            console.log(\"found\")\n            userTournaments.push(tournament);\n          }\n        })  \n      });\n      return userTournaments;\n    }\n  }\n\n  render() {\n    console.log(this.getUserTournaments())\n    console.log(this.props.tournamentsArr)\n    return (\n      <div style={{padding: 100}}>\n        <MyTournamentsTable tournamentsArr={this.getUserTournaments()} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  tournamentsArr: state.tournament.tournamentsArr\n})\n\nexport default connect(\n  mapStateToProps,\n  { getTournaments }\n)(MyTournaments);","import React from 'react';\nimport Countdown from '../components/Countdown';\nimport { Link } from 'react-router-dom';\n// MATERIAL UI  \nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = (theme) => ({\n  timer: {\n    textAlign: 'right'\n  },\n  dialogTitle: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  dialogContainer: {\n    backgroundColor: theme.palette.primary.light\n  },\n  dialogContent: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  }, \n  calcContainer: {\n    borderBottom: 1,\n    borderColor: 'black',\n    display: 'flex'\n  },\n  calcTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark,\n    flexGrow: 1 \n  },\n  enterButton: {\n    width: '100%',\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n   '&:hover': {\n     backgroundColor: theme.palette.text.primary,\n   }\n  },\n  signUpButton: {\n    backgroundColor: theme.palette.text.primary,\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.text.secondary\n   }\n  },\n  cancelButton: {\n    backgroundColor: theme.palette.primary.main\n  }\n});\n\n// updates and sets entered to true, and never gets reset to false. \n// when clicked sign in current user is updated but curr tournament clicked info is not \n// tournament info only updated on click tournament row which row info is updated when handleenter \n\n\nclass TournamentModal extends React.Component {\n  \n  state = {\n    entered: false\n  }\n\n  handleSignUp = () => {\n    this.props.handleEnter(this.props.tournamentInfo.id)\n    this.setState({\n      entered: !this.state.entered\n    }) \n  }\n  \n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        {this.props.tournamentInfo ? (\n          <div>\n            <Dialog\n              open={this.props.open}\n              onClose={this.props.handleModal}\n            >\n              <Grid className={classes.dialogContainer} container >\n                <Grid className={classes.dialogTitle} container item xs={12}>\n                  <Grid item xs={6}>\n                    <DialogTitle id=\"simple-dialog-title\">{this.props.tournamentInfo.name}</DialogTitle>\n                  </Grid>\n                  {new Date(this.props.tournamentInfo.startTime) > new Date() ? (\n                    <Grid item xs={6}>\n                      <DialogTitle className={classes.timer} id=\"simple-dialog-title\">\n                        Starts: <Countdown countDownEnd={new Date(this.props.tournamentInfo.startTime).getTime()} overMsg={\"Started!\"}/>\n                      </DialogTitle>\n                    </Grid>\n                  ) : (\n                    <Grid item xs={6}>\n                      {new Date(this.props.tournamentInfo.endTime) > new Date() ? (\n                        <DialogTitle className={classes.timer} id=\"simple-dialog-title\">\n                          Ends: <Countdown countDownEnd={new Date(this.props.tournamentInfo.endTime).getTime()} overMsg={\"Ended!\"}/>\n                        </DialogTitle>\n                      ) : (\n                      <DialogTitle className={classes.timer} id=\"simple-dialog-title\">\n                        Tournament has ended.\n                      </DialogTitle>\n                      )}\n                    </Grid>\n                  )}\n                </Grid>\n                <Grid item container xs={6}>\n                  <DialogContent className={classes.dialogContent}>\n                    {this.props.currentUser ? (\n                      <div>\n                        <Grid className={classes.calcContainer} item xs={12}>\n                          <DialogContentText className={classes.calcTitle}>\n                            Your Credits: \n                          </DialogContentText>\n                          <DialogContentText className={classes.dialogContent}>\n                            {this.props.currentUser.accountBalance} \n                          </DialogContentText>\n                        </Grid>\n                        <Grid className={classes.calcContainer} item xs={12}>\n                          <DialogContentText className={classes.calcTitle}>\n                            Entry Fee: \n                          </DialogContentText>\n                          <DialogContentText className={classes.dialogContent}>\n                            - {this.props.tournamentInfo.entryFee} \n                          </DialogContentText>\n                        </Grid>\n                        <Grid className={classes.calcContainer} item xs={12}>\n                          <DialogContentText className={classes.calcTitle}>\n                            Resulting Balance: \n                          </DialogContentText>\n                          <DialogContentText className={classes.dialogContent}>\n                            {this.props.currentUser.accountBalance - this.props.tournamentInfo.entryFee} \n                          </DialogContentText>\n                        </Grid>\n                      </div>\n                    ) : (\n                      <DialogContentText>\n                        Please login!\n                      </DialogContentText>\n                    )}\n                  </DialogContent>\n                </Grid>\n                <Grid item container xs={6}>\n                  <DialogContent className={classes.dialogContent}>\n                    <Grid className={classes.calcContainer} item xs={12}>\n                      <DialogContentText className={classes.calcTitle}>\n                        Entries:\n                      </DialogContentText>\n                      <DialogContentText className={classes.dialogContent}>\n                        {this.props.tournamentInfo.entries ? this.props.tournamentInfo.entries.length : null} / {this.props.tournamentInfo.entryLimit}\n                      </DialogContentText>\n                    </Grid>\n                    <Grid className={classes.calcContainer} item xs={12}>\n                      <DialogContentText className={classes.calcTitle}>\n                        Total prize pool:\n                      </DialogContentText>\n                      <DialogContentText className={classes.dialogContent}>\n                        {this.props.tournamentInfo.entries ? this.props.tournamentInfo.entries.length * this.props.tournamentInfo.entryFee : null}\n                      </DialogContentText>\n                    </Grid>\n                  </DialogContent>\n                </Grid>\n                <Grid item xs={12}>\n                  {this.props.entered ? (\n                    <DialogActions>\n                      <Button className={classes.enterButton} variant=\"contained\" autoFocus component={Link} to={`/tournament/${this.props.tournamentInfo.id}`}>\n                        Enter Tournament\n                      </Button>\n                    </DialogActions>\n                  ) : (\n                    <DialogActions>\n                      <Button className={classes.cancelButton} autoFocus variant=\"outlined\" onClick={this.props.handleModal}>\n                        Cancel\n                      </Button>\n                      <Button className={classes.signUpButton} onClick={() => this.handleSignUp()} color=\"primary\" autoFocus>\n                        Sign Up\n                      </Button>\n                    </DialogActions>\n                  )}\n                </Grid>\n              </Grid>\n            </Dialog>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles, {withTheme: true})(TournamentModal);\n","import React from 'react';\nimport Countdown from './Countdown';\nimport { Link } from \"react-router-dom\";\n// MATERIAL UI \nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  console.log(stabilizedThis)\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'name', numeric: false, disablePadding: false, label: 'Tournament Name' },\n  { id: 'entryFee', numeric: true, disablePadding: false, label: 'Entry Fee' },\n  { id: 'entries', numeric: true, disablePadding: false, label: 'Entries'},\n  { id: 'totalPrize', numeric: true, disablePadding: false, label: 'Total Prize' },\n  { id: 'start', numeric: true, disablePadding: false, label: 'Start' },\n  { id: 'end', numeric: true, disablePadding: false, label: 'End' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            style={{fontWeight: \"bold\"}}\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  toolbar: {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.dark\n  },\n  title: {\n    fontWeight: 'bold',\n    flexGrow: 1,\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar className={classes.toolbar}>\n      <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n        LOBBY\n      </Typography>\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary\n  },\n  row: {\n    color: theme.palette.primary.dark,\n    fontWeight: 'bold'\n  },\n  tablePagination: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  }\n}));\n\nconst LobbyTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('start');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.tournamentsArr.map(tournament => {\n      return {\n        tournament: tournament,\n        name: tournament.name,\n        entryFee: tournament.entryFee,\n        entryLimit: tournament.entryLimit,\n        entries: tournament.entries.length,\n        totalPrize: tournament.entryFee * tournament.entries.length,\n        start: tournament.startTime,\n        end: tournament.endTime\n      }\n    })\n  }\n  console.log(props)\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar tableHeader={props.tableHeader} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                   \n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                      onClick={() => props.handleClickTournamentRow(row.tournament)}\n                    >\n                      <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                        {row.name}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.entryFee}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.entries} / {row.entryLimit}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">{row.totalPrize}</TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown className={classes.row} countDownEnd={new Date(row.start).getTime()} overMsg={\"Started!\"}/>\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        <Countdown className={classes.row} countDownEnd={new Date(row.end).getTime()} overMsg={\"Ended!\"}/>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default LobbyTable;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { getTournaments } from \"../redux/actions/tournament.actions\";\nimport { createEntry } from \"../redux/actions/entry.actions\";\nimport { loginWithToken } from \"../redux/actions/auth.actions\";\nimport Countdown from \"../components/Countdown\";\nimport { Link } from \"react-router-dom\";\nimport TournamentModal from \"../components/TournamentModal\";\nimport LobbyTable from '../components/LobbyTable';\n// MATERIAL UI \nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = (theme) => ({\n  mainContainer: {\n    padding: 100\n  }, \n  table: {\n    backgroundColor: theme.palette.text.secondary,\n    minWidth: 650,\n  },\n  createButton: {\n    marginBottom: 20\n  },\n  tableHead: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  tableCellHeader: {\n    color: theme.palette.text.secondary\n  },\n  tableCell: {\n    color: theme.palette.primary.dark\n  },\n  row: {\n    textDecoration: 'none'\n  }\n});\n\nclass Lobby extends React.Component {\n  \n  state = {\n    tableHeader: \"LOBBY\",\n    modalOpen: false,\n    entered: false,\n    tournamentClickedInfo: {}\n  }\n\n  componentDidMount() {\n    this.props.getTournaments();\n    \n  }\n\n  handleEnter = async (tournamentId) => {\n    await this.props.createEntry(tournamentId, localStorage.token)\n    await this.props.getTournaments()\n    await this.props.loginWithToken(localStorage.token)\n    const updatedTournament = this.props.tournamentsArr.find(t => t.id === this.state.tournamentClickedInfo.id);\n    console.log(\"updated\", updatedTournament);\n    this.handleClickTournamentRow(updatedTournament);\n  }\n\n  handleClickTournamentRow = (tournamentInfo) => {\n    let entered = false;\n    tournamentInfo.entries.forEach(entry => {\n      this.props.currentUser.entries.forEach(userEntry => {\n        if (entry._id === userEntry) {\n          entered = true\n        }\n      });\n    });\n    this.setState({\n      tournamentClickedInfo: tournamentInfo,\n      entered: entered,\n      modalOpen: true\n    })\n  }\n\n  handleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.mainContainer}>\n        <TournamentModal\n          entered={this.state.entered}\n          handleModal={this.handleModal}\n          open={this.state.modalOpen}\n          tournamentInfo={this.state.tournamentClickedInfo}\n          handleEnter={this.handleEnter}\n          currentUser={this.props.currentUser}\n        />\n        <LobbyTable \n          tableHeader={this.props.mainTableHeader}\n          tournamentsArr={this.props.tournamentsArr}\n          handleClickTournamentRow={this.handleClickTournamentRow}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  tournamentsArr: state.tournament.tournamentsArr,\n  entryData: state.entry,\n  currentUser: state.auth.currentUser\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTournaments, createEntry, loginWithToken }\n)(withStyles(useStyles, {withTheme: true})(Lobby))\n","export const FETCH_ENTRY_INFORMATION_BEGIN = \"FETCH_ENTRY_INFORMATION_BEGIN\";\nexport const FETCH_ENTRY_INFORMATION_SUCCESS = \"FETCH_ENTRY_INFORMATION_SUCCESS\";\nexport const FETCH_ENTRY_INFORMATION_FAILURE = \"FETCH_ENTRY_INFORMATION_FAILURE\";\n\nconst fetchEntryInfoBegin = () => ({\n  type: FETCH_ENTRY_INFORMATION_BEGIN \n});\n\nconst fetchEntryInfoSuccess = entryInfo => ({\n  type: FETCH_ENTRY_INFORMATION_SUCCESS,\n  payload: { entryInfo }\n});\n\nconst fetchEntryInfoFailure = err => ({\n  type: FETCH_ENTRY_INFORMATION_FAILURE,\n  payload: { err }\n});\n\nexport const getEntryByUsernameAndTournamentName = (userId, tournamentId) => {\n  return dispatch => {\n    dispatch(fetchEntryInfoBegin());\n    return fetch(`http://localhost:3000/api/entries/${userId}/${tournamentId}`)\n    .then(res => res.json())\n    .then(entryInfo => {\n      console.log(entryInfo)\n      dispatch(fetchEntryInfoSuccess(entryInfo));\n      return entryInfo;\n    })\n   .catch(err => {\n     dispatch(fetchEntryInfoFailure(err))\n    });\n  };\n};\n\n// export const getEntrants = (credentials, signInOrUp) => {\n  // return dispatch => {\n    // dispatch(fetchUserInfoBegin());\n    // return fetch(`http://localhost:3000/api/auth/${signInOrUp}`, {\n      // method: \"POST\",\n      // headers: {\n        // \"Content-Type\": \"application/json\"\n      // },\n      // body: JSON.stringify({\n        // ...credentials\n      // })\n    // })\n    // .then(res => res.json())\n    // .then(userInfo => {\n      // dispatch(fetchUserInfoSuccess(userInfo))\n      // console.log(userInfo)\n      // localStorage.token = userInfo.accessToken\n      // return userInfo\n    // })\n    // .catch(err => dispatch(fetchUserInfoFailure(err)));\n  // };\n// };\n\nexport const CREATE_ENTRY_BEGIN = \"CREATE_ENTRY_BEGIN\";\nexport const CREATE_ENTRY_SUCCESS = \"CREATE_ENTRY_SUCCESS\";\nexport const CREATE_ENTRY_FAILURE = \"CREATE_ENTRY_FAILURE\";\n\nconst createEntryBegin = () => ({\n  type: CREATE_ENTRY_BEGIN\n});\n\nconst createEntrySuccess = entryInfo => ({\n  type: CREATE_ENTRY_SUCCESS,\n  payload: { entryInfo }\n});\n\nconst createEntryFailure = err => ({\n  type: CREATE_ENTRY_FAILURE,\n  payload: { err }\n});\n\nexport const createEntry = (tournamentId, token) => {\n  return dispatch => {\n    dispatch(createEntryBegin());\n    return fetch(\"http://localhost:3000/api/entries\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token\n      },\n      body: JSON.stringify({\n        tournamentId: tournamentId\n      })\n    })\n    .then(res => res.json())\n    .then(entryInfo => {\n      dispatch(createEntrySuccess(entryInfo))\n      return entryInfo;\n    })\n    .catch(err => {\n      console.log(err.body)\n      dispatch(createEntryFailure(err))\n    });\n  };\n};\n\nexport const FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN = \"FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN\";\nexport const FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS = \"FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS\";\nexport const FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE = \"FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE\";\n\nconst fetchEntriesByTournamentIdBegin = () => ({\n  type: FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN \n});\n\nconst fetchEntriesByTournamentIdSuccess = entriesArr => ({\n  type: FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS,\n  payload: { entriesArr }\n});\n\nconst fetchEntriesByTournamentIdFailure = error => ({\n  type: FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE,\n  payload: { error }\n});\n\nexport const getEntriesByTournamentId = (tournamentId) => dispatch => {\n  dispatch(fetchEntriesByTournamentIdBegin())\n  return fetch(`http://localhost:3000/api/entries/tournament/${tournamentId}`)\n    .then(res => res.json())\n    .then(entriesArr => {\n      dispatch(fetchEntriesByTournamentIdSuccess(entriesArr))\n    })\n    .catch(error => dispatch(fetchEntriesByTournamentIdFailure(error)));\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { auth } from \"../redux/actions/auth.actions\";\n// MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Stonk Kings\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = (theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.pexels.com/photos/189528/pexels-photo-189528.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  mainContainer: {\n    backgroundColor: theme.palette.primary.main\n  },\n  paper: {\n     margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    backgroundColor: theme.palette.primary.dark,\n    margin: theme.spacing(3, 0, 2),\n  },\n  input: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: `${theme.palette.text.primary} !important`,\n    }\n  },\n  cssOutlinedInput: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: `${theme.palette.text.primary} !important`,\n    }\n  },\n  cssLabel: {\n    color: 'white'\n  },\n  cssFocused: {\n    color: 'white'\n  },\n  notchedOutline: {\n    borderWidth: '1px',\n    borderColor: `${theme.palette.primary.dark} !important`\n  },\n\n});\n\nclass Login extends React.Component {\n  state = {\n    signIn: true\n  }\n\n  setSignIn = (bool) => {\n    this.setState({signIn: bool})\n  }\n\n  handleField = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value \n    })\n  }\n  \n  handleLogin = async () => {\n    await this.props.auth({username: this.state.username, password: this.state.password}, \"signIn\")\n    this.props.logIn();\n    this.props.history.push('/lobby')\n  }\n\n  handleSignUp = async () => {\n    await this.props.auth({username: this.state.username, password: this.state.password, email: this.state.email}, \"signUp\")\n    this.props.logIn()\n    this.props.history.push('/lobby')\n  }\n   \n  render() {\n  const { classes } = this.props;\n  console.log(this.props)\n\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square className={classes.mainContainer}>\n          <div className={classes.paper}>\n            <Typography style={{marginBottom: 100, fontWeight: 'bold'}} component=\"h3\" variant=\"h1\">\n              Stonk Kings!\n            </Typography>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <form className={classes.form} noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                onChange={this.handleField}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {!this.state.signIn ? (\n                <TextField\n                  onChange={this.handleField}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  \n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                    },\n                  }}\n                />\n              ) : null}\n              <TextField\n                onChange={this.handleField}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            \n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"secondary\" />}\n                label=\"Remember me\"\n              />\n              {this.state.signIn ? (\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={() => this.handleLogin()}\n                >\n                  Sign In\n                </Button>\n\n              ) : (\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={() => this.handleSignUp()}\n                >\n                  Sign up \n                </Button>\n              )}\n              <Grid container>\n                <Grid item>\n                  {this.state.signIn ? (\n                    <Link onClick={() => this.setSignIn(false)} style={{color: 'white'}} variant=\"body2\">\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  ) : (\n                    <Link onClick={() => this.setSignIn(true)} style={{color: 'white'}} variant=\"body2\">\n                      {\"Already have an account? Sign in\"}\n                    </Link>\n                  )}\n                </Grid>\n              </Grid>\n              <Box mt={5}>\n                <Copyright />\n              </Box>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n\n  }\n}\n\n\n\nexport default connect(\n  null,\n  {auth}\n)(withStyles(useStyles, {withTheme: true})(Login))\n    ","export const CREATE_TRADE_BEGIN = \"CREATE_TRADE_BEGIN\";\nexport const CREATE_TRADE_SUCCESS = \"CREATE_TRADE_SUCCESS\";\nexport const CREATE_TRADE_FAILURE = \"CREATE_TRADE_FAILURE\";\n\nconst createTradeBegin = () => ({\n  type: CREATE_TRADE_BEGIN \n});\n\nconst createTradeSuccess = tradeInfo => ({\n  type: CREATE_TRADE_SUCCESS,\n  payload: { tradeInfo }\n});\n\nconst createTradeFailure = err => ({\n  type: CREATE_TRADE_FAILURE,\n  payload: { err }\n});\n\nexport const createTrade = (tradeObj, token) => {\n  return dispatch => {\n    console.log(\"tradeObj\", tradeObj)\n    dispatch(createTradeBegin());\n    return fetch(\"http://localhost:3000/api/trades\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token\n      },\n      body: JSON.stringify({\n        entryId: tradeObj.entryId,\n        stockTicker: tradeObj.stockTicker,\n        time: tradeObj.time,\n        buyOrSell: tradeObj.buyOrSell,\n        price: tradeObj.price,\n        amountOfShares: tradeObj.amountOfShares\n      })\n    })\n    .then(res => res.json())\n    .then(tradeInfo => {\n      dispatch(createTradeSuccess(tradeInfo))\n      return tradeInfo;\n    })\n    .catch(err => dispatch(createTradeFailure(err)));\n  };\n};\n\nexport const FETCH_TRADES_BY_ENTRY_BEGIN = \"FETCH_TRADES_BY_ENTRY_BEGIN\";\nexport const FETCH_TRADES_BY_ENTRY_SUCCESS = \"FETCH_TRADES_BY_ENTRY_SUCCESS\";\nexport const FETCH_TRADES_BY_ENTRY_FAILURE = \"FETCH_TRADES_BY_ENTRY_FAILURE\";\n\nconst fetchTradesByEntryBegin = () => ({\n  type: FETCH_TRADES_BY_ENTRY_BEGIN \n});\n\nconst fetchTradesByEntrySuccess = tradesByEntry => ({\n  type: FETCH_TRADES_BY_ENTRY_SUCCESS,\n  payload: { tradesByEntry }\n});\n\nconst fetchTradesByEntryFailure = err => ({\n  type: FETCH_TRADES_BY_ENTRY_FAILURE,\n  payload: { err }\n});\n\nexport const getTradesByEntryId = (entryId) => dispatch => {\n  dispatch(fetchTradesByEntryBegin())\n  return fetch(`http://localhost:3000/api/trades/${entryId}`)\n    .then(res => res.json())\n    .then(tradesByEntry => {\n      dispatch(fetchTradesByEntrySuccess(tradesByEntry))\n    })\n    .catch(err => dispatch(fetchTradesByEntryFailure(err)));\n};\n  \n\n","import React from \"react\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  },\n  paper: {\n    backgroundColor: theme.palette.primary.main\n  },\n  popper: {\n    backgroundColor: theme.palette.primary.main\n  },\n  input: {\n    backgroundColor: theme.palette.primary.main\n  },\n  inputFocused: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  groupLabel: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary\n  },\n  option: {\n    backgroundColor: theme.palette.primary.main\n  },\n\n  inputRoot: {\n    backgroundColor: theme.palette.primary.main,\n    \"&.MuiFormLabel-root.Mui-focused\": {\n      color: theme.palette.text.secondary\n    }\n  }\n}));\n\nconst SearchBar = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleInputChange = (e, value) => {\n    fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${value}&apikey=3VP9375JIOYD1569`)\n      .then(res => res.json())\n      .then(results => {\n        console.log(results.bestMatches)\n        setOptions(results.bestMatches || []);\n        console.log(options)\n      })\n    console.log(e.currentTarget.value)\n  }\n\n  const handleSelected = (e, val) => {\n    console.log(val)\n    if (val !== null) {\n      props.handleSearchSubmit(val[\"1. symbol\"]);\n    }\n  }\n\n  return (\n    <Autocomplete\n      classes={classes}\n      id=\"asynchronous-demo\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option[\"2. name\"]}\n      options={options}\n      loading={loading}\n      onInputChange={handleInputChange}\n      onChange={handleSelected}\n      ListboxProps={{\n        className: classes.listBox\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Search stocks...\"\n          variant=\"outlined\"\n          name=\"search\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nexport default SearchBar;\n\n\n\n","import React from \"react\";\nimport { ResponsiveLine } from '@nivo/line';\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  stockInfo: {\n    display: 'inline-block'\n  }\n}));\n\n// re renders with intraday format and daily data... \nconst Chart = (props) => {\n  const theme = {\n  axis: {\n    textColor: '#eee',\n    fontSize: '20px',\n    tickColor: '#eee',\n  },\n  grid: {\n    stroke: 'black',\n    strokeWidth: 1\n  },\n};\n  const classes = useStyles(); \n  return (\n    <div style={{height: 400}}>\n      <ResponsiveLine\n        theme={{\n          grid: {\n            line: {\n              stroke: \"grey\"\n            }\n          },\n          axis: {\n            ticks: {\n              text: {\n                fill: \"white\"\n              }\n            },\n            legend: {\n              text: {\n                fill: \"white\"\n              }\n            }\n          },\n          crosshair: {\n            line: {\n              stroke: \"white\"\n            }\n          }\n          \n        }}\n        data={props.data}\n        margin={{ top: 50, right: 50, bottom: 50, left: 60}}\n        xScale={{\n          type: \"time\",\n          format: props.xScaleFormat,\n          precision: \"minute\"\n        }}\n        xFormat={props.xFormat}\n        yScale={{\n          type: \"linear\",\n          min: \"auto\",\n          max: \"auto\",\n          stacked: false,\n          reverse: false\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisLeft={{\n          orient: \"left\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: \"price\",\n          legendOffset: -40,\n          legendPosition: \"middle\"\n        }}\n        axisBottom={{\n          format: \"%b %d\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          orient: \"bottom\",\n          legendPosition: \"middle\",\n          legend: \"date\",\n          legendOffset: 36\n        }}\n        colors={[\"#64dd17\"]}\n        pointSize={10}\n        pointColor={{ theme: \"background\" }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: \"serieColor\" }}\n        pointLabel=\"y\"\n        pointLabelYOffset={-12}\n        useMesh={true}\n      />\n    </div> \n  )\n}\n\nexport default Chart;","import React from 'react';\nimport Countdown from '../components/Countdown';\nimport { Link } from 'react-router-dom';\n// MATERIAL UI  \nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogContainer: {\n    backgroundColor: theme.palette.primary.light,\n  },\n  dialogHeader: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  dialogTitle: {\n    fontWeight: 'bold',\n    fontSize: 30,\n  },\n  dialogContent: {\n    color: theme.palette.primary.dark,\n    fontSize: 20,\n    fontWeight: 'bold',\n    border: 1,\n    borderColor: theme.palette.primary.dark\n  }, \n  textFieldContainer: {\n    paddingLeft: 20\n  },\n  sharesField: {\n    width: \"60%\",\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 5\n  },\n  sharesFieldInput: {\n    padding: 10,\n    paddingLeft: 20,\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  button: {\n    borderColor: theme.palette.text.primary,\n  }\n}));\n\nconst TradeModal = (props) => {\n  const classes = useStyles();\n\n  // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const calculateResultingBalance = (buyOrSell, currentBalance, amountOfShares, price) => {\n      if (buyOrSell === \"buy\") {\n        return (Math.round(currentBalance - (price * amountOfShares) ) * 100 / 100).toFixed(2);\n      } else {\n        return (Math.round(currentBalance + (price * amountOfShares) ) * 100 / 100).toFixed(2);\n      }\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleModal}\n        style={{opacity: 10}}\n      >\n        <Grid className={classes.dialogContainer} container>\n          <Grid item container xs={12} className={classes.dialogHeader}>\n            <Grid item xs={6}>\n              {props.buyOrSell === \"buy\" ? (\n\n                <DialogTitle className={classes.dialogTitle} id=\"simple-dialog-title\">Buy Transaction</DialogTitle>\n              ) : (\n\n                <DialogTitle style={{color: \"red\"}} className={classes.dialogTitle} id=\"simple-dialog-title\">Sell Transaction</DialogTitle>\n              )}\n            </Grid>\n            <Grid container item alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\" xs={6}>\n              <DialogTitle className={classes.dialogTitle} id=\"simple-dialog-title\">{props.stockTicker}</DialogTitle>\n            </Grid>\n          </Grid>\n          <Grid item xs={6}>\n            <DialogContent >\n              <DialogContentText className={classes.dialogContent}>\n                Price:\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                Amount of shares:\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                Total value:\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                Resulting Balance:\n              </DialogContentText>\n            </DialogContent>\n          </Grid>\n          <Grid item xs={6}>\n            <DialogContent>\n              <DialogContentText className={classes.dialogContent}>\n                {props.price}\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                {props.amountOfShares}\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                {(Math.round(props.amountOfShares * props.price * 100) / 100).toFixed(2)}\n              </DialogContentText>\n              <DialogContentText className={classes.dialogContent}>\n                {calculateResultingBalance(props.buyOrSell, props.currentEntry.tournamentBalance, props.amountOfShares, props.price)}\n              </DialogContentText>\n            </DialogContent>\n          </Grid>\n          <Grid item xs={12} className={classes.textFieldContainer}>\n            <TextField \n              defaultValue={1}\n              className={classes.sharesField}\n              onChange={props.handleShareField}\n              inputProps={{\n                className: classes.sharesFieldInput\n              }}\n              name=\"shareAmountField\"\n              type=\"number\" \n              id=\"standard-basic\" \n              label=\"Amount of shares\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <DialogActions>\n              <Button onClick={props.handleModal} className={classes.button} variant=\"outlined\" autoFocus color=\"inherit\" >\n                Cancel\n              </Button>\n              <Button onClick={props.handleTrade} className={classes.button} variant=\"outlined\" color=\"inherit\" autoFocus>\n                Confirm\n              </Button>\n            </DialogActions>\n          </Grid>\n        </Grid>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default TradeModal;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { withStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = (theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n});\n\n// put open state in parent component,\n//  when trade is created handle open in handle trade function,\n// pass results of created trade to be displayed in snasckbar\n\nclass SnackBarDisplay extends React.Component {\n\n  state = {\n    open: false\n  }\n\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Snackbar\n          open={this.props.open} \n          autoHideDuration={6000} \n          onClose={this.props.handleClose}\n          anchorOrigin={{\n            horizontal: 'right',\n            vertical: 'bottom'\n          }}\n        >\n          {this.props.error === true ? (\n            <Alert \n              onClose={this.props.handleClose}\n              severity=\"error\"\n            >\n              {this.props.message}\n            </Alert>\n          ) : (\n            <Alert \n              onClose={this.props.handleClose}\n              severity=\"success\"\n            >\n              {this.props.message}\n            </Alert>\n          )}\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles, {withTheme: true})(SnackBarDisplay);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TradeModal from \"../components/TradeModal\";\nimport SnackBarDisplay from \"../components/SnackBarDisplay\";\nimport { connect } from \"react-redux\";\nimport { createTrade, getTradesByEntryId } from \"../redux/actions/trade.actions\";\n// MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = (theme) => ({\n  buyButton: {\n    width: \"30%\",\n    padding: 8,\n    marginRight: 10,\n    backgroundColor: theme.palette.text.primary,\n    borderColor: theme.palette.text.primary,\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  sellButton: {\n    width: \"30%\",\n    padding: 8,\n    marginRight: 10,\n    backgroundColor: \"red\",\n    borderColor: \"red\",\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      color: 'red',\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  sharesField: {\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 5\n  },\n  sharesFieldInput: {\n    fontSize: 30\n  }\n});\n\nclass TradeBar extends React.Component {\n\n  state = {\n    shareAmountField: 1,\n    openModal: false,\n    openSnackBar: false\n  }\n  \n  handleShareField = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleModal = (e) => {\n    this.setState({\n      openModal: !this.state.openModal,\n      buyOrSell: e.currentTarget.name,\n      shareAmountField: 1\n    });\n  }\n\n  handleCloseSnackBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({\n      openSnackBar: false\n    });\n  };\n\n  handleClickSnackBar = () => {\n    this.setState({\n      openSnackBar: true\n    });\n  };\n\n  handleTrade = async (e) => {\n    console.log(e.currentTarget.name)\n    await this.props.createTrade({\n      entryId: this.props.entryId,\n      stockTicker: this.props.stockTicker,\n      time: new Date(),\n      buyOrSell: this.state.buyOrSell,\n      price: this.props.currentPrice,\n      amountOfShares: parseInt(this.state.shareAmountField)\n    }, localStorage.token)\n    await this.props.getTradesByEntryId(this.props.entryId)\n    await this.props.getCurrentEntry();\n    this.handleModal(e);\n    this.handleClickSnackBar();\n  }\n\n  render() {\n    const { classes } = this.props\n    let snackbarmessage = \"\";\n    let snackbarErr = false;\n    if (this.props.createdTrade !== []) {\n      if (this.props.createdTrade.message) {\n        snackbarmessage = this.props.createdTrade.message\n        snackbarErr = true;\n      } else {\n        let buyOrSell = this.props.createdTrade.buyOrSell === 'buy' ? \"purchased\" : \"sold\";\n        snackbarmessage = `You ${buyOrSell} ${this.props.createdTrade.amountOfShares} share(s) of ${this.props.createdTrade.stockTicker} @ $${this.props.createdTrade.price}!`\n      }\n    }\n    return (\n      <div>\n        <Button onClick={this.handleModal} size=\"large\" name=\"buy\" variant=\"outlined\" className={classes.buyButton}>BUY</Button>\n        <Button onClick={this.handleModal} size=\"large\" name=\"sell\" variant=\"outlined\" className={classes.sellButton}>SELL</Button>\n        <TradeModal\n          handleShareField={this.handleShareField}\n\n          handleTrade={this.handleTrade}\n          handleModal={this.handleModal}\n          price={this.props.currentPrice}\n          stockTicker={this.props.stockTicker}\n          amountOfShares={parseInt(this.state.shareAmountField)}\n          buyOrSell={this.state.buyOrSell}\n          open={this.state.openModal}\n          currentEntry={this.props.currentEntry}\n        />\n        <SnackBarDisplay \n          handleClose={this.handleCloseSnackBar}\n          open={this.state.openSnackBar}\n          message={snackbarmessage}\n          error={snackbarErr}\n        />\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { createTrade, getTradesByEntryId }\n)(withStyles(useStyles, {withTheme: true})(TradeBar));","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass LatestPrice extends React.Component {\n\n  componentDidMount() {\n    const intervalId = setInterval(this.fetchPrice, 1000)\n    this.setState({ intervalId: intervalId });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  fetchPrice = () => {\n    console.log(this.props.searchString)\n    fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${this.props.searchString}&apikey=3VP9375JIOYD1569`)\n      .then(res => res.json())\n      .then(priceData => {\n        console.log(priceData)\n        this.props.setPrice(priceData[\"Global Quote\"][\"05. price\"])\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h5\">\n          Current Price\n        </Typography>\n        <Typography variant=\"h6\">\n          ${this.props.currentPrice}\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default LatestPrice;\n            ","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTradesByEntryId } from \"../redux/actions/trade.actions\";\n// MATERIAL UI  \nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'ticker', numeric: false, disablePadding: false, label: 'Ticker Symbol' },\n  { id: 'averagePrice', numeric: false, disablePadding: false, label: 'Average Price' },\n  { id: 'netShares', numeric: false, disablePadding: false, label: 'Net Shares' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    width: \"100%\"\n  },\n  row: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark\n  }\n}));\n\nconst MyPositions = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('entryFee');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  \n\n  let hasPositions = false; \n  const consolidatePositionsArr = () => {\n    const allTickers = props.tradeData.tradesByEntry.map(t => t.stockTicker);\n    const uniqueTickers = allTickers.filter((val, index, self) => self.indexOf(val) === index);\n    const positions = uniqueTickers.map(ticker => {\n      const position = {\n        ticker: ticker,\n        netShares: 0,\n        averagePrice: 0\n      }\n      let sharePriceXNumOfSharesSum = 0; \n      let totalShares = 0;\n      props.tradeData.tradesByEntry.forEach(trade => {\n        if (trade.stockTicker === ticker) {\n\n          if (trade.buyOrSell === \"buy\") {\n            sharePriceXNumOfSharesSum += (trade.amountOfShares * trade.price);\n            totalShares += trade.amountOfShares\n\n            position.netShares = position.netShares + trade.amountOfShares\n          } else {\n            position.netShares = position.netShares - trade.amountOfShares\n          }\n        }\n      });\n      position.averagePrice = sharePriceXNumOfSharesSum / totalShares\n      if (position.netShares > 0) {\n        hasPositions = true\n      }\n      return position;\n    })\n\n    return positions\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return consolidatePositionsArr().filter(position => {\n      if (position.netShares > 0) {\n        return {\n          ticker: position.ticker,\n          netShares: position.netShares,\n          averagePrice: (Math.round(position.averagePrice * 100) / 100).toFixed(2)\n        }\n      }\n    })\n  }\n\n  const rows = formatRows();\n  return (\n    <div>\n      {hasPositions ? (\n        <div className={classes.root}>\n          <Paper className={classes.paper}>\n            <TableContainer>\n              <Table\n                className={classes.table}\n                aria-labelledby=\"tableTitle\"\n                aria-label=\"enhanced table\"\n              >\n                <EnhancedTableHead\n                  classes={classes}\n                  order={order}\n                  orderBy={orderBy}\n                  onRequestSort={handleRequestSort}\n                  rowCount={rows.length}\n                />\n                <TableBody>\n                  {stableSort(rows, getComparator(order, orderBy))\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                      return (\n                        <TableRow\n                          hover\n                          role=\"checkbox\"\n                          tabIndex={-1}\n                          key={index}\n                        >\n                          <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                            {row.ticker}\n                          </TableCell>\n                          <TableCell className={classes.row} align=\"left\">{row.averagePrice.toFixed(2)}</TableCell>\n                          <TableCell className={classes.row} align=\"left\">{row.netShares}</TableCell>\n                        </TableRow>\n                      );\n                    })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              className={classes.tablePagination}\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>\n\n        </div>\n\n      ) : null}\n\n    </div>\n  );\n}\n\nexport default MyPositions;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// Material UI \nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    textDecoration: 'none',\n    marginRight: 30\n  },\n});\n\nclass TournamentBar extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"secondary\">\n          <Toolbar>\n            <Typography onClick={() => this.props.setView(\"buy/sell\")} variant=\"h6\" color=\"inherit\" className={classes.title}>\n              Buy/Sell\n            </Typography>\n            <Typography onClick={() => this.props.setView(\"tradeHistory\")} variant=\"h6\" color=\"inherit\" className={classes.title}>\n              Trade History\n            </Typography>\n            <Typography onClick={() => this.props.setView(\"allEntrants\")} variant=\"h6\" color=\"inherit\" style={{flexGrow: 1}} className={classes.title}>\n              All Entrants\n            </Typography>\n            {this.props.currentEntry && !this.props.currentEntry.message ? (\n              <Typography component={Link} to={\"/\"} variant=\"h6\" color=\"inherit\"  className={classes.title}>\n                Tournament Balance: {this.props.currentEntry.tournamentBalance.toFixed(2)}\n              </Typography>\n            ) : (\n              null\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentEntry: state.entry.currentEntry,\n  currentUser: state.auth.currentUser\n})\n\nexport default connect(\n  mapStateToProps\n)(withStyles(useStyles, {withTheme: true})(TournamentBar));","import React from \"react\";\n// MATERIAL UI  \nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'ticker', numeric: false, disablePadding: false, label: 'Ticker Symbol' },\n  { id: 'timeTraded', numeric: false, disablePadding: false, label: 'Time of Trade' },\n  { id: 'buyOrSell', numeric: false, disablePadding: false, label: 'Transaction Type' },\n  { id: 'numOfShares', numeric: true, disablePadding: false, label: '# of Shares' },\n  { id: 'price', numeric: true, disablePadding: false, label: 'Price' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    width: \"100%\"\n  },\n  row: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark\n  }\n}));\n\nconst TradeHistoryTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('timeTraded');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatDate = (date) => {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    let strTime = hours + ':' + minutes + ' ' + ampm;\n    return (date.getMonth()+1) + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \"  \" + strTime;\n  }\n\n  const formatRows = () => {\n    return props.data.map(trade => {\n      const formattedDate = formatDate(new Date(trade.time));\n      return {\n        ticker: trade.stockTicker,\n        timeTraded: formattedDate,\n        buyOrSell: trade.buyOrSell,\n        amountOfShares: parseFloat(trade.amountOfShares),\n        price: trade.price \n      }\n    })\n  }\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                    >\n                      <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                        {row.ticker}\n                      </TableCell>\n                      <TableCell className={classes.row}>\n                        {row.timeTraded}\n                      </TableCell>\n                      {row.buyOrSell === \"buy\" ? (\n                        <TableCell style={{color: \"green\"}} className={classes.row}>\n                          Bought\n                        </TableCell>\n                      ) : (\n                        <TableCell style={{color: 'red'}} className={classes.row}>\n                          Sold\n                        </TableCell>\n                      )}\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.amountOfShares}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.price}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n    </div>\n  );\n}\n\nexport default TradeHistoryTable;","import React from \"react\";\n// MATERIAL UI  \nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport Typography from '@material-ui/core/Typography';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Avatar from '@material-ui/core/Avatar';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst  headCells = [\n  { id: 'username', numeric: false, disablePadding: false, label: 'Username' },\n  { id: '#OfTrades', numeric: true, disablePadding: false, label: 'Total Trades' },\n  { id: 'tournamentBalance', numeric: true, disablePadding: false, label: 'Tournament Balance' }\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={classes.tableHead}>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    width: \"100%\"\n  },\n  row: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  tablePagination: {\n    color: theme.palette.primary.dark\n  }\n}));\n\nconst AllEntrantsTable = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('tournamentBalance');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const formatRows = () => {\n    return props.data.map(entry=> {\n      return {\n        username: entry.user.username,\n        tournamentBalance: (Math.round(entry.tournamentBalance * 100) / 100).toFixed(2),\n        numOfTrades: entry.trades.length,\n        avatar: entry.user.avatar\n      }\n    })\n  }\n\n  const rows = formatRows();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={index}\n                    >\n                      <TableCell className={classes.row} component=\"th\" scope=\"row\" >\n                        <Grid container alignItems=\"flex-start\" direction=\"row\">\n                          <Avatar src={row.avatar} />\n                          <Typography variant=\"h5\" style={{marginTop: 10, paddingLeft: 10}}>\n                            {row.username}\n                          </Typography>\n                        </Grid>\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.numOfTrades}\n                      </TableCell>\n                      <TableCell className={classes.row} align=\"right\">\n                        {row.tournamentBalance}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          className={classes.tablePagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n    </div>\n  );\n}\n\nexport default AllEntrantsTable;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getEntryByUsernameAndTournamentName } from \"../redux/actions/entry.actions\";\nimport { getTradesByEntryId } from \"../redux/actions/trade.actions\";\nimport { getEntriesByTournamentId } from \"../redux/actions/entry.actions\"\n\n// COMPONENTS\nimport SearchBar from \"../components/SearchBar\";\nimport Chart from \"../components/Chart\";\nimport TradeBar from \"../components/TradeBar\";\nimport LatestPrice from \"../components/LatestPrice\";\nimport MyPositions from \"../components/MyPositions\";\nimport TournamentBar from \"../components/TournamentBar\";\nimport TradeHistoryTable from \"../components/TradeHistoryTable\";\nimport AllEntrantsTable from \"../components/AllEntrantsTable\";\n\n// MATERIAL UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = (theme) => ({\n  searchBar: {\n    backgroundColor: theme.palette.primary.main,\n    width: '100%',\n    marginTop: 30,\n    marginBottom: 30\n  },\n  chartContainer: {\n    backgroundColor: theme.palette.primary.dark,\n    borderRadius: 5\n  }\n});\n\nclass Tournament extends React.Component {\n\n  state = {\n    modalOpen: false,\n    error: null,\n    stockData: [{\n      id: \"IBM\",\n      data: [{\n        x: \"2020-06-01\",\n        y: 1\n      }]\n    }],\n    stockInfo: {\n      symbol: \"IBM\"\n    },\n    currentSearch: \"IBM\",\n    timeFunction: \"TIME_SERIES_DAILY\",\n    intradayInterval: \"1min\",\n    currentPrice: \"loading\",\n    currentView: \"buy/sell\",\n    xScaleFormat: \"%Y-%m-%d\",\n    xFormat: \"time:%Y-%m-%d\"\n  }\n\n  componentDidMount() {\n    this.getPriceData(\"IBM\", \"TIME_SERIES_DAILY\");\n    this.props.getEntriesByTournamentId(this.props.match.params.id)\n    if (localStorage.userId) {\n      this.handleGetCurrentEntry();\n    }\n\n  }\n\n  getPriceData = (searchString, timeFunction=\"IBM\", intradayInterval=\"\") => {\n    const queryString = this.formatPriceQuery(searchString, timeFunction, intradayInterval)\n    fetch(queryString)\n      .then(res => res.json())\n      .then(data => {\n        if (data[\"Error Message\"]) {\n          this.setState({\n            error: data[\"Error Message\"]\n          })\n          return;\n        }\n        const dataKeys = Object.keys(data)\n        const timeSeriesHash = data[dataKeys[1]] \n        const formattedData = Object.keys(timeSeriesHash).map(key => {\n          return {\n            x: key, \n            y: parseFloat(timeSeriesHash[key][\"4. close\"])\n          };\n        });\n        fetch(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${searchString}&apikey=3VP9375JIOYD1569`)\n          .then(res => res.json())\n          .then(stockInfo => {\n            fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${searchString}&apikey=3VP9375JIOYD1569`)\n              .then(res => res.json())\n              .then(priceData => {\n                let xScaleFormat = \"%Y-%m-%d\"\n                let xFormat = \"time:%Y-%m-%d\"\n                if (intradayInterval !== \"\") {\n                  xScaleFormat = \"%Y-%m-%d %H:%M:%S\";\n                  xFormat = \"time:%Y-%m-%d %H:%M:%S\";\n                }\n                this.setState({\n                  error: null,\n                  stockData: [{\n                    id: searchString,\n                    data: formattedData\n                  }],\n                  stockInfo: {\n                    symbol: stockInfo[\"Symbol\"],\n                    name: stockInfo[\"Name\"],\n                    exchange: stockInfo[\"Exchange\"],\n                    sector: stockInfo[\"Sector\"]\n                  },\n                  currentPrice: priceData[\"Global Quote\"][\"05. price\"],\n                  xFormat: xFormat,\n                  xScaleFormat: xScaleFormat\n                });\n              });\n          });\n      });\n  }\n  \n  handleGetCurrentEntry = async () => {\n    await this.props.getEntryByUsernameAndTournamentName(localStorage.userId, this.props.match.params.id);\n    await this.props.getTradesByEntryId(this.props.currentEntry._id)\n  }\n\n  setPrice = (price) => {\n    this.setState({\n      currentPrice: parseFloat(price)\n    });\n  }\n\n  handleSearchSubmit = (searchString) => {\n    if (searchString !== undefined) {\n      this.setState({\n        currentSearch: searchString\n      })\n      this.getPriceData(searchString, this.state.timeFunction);\n    }\n  }\n\n  handleChangeTimeFunction = (timeFunction, intradayInterval=\"\") => {\n    console.log(\"handle change time\")\n    if (intradayInterval === \"\") {\n      this.getPriceData(this.state.currentSearch, timeFunction);\n    } else {\n      this.getPriceData(this.state.currentSearch, timeFunction, intradayInterval)\n    }\n  }\n\n  formatPriceQuery = (searchString, timeFunction, intradayInterval=\"\") => {\n    if (timeFunction !== \"TIME_SERIES_INTRADAY\") {\n      return `https://www.alphavantage.co/query?function=${timeFunction}&symbol=${searchString}&outputsize=compact&apikey=3VP9375JIOYD1569`\n    } else {\n      return `https://www.alphavantage.co/query?function=${timeFunction}&symbol=${searchString}&interval=${intradayInterval}&apikey=3VP9375JIOYD1569`\n    }\n  }\n  \n  changeView = (view) => {\n    this.setState({\n      currentView: view\n    });\n  }\n  \n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <TournamentBar setView={this.changeView} />\n        {this.state.currentView === \"buy/sell\" ? (\n          <div style={{width: \"95%\", margin: \"auto\"}}>\n            <Grid container>\n              <Grid item className={classes.searchBar}>\n                <SearchBar \n                  handleSearchSubmit={this.handleSearchSubmit} \n                  error={this.state.error} \n                />\n              </Grid>\n              <Grid container >\n                {this.state.stockInfo ? (\n                  <Grid container item justify=\"space-between\" item xs={6}>\n                    <div>\n                      <div style={{display: 'flex'}}>\n                        <Typography variant=\"h5\" className={classes.stockInfo}>\n                          {this.state.stockInfo.name}\n                        </Typography>\n                        <Typography style={{marginLeft: 10}} variant=\"h6\" className={classes.stockInfo}>\n                          {this.state.stockInfo.symbol}\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography>\n                          {this.state.stockInfo.sector}\n                        </Typography>\n                      </div>\n                    </div>\n                  </Grid>\n                ) : null}\n                <Grid container item xs={6} style={{marginTop: 30}} alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\n                  <Button onClick={() => this.handleChangeTimeFunction(\"TIME_SERIES_MONTHLY\")}>\n                    Monthly \n                  </Button>\n                  <Button onClick={() => this.handleChangeTimeFunction(\"TIME_SERIES_WEEKLY\")}>\n                    Weekly\n                  </Button>\n                  <Button onClick={() => this.handleChangeTimeFunction(\"TIME_SERIES_DAILY\")}>\n                    Daily\n                  </Button>\n                  <Button onClick={() => this.handleChangeTimeFunction(\"TIME_SERIES_INTRADAY\", \"60min\")}>\n                    Hourly\n                  </Button>\n                  <Button onClick={() => this.handleChangeTimeFunction(\"TIME_SERIES_INTRADAY\", \"15min\")}>\n                    15 min\n                  </Button>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} className={classes.chartContainer}>\n                <Chart\n                  stockInfo={this.state.stockInfo}\n                  data={this.state.stockData}\n                  xFormat={this.state.xFormat}\n                  xScaleFormat={this.state.xScaleFormat}\n                />\n              </Grid>\n              {this.props.currentEntry && !this.props.currentEntry.message ? (\n                <Grid container item xs={12}>\n                  <Grid item xs={6} style={{marginTop: 10}}>\n                    <TradeBar \n                      getCurrentEntry={this.handleGetCurrentEntry}\n                      createdTrade={this.props.createdTrade}\n                      currentEntry={this.props.currentEntry}\n                      currentPrice={this.state.currentPrice}\n                      stockTicker={this.state.stockInfo.symbol}\n                      entryId={this.props.currentEntry._id || null} \n                    />\n                  </Grid>\n                  <Grid container item alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\" xs={6}>\n                    <LatestPrice \n                      searchString={this.state.stockInfo.symbol}\n                      setPrice={this.setPrice}\n                      currentPrice={this.state.currentPrice}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <MyPositions tradeData={this.props.tradeData} />\n                  </Grid>\n                </Grid>\n              ): (null)}\n            </Grid>\n          </div>\n        ) : null}\n        {this.state.currentView === \"tradeHistory\" ? (\n          <div>\n            <TradeHistoryTable data={this.props.tradeData.tradesByEntry}/>\n          </div>\n        ) : null}\n        {this.state.currentView === \"allEntrants\" ? (\n          <div>\n            <AllEntrantsTable data={this.props.entries} /> \n          </div>\n        ) : null}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentEntry: state.entry.currentEntry,\n  entries: state.entry.tournamentEntries,\n  currentUser: state.auth.currentUser,\n  createdTrade: state.trade.createdTrade,\n  tradeData: state.trade\n});\n\nexport default connect(\n  mapStateToProps,\n  { getEntryByUsernameAndTournamentName, getTradesByEntryId, getEntriesByTournamentId }\n)(withStyles(useStyles, {withTheme: true})(Tournament));\n  \n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// Material UI \nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  nav: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    fontWeight: 'bold',\n    textDecoration: 'none',\n    marginRight: 30\n  },\n  userContainer: {\n    padding: 10,\n    alignContent: \"right\"\n  }, \n  username: {\n    paddingTop: 10\n  },\n  credits: {\n    paddingLeft: 5\n  },\n  loginButton: {\n    backgroundColor: theme.palette.text.primary\n  }\n});\n\nclass NavBar extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.nav}>\n          <Toolbar>\n            <Typography component={Link} to={\"/lobby\"} variant=\"h4\" color=\"textPrimary\" className={classes.title}>\n              STONKKINGS\n            </Typography>\n            <Typography component={Link} to={\"/lobby\"} variant=\"h6\" color=\"textPrimary\" className={classes.title}>\n              Lobby\n            </Typography>\n            <Typography component={Link} to={\"/my-tournaments\"} variant=\"h6\" color=\"textPrimary\" className={classes.title}>\n              My Tournaments\n            </Typography>\n            <Typography component={Link} to={\"/leaderboard\"} variant=\"h6\" color=\"textPrimary\" className={classes.title}>\n              Leaderboard        \n            </Typography>\n            <div style={{flexGrow: 1}}>\n              <Button \n                variant=\"outlined\" \n                color=\"secondary\"\n                component={Link}\n                to={`/create-tournament`}\n              >\n                Create a Tournament\n              </Button>\n\n            </div>\n            {this.props.currentUser && !this.props.currentUser.message ? \n            (\n              <div>\n                <Grid container className={classes.userContainer}>\n                  <Grid item xs={4}>\n                  </Grid>\n                  <Grid item xs={2}>\n                    <Avatar src={this.props.currentUser.avatar}/>\n                  </Grid>\n                  <Grid item xs={3} className={classes.username}>\n                    <Typography style={{fontWeight: 'bold'}} variant=\"h6\" align=\"left\">\n                      {this.props.currentUser.username}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography className={classes.credits} align=\"right\" variant=\"h6\" color=\"textPrimary\">\n                      Stonk Credits: {this.props.currentUser.accountBalance}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </div>\n            ) : (\n              <Button \n                className={classes.loginButton}\n                variant=\"contained\"\n                component={Link}\n                to={\"/login\"} \n              >\n                Login\n              </Button>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.auth.currentUser\n})\n\nexport default connect(\n  mapStateToProps\n)(withStyles(useStyles, {withTheme: true})(NavBar));","import React from 'react';\nimport Countdown from '../components/Countdown';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\n// MATERIAL UI  \nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogBox: {\n    backgroundColor: theme.palette.primary.light,\n    \n  },\n  title: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  textContainer: {\n    display: 'flex'  \n  },\n  text: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.dark\n  },\n  lobbyButton: {\n    width: '100%',\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n   '&:hover': {\n     backgroundColor: theme.palette.text.primary,\n   }\n  },\n  createButton: {\n    backgroundColor: theme.palette.text.primary,\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.text.secondary\n   }\n  },\n  cancelButton: {\n    backgroundColor: theme.palette.primary.main\n  }\n\n}));\n\nconst CreateTournamentModal = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  console.log(props)\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleModal}\n      >\n        <Grid container className={classes.dialogBox}>\n          {!props.createTournamentSuccess ? (\n            <div>\n              <Grid item xs={12} className={classes.title}>\n                <DialogTitle id=\"simple-dialog-title\">Create Tournament</DialogTitle>\n              </Grid>\n              <Grid item container xs={12}>\n                <DialogContent>\n                  <DialogContentText className={classes.text}>\n                    Tournament Name: {props.tournamentName}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    Max Entries: {props.entryLimit}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    Entry Fee: {props.entryFee}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    Start Time: {props.startTime}\n                  </DialogContentText>\n                  <DialogContentText className={classes.text}>\n                    End Time: {props.endTime}\n                  </DialogContentText>\n                </DialogContent>\n              </Grid>\n              <Grid item xs={12}>\n                <DialogActions>\n                  <Button className={classes.cancelButton}variant=\"outlined\" onClick={props.handleModal}>\n                    Cancel\n                  </Button>\n                  <Button className={classes.createButton} variant=\"primary\" onClick={props.createTournament}>\n                    Create\n                  </Button>\n                </DialogActions>\n              </Grid>\n            </div>\n          ) : (\n            <div>\n              <Grid item xs={12} className={classes.title}>\n                <DialogTitle id=\"simple-dialog-title\">Tournament Successfully Created!</DialogTitle>\n              </Grid>\n              <Grid item xs={12}>\n                <DialogActions>\n                  <Button className={classes.lobbyButton} onClick={() => history.push('/lobby')} variant=\"contained\">\n                    Go to lobby!\n                  </Button>\n                </DialogActions>\n              </Grid>\n            </div>\n          )}\n        </Grid>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default CreateTournamentModal;\n","import React from \"react\";\nimport CreateTournamentModal from '../components/CreateTournamentModal';\n// MATERIAL UI\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\n\nconst useStyles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: 10,\n    padding: 20,\n    width: 600,\n    margin: 'auto'\n  },\n  titleContainer: {\n    marginLeft: '22%',\n    marginBottom: 10,\n    \n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  title: {\n    marginRight: 10,\n    color: theme.palette.text.secondary\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    marginTop: 20,\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n    '&:hover': {\n      backgroundColor: theme.palette.text.primary\n    }\n  },\n  cssOutlinedInput: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: `${theme.palette.text.primary} !important`,\n    }\n  },\n  cssLabel: {\n    color: 'white'\n  },\n  cssFocused: {\n  },\n  notchedOutline: {\n    borderWidth: '1px',\n    borderColor: `${theme.palette.primary.dark} !important`\n  },\n});\n\nconst DateAndTimeSelectors = (props) => {\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container>\n        <Grid item xs={6} style={{padding: 5}}>\n          <KeyboardDatePicker\n            style={{width: '100%'}}\n            InputLabelProps={{\n              style: {\n                color: 'white'\n              }\n            }}\n            margin=\"normal\"\n            id={props.dateLabel}\n            label={props.dateLabel}\n            format=\"MM/dd/yyyy\"\n            value={props.dateValue}\n            onChange={(value) => props.handleChangeTime(value, `selectedDateFor${props.name}`)}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n        </Grid>\n        <Grid item xs={6} style={{padding: 5}}>\n          <KeyboardTimePicker\n            style={{width: '100%'}}\n            InputLabelProps={{\n              style: {\n                color: 'white'\n              }\n            }}\n            margin=\"normal\"\n            id={props.timeLabel}\n            label={props.timeLabel}\n            value={props.timeValue}\n            onChange={(value) => props.handleChangeTime(value, `selectedTimeFor${props.name}`)}\n            KeyboardButtonProps={{\n              'aria-label': 'change time',\n            }}\n          />\n        </Grid>\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nclass CreateTournament extends React.Component {\n\n  state = {\n    modalOpen: false,\n    createTournamentLoading: false,\n    createTournamentSuccess: null,\n    tournamentName: \"\",\n    entryLimit: 20,\n    entryFee: 100,\n    selectedDateForStart: new Date(),\n    selectedTimeForStart: new Date(),\n    selectedDateForEnd: new Date(),\n    selectedTimeForEnd: new Date() \n  }\n\n  handleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen,\n      createTournamentSuccess: false\n    });\n  }\n  \n  handleChangeTime = (value, name) => {\n    this.setState({\n      [name]: value \n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  formatTime = (dateSelected, timeSelected) => {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    return new Date(`${monthNames[dateSelected.getMonth()]} ${dateSelected.getDate()}, ${dateSelected.getFullYear()} ${timeSelected.getHours()}:${timeSelected.getMinutes()}:${timeSelected.getSeconds()}`).toString();\n  }\n\n  createTournamentFetch = () => {\n    this.setState({\n      createTournamentLoading: true\n    });\n    fetch(\"http://localhost:3000/api/tournaments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-access-token\": localStorage.token\n      },\n      body: JSON.stringify({\n        name: this.state.tournamentName,\n        entryFee: this.state.entryFee,\n        entryLimit: this.state.entryLimit,\n        startTime: this.formatTime(this.state.selectedDateForStart, this.state.selectedTimeForStart),\n        endTime: this.formatTime(this.state.selectedDateForEnd, this.state.selectedTimeForEnd)\n      })\n    })\n    .then(res => res.json())\n    .then(createdTournament => {\n      this.setState({\n        createTournamentLoading: false,\n        createTournamentSuccess: true\n      })\n      console.log(\"created\", createdTournament)\n\n    })\n    .catch(console.log)\n  }\n\n  render() {\n    console.log(this.state)\n    const { classes } = this.props;\n    return (\n      <Grid container className={classes.paper}>\n        <Grid className={classes.titleContainer} item xs={12} container direction=\"row\" alignItems=\"center\">\n          <Grid item className={classes.title}>\n            <Typography color=\"\" variant=\"h4\">\n              Tournament Details\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AddCircleOutlineIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <TextField\n          style={{margin: 5}}\n          color=\"primary\"\n          value={this.state.name}\n          onChange={this.handleChange}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"tournamentName\"\n          label=\"Tournament Name\"\n          name=\"tournamentName\"\n          autoFocus\n          InputLabelProps={{\n            classes: {\n              root: classes.cssLabel,\n              focused: classes.cssFocused,\n            },\n          }}\n          InputProps={{\n            classes: {\n              root: classes.cssOutlinedInput,\n              focused: classes.cssFocused,\n              notchedOutline: classes.notchedOutline,\n            },\n          }}\n\n        />\n        <Grid item xs={6} style={{padding: 5}}>\n          <TextField\n            fullWidth={true}\n            value={this.state.entryLimit}      \n            onChange={this.handleChange}        \n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            required\n            name=\"entryLimit\"\n            label=\"Max Players\"\n            id=\"\"\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused,\n              },\n            }}\n            InputProps={{\n              classes: {\n                root: classes.cssOutlinedInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n              },\n            }}\n\n          />\n        </Grid>\n        <Grid item xs={6} style={{padding: 5}}>\n          <TextField\n            InputLabelProps={{\n              style: {\n                color: 'white'\n              }\n            }}\n            value={this.state.entryFee}      \n            fullWidth={true}\n            onChange={this.handleChange}        \n            variant=\"outlined\"\n            type=\"number\"\n            margin=\"normal\"\n            required\n            name=\"entryFee\"\n            label=\"Entry Fee\"\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused,\n              },\n            }}\n            InputProps={{\n              classes: {\n                root: classes.cssOutlinedInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n              },\n            }}\n            id=\"\"\n          />\n        </Grid>\n        <DateAndTimeSelectors \n          name={\"Start\"}   \n          dateLabel={\"Choose start date\"}\n          timeLabel={\"Choose start time\"}\n          dateValue={this.state.selectedDateForStart}\n          timeValue={this.state.selectedTimeForStart}\n          handleChangeTime={this.handleChangeTime}\n        />\n        <DateAndTimeSelectors \n          name={\"End\"}   \n          dateLabel={\"Choose end date\"}\n          timeLabel={\"Choose end time\"}\n          dateValue={this.state.selectedDateForEnd}\n          timeValue={this.state.selectedTimeForEnd}\n          handleChangeTime={this.handleChangeTime}\n        />\n        <Button\n          onClick={this.handleModal}\n          fullWidth\n          variant=\"contained\"\n          className={classes.submit}\n        >\n          Create Tournament\n        </Button>\n        {/** I can pass props better than this but... */}\n        <CreateTournamentModal\n          createTournamentLoading={this.state.createTournamentLoading}\n          createTournamentSuccess={this.state.createTournamentSuccess}\n          open={this.state.modalOpen}\n          handleModal={this.handleModal}\n          createTournament={this.createTournamentFetch}\n          tournamentName={this.state.tournamentName}\n          entryLimit={this.state.entryLimit}\n          entryFee={this.state.entryFee}\n          startTime={this.formatTime(this.state.selectedDateForStart, this.state.selectedTimeForStart)}\n          endTime={this.formatTime(this.state.selectedDateForEnd, this.state.selectedTimeForEnd)}\n        />\n      </Grid>\n\n    )\n  }\n}\n\nexport default withStyles(useStyles, {withTheme: true})(CreateTournament);\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n// actions\nimport { loginWithToken } from \"./redux/actions/auth.actions\";\n// components \nimport Footer from './components/Footer';\n// containers \nimport Leaderboard from './containers/Leaderboard';\nimport MyTournaments from './containers/MyTournaments';\nimport Lobby from \"./containers/Lobby\";\nimport Login from \"./containers/Login\";\nimport Tournament from \"./containers/Tournament\";\nimport NavBar from \"./containers/NavBar\";\nimport CreateTournament from \"./containers/CreateTournament\";\n// MATERIAL UI \nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  app: {\n    minHeight: '100vh',\n    backgroundColor: theme.palette.primary.light\n  },\n  mainContainer: {\n    height: '85vh'\n  }\n});\n\nclass App extends React.Component {\n\n  state = {\n    loggedIn: false,\n  }\n\n  logIn = () => {\n    this.setState({\n      loggedIn: true\n    })\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      this.props.loginWithToken(localStorage.token)\n    }\n  }\n  \n  render() {\n    console.log(this.state)\n    const { classes } = this.props;\n    return (\n      <div className={classes.app}>\n        <BrowserRouter>\n          {this.state.loggedIn || localStorage.token ? (\n            <NavBar />\n          ) : null}\n          <div className={classes.mainContainer}>\n            <Switch>\n              <Route\n                exact\n                path=\"/lobby\"\n                render={(routeProps) => (\n                  <Lobby {...routeProps} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/\"\n                render={(routeProps) => (\n                  <Login logIn={this.logIn} {...routeProps} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/my-tournaments\"\n                render={(routeProps) => (\n                  <MyTournaments {...routeProps} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/leaderboard\"\n                render={(routeProps) => (\n                  <Leaderboard {...routeProps} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/create-tournament\"\n                render={(routeProps) => (\n                  <CreateTournament {...routeProps} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/tournament/:id\"\n                render={(routeProps) => (\n                  <Tournament {...routeProps} currentUser={this.props.currentUser} />\n                )}\n              />\n            </Switch>\n\n          </div>\n          {this.state.loggedIn || localStorage.token ? (\n            <Footer />\n          ) : null}\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.auth.currentUser,\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginWithToken }\n)(withStyles(useStyles, {withTheme: true})(App));\n","import { \n  FETCH_USER_INFORMATION_BEGIN,\n  FETCH_USER_INFORMATION_SUCCESS,\n  FETCH_USER_INFORMATION_FAILURE,\n} from \"../actions/auth.actions\";\n\nconst initialState = {\n  currentUser: null,\n  loggedIn: false,\n  loading: false,\n  error: null\n}\n\nconst authReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case FETCH_USER_INFORMATION_BEGIN: \n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_USER_INFORMATION_SUCCESS:\n      return {\n        loading: false,\n        loggedIn: true,\n        error: false,\n        currentUser: action.payload.userInfo\n      }\n    case FETCH_USER_INFORMATION_FAILURE:\n        return {\n          ...state,\n          loading: false,\n          error: action.payload.error\n        }\n    default:\n      return state;\n  }  \n}\n\nexport default authReducer;","import { \n  FETCH_TOURNAMENTS_BEGIN,\n  FETCH_TOURNAMENTS_SUCCESS,\n  FETCH_TOURNAMENTS_FAILURE\n} from \"../actions/tournament.actions\";\n\nconst initialState = {\n  tournamentsArr: [],\n  loadingTournaments: false,\n  tournamentsError: null,\n  tournamentById: {},\n  loadingTournamentById: false,\n  tournamentByIdError: null,\n}\n\nconst tournamentReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case FETCH_TOURNAMENTS_BEGIN: \n      return {\n        ...state,\n        loadingTournaments: true,\n        tournamentsError: null\n      };\n    case FETCH_TOURNAMENTS_SUCCESS:\n      return {\n        ...state,\n        loadingTournaments: false,\n        tournamentsArr: action.payload.tournamentsArr\n      }\n    case FETCH_TOURNAMENTS_FAILURE:\n      return {\n        ...state,\n        loadingTournaments: false,\n        tournamentsError: action.payload.error\n      }\n    default:\n      return state;\n  }  \n}\n\nexport default tournamentReducer;","import { \n  CREATE_ENTRY_BEGIN,\n  CREATE_ENTRY_SUCCESS,\n  CREATE_ENTRY_FAILURE,\n  FETCH_ENTRY_INFORMATION_BEGIN,\n  FETCH_ENTRY_INFORMATION_SUCCESS,\n  FETCH_ENTRY_INFORMATION_FAILURE,\n  FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN,\n  FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS,\n  FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE\n} from \"../actions/entry.actions\";\n\nconst initialState = {\n  createdEntry: null,\n  currentEntry: null,\n  tournamentEntries: [],\n  loadingCurrentEntry: false,\n  loadingCreatedEntry: false,\n  loadingTournamentEntries: false,\n  currentEntryError: null,\n  createdEntryError: null,\n  tournamentEntriesError: null\n}\n// make errors false on success and null on begin\nconst entryReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case FETCH_ENTRY_INFORMATION_BEGIN: \n      return {\n        ...state,\n        loadingCurrentEntry: true,\n        currentEntryError: null\n      };\n    case FETCH_ENTRY_INFORMATION_SUCCESS:\n      return {\n        ...state,\n        loadingCurrentEntry: false,\n        currentEntry: action.payload.entryInfo,\n        currentEntryError: false\n      }\n    case FETCH_ENTRY_INFORMATION_FAILURE:\n      return {\n        ...state,\n        loadingCurrentEntry: false,\n        currentEntryError: action.payload.error\n      }\n    case CREATE_ENTRY_BEGIN:\n      return {\n        ...state,\n        loadingCreatedEntry: true,\n        createdEntryError: null\n      }\n    case CREATE_ENTRY_SUCCESS:\n      return {\n        ...state,\n        loadingCreatedEntry: false,\n        createdEntry: action.payload.entryInfo,\n        createdEntryError: false\n      }\n    case CREATE_ENTRY_FAILURE:\n      return {\n        ...state,\n        loadingCreatedEntry: false,\n        createdEntryError: action.payload.error\n      }\n    case FETCH_ENTRIES_BY_TOURNAMENT_ID_BEGIN: \n      return {\n        ...state,\n        loadingTournamentEntries: true,\n        tournamentEntriesError: null\n      }\n    case FETCH_ENTRIES_BY_TOURNAMENT_ID_SUCCESS:\n      return {\n        ...state,\n        loadingTournamentEntries: false,\n        tournamentEntries: action.payload.entriesArr,\n        tournamentEntriesError: false\n      }\n    case FETCH_ENTRIES_BY_TOURNAMENT_ID_FAILURE: \n      return {\n        ...state,\n        loadingTournamentEntries: false,\n        tournamentEntriesError: action.payload.error\n      }\n    default:\n      return state;\n  }  \n}\n\nexport default entryReducer;","import { \n  CREATE_TRADE_BEGIN,\n  CREATE_TRADE_SUCCESS,\n  CREATE_TRADE_FAILURE,\n  FETCH_TRADES_BY_ENTRY_BEGIN,\n  FETCH_TRADES_BY_ENTRY_SUCCESS,\n  FETCH_TRADES_BY_ENTRY_FAILURE\n} from \"../actions/trade.actions\";\n\n\nconst initialState = {\n  createdTrade: [],\n  tradesByEntry: [],\n  loadingCreatedTrade: false,\n  loadingTradeByEntryArr: false,\n  createTradeErr: null,\n  tradesByEntryErr: null\n}\n\nconst tradeReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case CREATE_TRADE_BEGIN:\n      return {\n        ...state,\n        loadingCreatedTrade: true\n      }\n    case CREATE_TRADE_SUCCESS:\n      return {\n        ...state,\n        loadingCreatedTrade: false,\n        createdTrade: action.payload.tradeInfo\n      }\n    case CREATE_TRADE_FAILURE:\n      return {\n        ...state,\n        loadingCreatedTrade: false,\n        createTradeErr: action.payload.error\n      }\n    case FETCH_TRADES_BY_ENTRY_BEGIN:\n      return {\n        ...state,\n        loadingTradeByEntryArr: true\n      }\n    case FETCH_TRADES_BY_ENTRY_SUCCESS:\n      return {\n        ...state,\n        loadingTradeByEntryArr: false,\n        tradesByEntry: action.payload.tradesByEntry\n      }\n    case FETCH_TRADES_BY_ENTRY_FAILURE:\n      return {\n        ...state,\n        loadingTradeByEntryArr: false,\n        tradesByEntryErr: action.payload.err\n      }\n\n    default:\n      return state;\n  }  \n}\n\nexport default tradeReducer;","import { combineReducers } from \"redux\";\n// import reducers here\nimport auth from \"./auth.reducers\";\nimport tournament from \"./tournament.reducers\";\nimport entry from \"./entry.reducers\";\nimport trade from \"./trade.reducers\";\n\nexport default combineReducers({ auth, tournament, entry, trade });\n\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\nimport { createMuiTheme }  from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#484848\",\n      dark: \"#000000\"\n    },\n    secondary: {\n      main: \"#d84315\"\n    },\n    text: {\n      primary: \"#64dd17\",\n      secondary: \"#fafafa\"\n    }\n  }\n})\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}